searchState.loadedDescShard("imxrt_ral", 1, "MB6 completed transmission/reception when CAN_MCR[RFEN]=0, …\nNo occurrence of MB7 completing transmission/reception …\nMB7 completed transmission/reception when CAN_MCR[RFEN]=0, …\nBuffer MB i Interrupt\nBuffer MB i Mask\nBuffer MB i Mask\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nBit Rate Switch. This bit defines whether the bit rate is …\nMessage Buffer Code. This 4-bit field can be accessed …\nLength of the data to be stored/transmitted.\nExtended Data Length. This bit distinguishes between CAN …\nError State Indicator. This bit indicates if the …\nID Extended. One/zero for extended/standard format frame.\nRemote Transmission Request. One/zero for remote/data …\nSubstitute Remote Request. Contains a fixed recessive bit.\nFree-Running Counter Time stamp. This 16-bit field is a …\nContains extended (LOW word) identifier of message buffer.\nLocal priority. This 3-bit fieldis only used when LPRIO_EN …\nContains standard/extended (HIGH word) identifier of …\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nData byte 3 of Rx/Tx frame.\nData byte 2 of Rx/Tx frame.\nData byte 1 of Rx/Tx frame.\nData byte 0 of Rx/Tx frame.\nAbort Enable\nDMA Enable\nDoze Mode Enable\nCAN FD operation enable\nFreeze Enable\nFreeze Mode Acknowledge\nHalt FlexCAN\nID Acceptance Mode\nIndividual Rx Masking And Queue Enable\nLow-Power Mode Acknowledge\nLocal Priority Enable\nNumber Of The Last Message Buffer\nModule Disable\nFlexCAN Not Ready\nLegacy Rx FIFO Enable\nSelf Wake Up\nSoft Reset\nSelf Reception Disable\nSupervisor Mode\nWake Up Interrupt Mask\nWake Up Source\nWarning Interrupt Enable\nAbort disabled.\nAbort enabled.\nDMA feature for Legacy RX FIFO or Enhanced Rx FIFO are …\nDMA feature for Legacy RX FIFO or Enhanced Rx FIFO are …\nFlexCAN is not enabled to enter low-power mode when Doze …\nFlexCAN is enabled to enter low-power mode when Doze mode …\nCAN FD is disabled. FlexCAN is able to receive and …\nCAN FD is enabled. FlexCAN is able to receive and transmit …\nNot enabled to enter Freeze mode.\nEnabled to enter Freeze mode.\nFlexCAN not in Freeze mode, prescaler running.\nFlexCAN in Freeze mode, prescaler stopped.\nNo Freeze mode request.\nEnters Freeze mode if the FRZ bit is asserted.\nFormat A: One full ID (standard and extended) per ID …\nFormat B: Two full standard IDs or two partial 14-bit …\nFormat C: Four partial 8-bit Standard IDs per ID Filter …\nFormat D: All frames rejected.\nIndividual Rx masking and queue feature are disabled. For …\nIndividual Rx masking and queue feature are enabled.\nFlexCAN is not in a low-power mode.\nFlexCAN is in a low-power mode.\nLocal Priority disabled.\nLocal Priority enabled.\nEnable the FlexCAN module.\nDisable the FlexCAN module.\nFlexCAN module is either in Normal mode, Listen-Only mode …\nFlexCAN module is either in Disable mode, Doze mode , Stop …\nLegacy Rx FIFO not enabled.\nLegacy Rx FIFO enabled.\nFlexCAN Self Wake Up feature is disabled.\nFlexCAN Self Wake Up feature is enabled.\nNo reset request.\nResets the registers affected by soft reset.\nSelf reception enabled.\nSelf reception disabled.\nFlexCAN is in User mode. Affected registers allow both …\nFlexCAN is in Supervisor mode. Affected registers allow …\nWake Up Interrupt is disabled.\nWake Up Interrupt is enabled.\nFlexCAN uses the unfiltered Rx input to detect recessive …\nFlexCAN uses the filtered Rx input to detect recessive to …\nTWRNINT and RWRNINT bits are zero, independent of the …\nTWRNINT and RWRNINT bits are set when the respective error …\nRx Buffer 14 Mask Bits\nRx Buffer 15 Mask Bits\nLegacy Rx FIFO Global Mask Bits\nIdentifier Acceptance Filter Hit Indicator\nIndividual Mask Bits\nRx Mailboxes Global Mask Bits\nTimer Value\nThis field indicates the number of the Mailbox …\nThis field indicates the CRC value of the last message …\nThis bit provides a mask for the Bus Off Interrupt.\nThis bit defines how FLEXCAN recovers from Bus Off state\nThis bit provides a mask for the Error Interrupt.\nThis bit defines the ordering mechanism for Message Buffer …\nThis bit configures FLEXCAN to operate in Listen Only Mode\nThis bit configures FlexCAN to operate in Loop-Back Mode\nThis 8-bit field defines the ratio between the PE clock …\nThis 3-bit field defines the length of the Propagation …\nThis 3-bit field defines the length of Phase Buffer …\nThis 3-bit field defines the length of Phase Buffer …\nThis 2-bit field defines the maximum number of time quanta …\nThis bit provides a mask for the Rx Warning Interrupt …\nThis bit defines the sampling mode of CAN bits at the …\nThis bit enables a mechanism that resets the free-running …\nThis bit provides a mask for the Tx Warning Interrupt …\nBus Off interrupt disabled\nBus Off interrupt enabled\nAutomatic recovering from Bus Off state enabled, according …\nAutomatic recovering from Bus Off state disabled\nError interrupt disabled\nError interrupt enabled\nBuffer with highest priority is transmitted first\nLowest number buffer is transmitted first\nListen Only Mode is deactivated\nFLEXCAN module operates in Listen Only Mode\nLoop Back disabled\nLoop Back enabled\nRx Warning Interrupt disabled\nRx Warning Interrupt enabled\nJust one sample is used to determine the bit value\nThree samples are used to determine the value of the …\nTimer Sync feature disabled\nTimer Sync feature enabled\nTx Warning Interrupt disabled\nTx Warning Interrupt enabled\nThis bit controls the comparison of IDE and RTR bits …\nIf this bit is set the matching process starts from the …\nThis 4-bit field defines the number of Rx FIFO filters …\nIf this bit is asserted Remote Request Frame is submitted …\nThis 5-bit field indicates how many CAN bits the Tx …\nEnable unrestricted write access to FlexCAN memory in …\nRx Mailbox filter’s IDE bit is always compared and RTR …\nEnables the comparison of both Rx Mailbox filter’s IDE …\nMatching starts from Rx FIFO and continues on Mailboxes\nMatching starts from Mailboxes and continues on Rx FIFO\nRemote Response Frame is generated\nRemote Request Frame is stored\nKeep the write access restricted in some regions of …\nEnable unrestricted write access to FlexCAN memory\nCAN Bit Number\nCAN Finite State Machine\nArbitration Process in Progress\nMatching Process in Progress\nRx Matching Pointer\nTx Arbitration Pointer\nNo matching process ongoing.\nMatching process is in progress.\nNo matching process ongoing.\nMatching process is in progress.\nRx_Err_Counter\nTx_Err_Counter\nThis bit indicates that an Acknowledge Error has been …\nThis bit indicates when an inconsistency occurs between …\nThis bit indicates when an inconsistency occurs between …\nThis bit is set when FLEXCAN enters ‘Bus Off’ state\nThis bit indicates that a CRC Error has been detected by …\nThis bit indicates that at least one of the Error Bits …\nIf the LOM bit in the Control Register is asserted, after …\nThis bit indicates that a Form Error has been detected by …\nThis bit indicates when CAN bus is in IDLE state.Refer to .\nIf the WRN_EN bit in MCR is asserted, the RWRN_INT bit is …\nThis bit indicates if FlexCAN is receiving a message. …\nThis bit indicates when repetitive errors are occurring …\nThis bit indicates that a Stuffing Error has been detected.\nThis read-only flag indicates whether the FlexCAN is …\nIf the WRN_EN bit in MCR is asserted, the TWRN_INT bit is …\nThis bit indicates if FLEXCAN is transmitting a …\nThis bit indicates when repetitive errors are occurring …\nWhen FLEXCAN is Stop Mode and a recessive to dominant …\nNo such occurrence\nAn ACK error occurred since last read of this register\nNo such occurrence\nAt least one bit sent as dominant is received as recessive\nNo such occurrence\nAt least one bit sent as recessive is received as dominant\nNo such occurrence\nFLEXCAN module entered ‘Bus Off’ state\nNo such occurrence\nA CRC error occurred since last read of this register.\nNo such occurrence\nIndicates setting of any Error Bit in the Error and Status …\nError Active\nError Passive\nBus off\nNo such occurrence\nA Form Error occurred since last read of this register\nNo such occurrence\nCAN bus is now IDLE\nNo such occurrence\nThe Rx error counter transition from &lt; 96 to &gt;= 96\nFLEXCAN is receiving a message\nFLEXCAN is transmitting a message\nNo such occurrence\nRx_Err_Counter &gt;= 96\nNo such occurrence.\nA Stuffing Error occurred since last read of this register.\nFlexCAN is not synchronized to the CAN bus\nFlexCAN is synchronized to the CAN bus\nNo such occurrence\nThe Tx error counter transition from &lt; 96 to &gt;= 96\nFLEXCAN is receiving a message\nFLEXCAN is transmitting a message\nNo such occurrence\nTX_Err_Counter &gt;= 96\nNo such occurrence\nIndicates a recessive to dominant transition received on …\nIf ESR2[VPS] is asserted, this bit indicates whether there …\nIf ESR2[VPS] is asserted, his 7-bit field indicates the …\nThis bit indicates whether IMB and LPTM contents are …\nIf ESR2[VPS] is asserted, the ESR2[LPTM] is not an …\nIf ESR2[VPS] is asserted, there is at least one inactive …\nContents of IMB and LPTM are invalid\nContents of IMB and LPTM are valid\nIt determines the Glitch Filter Width\nEach bit flags the respective FLEXCAN Message Buffer (MB8 …\nIf the Rx FIFO is not enabled, these bits flag the …\nIf the Rx FIFO is not enabled, this bit flags the …\nIf the Rx FIFO is not enabled, this bit flags the …\nIf the Rx FIFO is not enabled, this bit flags the …\nNo such occurrence\nThe corresponding MB has successfully completed …\nNo such occurrence\nCorresponding MB completed transmission/reception\nNo such occurrence\nMB5 completed transmission/reception or frames available …\nNo such occurrence\nMB6 completed transmission/reception or FIFO almost full\nNo such occurrence\nMB7 completed transmission/reception or FIFO overflow\nEach bit flags the respective FLEXCAN Message Buffer (MB32 …\nNo such occurrence\nThe corresponding buffer has successfully completed …\nEach bit enables or disables the respective FLEXCAN …\nThe corresponding buffer Interrupt is disabled\nThe corresponding buffer Interrupt is enabled\nEach bit enables or disables the respective FLEXCAN …\nThe corresponding buffer Interrupt is disabled\nThe corresponding buffer Interrupt is enabled\nThis bit is supplied for backwards compatibility reasons\nThe FRZ bit specifies the FLEXCAN behavior when the HALT …\nThis read-only bit indicates that FLEXCAN is in Freeze …\nAssertion of this bit puts the FLEXCAN module into Freeze …\nThis 2-bit field identifies the format of the elements of …\nThis bit indicates whether Rx matching process will be …\nThis read-only bit indicates that FLEXCAN is either in …\nThis bit is provided for backwards compatibility reasons\nThis 7-bit field defines the number of the last Message …\nThis bit controls whether FLEXCAN is enabled or not\nThis read-only bit indicates that FLEXCAN is either in …\nThis bit controls whether the Rx FIFO feature is enabled …\nThis bit enables the Self Wake Up feature when FLEXCAN is …\nWhen this bit is asserted, FlexCAN resets its internal …\nThis bit defines whether FlexCAN is allowed to receive …\nThis bit configures some of the FLEXCAN registers to be …\nThis bit enables the Wake Up Interrupt generation.\nThis bit defines whether the integrated low-pass filter is …\nWhen asserted, this bit enables the generation of the …\nAbort disabled\nAbort enabled\nNot enabled to enter Freeze Mode\nEnabled to enter Freeze Mode\nFLEXCAN not in Freeze Mode, prescaler running\nFLEXCAN in Freeze Mode, prescaler stopped\nNo Freeze Mode request.\nEnters Freeze Mode if the FRZ bit is asserted.\nFormat A One full ID (standard or extended) per ID filter …\nFormat B Two full standard IDs or two partial 14-bit …\nFormat C Four partial 8-bit IDs (standard or extended) per …\nFormat D All frames rejected.\nIndividual Rx masking and queue feature are disabled.For …\nIndividual Rx masking and queue feature are enabled.\nFLEXCAN not in any of the low power modes\nFLEXCAN is either in Disable Mode, or Stop mode\nLocal Priority disabled\nLocal Priority enabled\nEnable the FLEXCAN module\nDisable the FLEXCAN module\nFLEXCAN module is either in Normal Mode, Listen-Only Mode …\nFLEXCAN module is either in Disable Mode, Stop Mode or …\nFIFO not enabled\nFIFO enabled\nFLEXCAN Self Wake Up feature is disabled\nFLEXCAN Self Wake Up feature is enabled\nNo reset request\nReset the registers\nSelf reception enabled\nSelf reception disabled\nFlexCAN is in User Mode. Affected registers allow both …\nFlexCAN is in Supervisor Mode. Affected registers allow …\nWake Up Interrupt is disabled\nWake Up Interrupt is enabled\nFLEXCAN uses the unfiltered FLEXCAN_RX input to detect …\nFLEXCAN uses the filtered FLEXCAN_RX input to detect …\nTWRN_INT and RWRN_INT bits are zero, independent of the …\nTWRN_INT and RWRN_INT bits are set when the respective …\nThese bits mask Mailbox 14 filter bits in the same fashion …\nthe corresponding bit in the filter is “don’t care”\nThe corresponding bit in the filter is checked\nThese bits mask Mailbox 15 filter bits in the same fashion …\nthe corresponding bit in the filter is “don’t care”\nThe corresponding bit in the filter is checked\nThese bits mask the ID Filter Table elements bits in a …\nThe corresponding bit in the filter is “don’t care”\nThe corresponding bit in the filter is checked\nThis 9-bit field indicates which Identifier Acceptance …\nThese bits mask both Mailbox filter and Rx FIFO ID Filter …\nthe corresponding bit in the filter is “don’t care”\nThe corresponding bit in the filter is checked\nThese bits mask the Mailbox filter bits as shown in the …\nthe corresponding bit in the filter is “don’t care”\nThe corresponding bit in the filter is checked against the …\nTIMER\nCCM Arm Clock Root Register\nCCM Arm Clock Root Register\nCCM Bus Clock Divider Register\nCCM Bus Clock Divider Register\nCCM Bus Clock Multiplexer Register\nCCM Bus Clock Multiplexer Register\nCCM Clock Gating Register 0\nCCM Clock Gating Register 0\nCCM Clock Gating Register 1\nCCM Clock Gating Register 1\nCCM Clock Gating Register 2\nCCM Clock Gating Register 2\nCCM Clock Gating Register 3\nCCM Clock Gating Register 3\nCCM Clock Gating Register 4\nCCM Clock Gating Register 4\nCCM Clock Gating Register 5\nCCM Clock Gating Register 5\nCCM Clock Gating Register 6\nCCM Clock Gating Register 6\nCCM Clock Gating Register 7\nCCM Clock Gating Register 7\nCCM\nCCM Clock Output Source Register\nCCM Clock Output Source Register\nCCM Control Register\nCCM Control Register\nCCM Clock Switcher Register\nCCM Clock Switcher Register\nCCM D1 Clock Divider Register\nCCM D1 Clock Divider Register\nCCM Divider Handshake In-Process Register\nCCM Divider Handshake In-Process Register\nCCM General Purpose Register\nCCM General Purpose Register\nCCM Interrupt Mask Register\nCCM Interrupt Mask Register\nCCM Interrupt Status Register\nCCM Interrupt Status Register\nCCM Low Power Control Register\nCCM Low Power Control Register\nCCM Module Enable Overide Register\nCCM Module Enable Overide Register\nCCM Clock Divider Register\nCCM Clock Divider Register\nCCM Clock Divider Register\nCCM Clock Divider Register\nCCM Serial Clock Divider Register 1\nCCM Serial Clock Divider Register 1\nCCM Serial Clock Divider Register 2\nCCM Serial Clock Divider Register 2\nCCM Serial Clock Divider Register 3\nCCM Serial Clock Divider Register 3\nCCM Serial Clock Multiplexer Register 1\nCCM Serial Clock Multiplexer Register 1\nCCM Serial Clock Multiplexer Register 2\nCCM Serial Clock Multiplexer Register 2\nCCM Status Register\nCCM Status Register\nCCM\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nDivider for ARM clock root\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nDivider for AHB PODF\nDivider for ipg podf.\nDivider for periph_clk2_podf.\nSelector for peripheral main clock\nSEMC alternative clock select\nSEMC clock source select\nPost divider for SEMC clock\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nderive clock selected by CCM_CBCMR[CORE_CLK_PRE_SEL]\nderive clock selected by CCM_CBCMR[PERIPH_CLK2_SEL]\nPLL2 PFD2 will be selected as alternative clock for SEMC …\nPLL3 PFD1 will be selected as alternative clock for SEMC …\nPeriph_clk output will be used as SEMC clock root\nSEMC alternative clock will be used as SEMC clock root\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nSelector for flexspi2 clock multiplexer\nDivider for flexspi2 clock root.\nPost-divider for LCDIF clock.\nSelector for lpspi clock multiplexer\nDivider for LPSPI. Divider should be updated when output …\nSelector for peripheral clk2 clock multiplexer\nSelector for pre_periph clock multiplexer\nSelector for Trace clock multiplexer\nderive clock from PLL2 PFD2\nderive clock from PLL3 PFD0\nderive clock from PLL3 PFD1\nderive clock from PLL2 (pll2_main_clk)\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nderive clock from PLL3 PFD1 clk\nderive clock from PLL3 PFD0\nderive clock from PLL2\nderive clock from PLL2 PFD2\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nderive clock from pll3_sw_clk\nderive clock from osc_clk\nderive clock from pll2_bypass_clk\nderive clock from PLL2\nderive clock from PLL3 PFD3\nderive clock from PLL2 PFD3\nderive clock from PLL6\nderive clock from PLL2\nderive clock from PLL2 PFD2\nderive clock from PLL2 PFD0\nderive clock from PLL2 PFD1\naips_tz1 clocks (aips_tz1_clk_enable)\naips_tz2 clocks (aips_tz2_clk_enable)\ncan2_serial clock (can2_serial_clk_enable)\ntrace clock (trace_clk_enable)\ngpt2 bus clocks (gpt2_bus_clk_enable)\ngpt2 serial clocks (gpt2_serial_clk_enable)\nlpuart2 clock (lpuart2_clk_enable)\ngpio2_clocks (gpio2_clk_enable)\nmqs clock ( mqs_hmclk_clock_enable)\nflexspi_exsc clock (flexspi_exsc_clk_enable)\nsim_m or sim_main register access clock …\ndcp clock (dcp_clk_enable)\nlpuart3 clock (lpuart3_clk_enable)\ncan1 clock (can1_clk_enable)\ncan1_serial clock (can1_serial_clk_enable)\ncan2 clock (can2_clk_enable)\nlpspi1 clocks (lpspi1_clk_enable)\nlpspi2 clocks (lpspi2_clk_enable)\ngpt1 bus clock (gpt_clk_enable)\ngpt1 serial clock (gpt_serial_clk_enable)\nlpuart4 clock (lpuart4_clk_enable)\ngpio1 clock (gpio1_clk_enable)\ncsu clock (csu_clk_enable)\ngpio5 clock (gpio5_clk_enable)\nlpspi3 clocks (lpspi3_clk_enable)\nlpspi4 clocks (lpspi4_clk_enable)\nadc2 clock (adc2_clk_enable)\nenet clock (enet_clk_enable)\npit clocks (pit_clk_enable)\naoi2 clocks (aoi2_clk_enable)\nadc1 clock (adc1_clk_enable)\nsemc_exsc clock (semc_exsc_clk_enable)\nocram_exsc clock (ocram_exsc_clk_enable)\ncsi clock (csi_clk_enable)\nipmux3 clock (ipmux3_clk_enable)\nxbar1 clock (xbar1_clk_enable)\nxbar2 clock (xbar2_clk_enable)\ngpio3 clock (gpio3_clk_enable)\nlcd clocks (lcd_clk_enable)\npxp clocks (pxp_clk_enable)\niomuxc_snvs clock (iomuxc_snvs_clk_enable)\nlpi2c1 clock (lpi2c1_clk_enable)\nlpi2c2 clock (lpi2c2_clk_enable)\nlpi2c3 clock (lpi2c3_clk_enable)\nOCOTP_CTRL clock (iim_clk_enable)\nxbar3 clock (xbar3_clk_enable)\nipmux1 clock (ipmux1_clk_enable)\nipmux2 clock (ipmux2_clk_enable)\nflexio2 clocks (flexio2_clk_enable)\nlpuart5 clock (lpuart5_clk_enable)\nacmp1 clocks (acmp1_clk_enable)\nacmp2 clocks (acmp2_clk_enable)\nacmp3 clocks (acmp3_clk_enable)\nacmp4 clocks (acmp4_clk_enable)\nThe OCRAM clock cannot be turned off when the CM cache is …\niomuxc_snvs_gpr clock (iomuxc_snvs_gpr_clk_enable)\nsemc clocks (semc_clk_enable)\nlpuart6 clock (lpuart6_clk_enable)\naoi1 clock (aoi1_clk_enable)\nlcdif pix clock (lcdif_pix_clk_enable)\ngpio4 clock (gpio4_clk_enable)\newm clocks (ewm_clk_enable)\nwdog1 clock (wdog1_clk_enable)\nflexram clock (flexram_clk_enable)\nsim_m7 register access clock (sim_m7_mainclk_r_enable)\niomuxc clock (iomuxc_clk_enable)\npwm3 clocks (pwm3_clk_enable)\npwm4 clocks (pwm4_clk_enable)\nenc1 clocks (enc1_clk_enable)\nenc2 clocks (enc2_clk_enable)\nenc3 clocks (enc3_clk_enable)\nenc4 clocks (enc4_clk_enable)\niomuxc gpr clock (iomuxc_gpr_clk_enable)\nbee clock(bee_clk_enable)\nsim_m7 clock (sim_m7_clk_enable)\ntsc_dig clock (tsc_clk_enable)\nsim_m clocks (sim_m_clk_enable)\nsim_ems clocks (sim_ems_clk_enable)\npwm1 clocks (pwm1_clk_enable)\npwm2 clocks (pwm2_clk_enable)\nrom clock (rom_clk_enable)\nflexio1 clock (flexio1_clk_enable)\nsai2 clock (sai2_clk_enable)\nsai3 clock (sai3_clk_enable)\nlpuart1 clock (lpuart1_clk_enable)\nlpuart7 clock (lpuart7_clk_enable)\nsnvs_hp clock (snvs_hp_clk_enable)\nsnvs_lp clock (snvs_lp_clk_enable)\nwdog3 clock (wdog3_clk_enable)\ndma clock (dma_clk_enable)\nkpp clock (kpp_clk_enable)\nwdog2 clock (wdog2_clk_enable)\naipstz4 clocks (aips_tz4_clk_enable)\nspdif clock (spdif_clk_enable)\nsim_main clock (sim_main_clk_enable)\nsai1 clock (sai1_clk_enable)\nusboh3 clock (usboh3_clk_enable)\nusdhc1 clocks (usdhc1_clk_enable)\nsim_axbs_p_clk_enable\nanadig clocks (anadig_clk_enable)\nlpi2c4 serial clock (lpi2c4_serial_clk_enable)\ntimer1 clocks (timer1_clk_enable)\ntimer2 clocks (timer2_clk_enable)\ntimer3 clocks (timer3_clk_enable)\nusdhc2 clocks (usdhc2_clk_enable)\ndcdc clocks (dcdc_clk_enable)\nipmux4 clock (ipmux4_clk_enable)\nflexspi clocks (flexspi_clk_enable) sim_ems_clk_enable …\ntrng clock (trng_clk_enable)\nlpuart8 clocks (lpuart8_clk_enable)\ntimer4 clocks (timer4_clk_enable)\naips_tz3 clock (aips_tz3_clk_enable)\nenet2_clk_enable\nflexspi2_clk_enable\naxbs_l_clk_enable\ncan3_clk_enable\ncan3_serial_clk_enable\naips_lite_clk_enable\nflexio3_clk_enable\nSetting the divider of CCM_CLKO1\nEnable of CCM_CLKO1 clock\nSelection of the clock to be generated on CCM_CLKO1\nSetting the divider of CCM_CLKO2\nEnable of CCM_CLKO2 clock\nSelection of the clock to be generated on CCM_CLKO2\nCCM_CLKO1 output to reflect CCM_CLKO1 or CCM_CLKO2 clocks\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nCCM_CLKO1 disabled.\nCCM_CLKO1 enabled.\nUSB1 PLL clock (divided by 2)\nSYS PLL clock (divided by 2)\nlcdif_pix_clk_root\nahb_clk_root\nipg_clk_root\nperclk_root\nckil_sync_clk_root\npll4_main_clk\nVIDEO PLL clock (divided by 2)\nsemc_clk_root\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nCCM_CLKO2 disabled.\nCCM_CLKO2 enabled.\ncsi_clk_root\nosc_clk\nusdhc2_clk_root\nsai1_clk_root\nsai2_clk_root\nsai3_clk_root (shared with ADC1 and ADC2 alt_clk root)\ncan_clk_root (FlexCAN, shared with CANFD)\nflexspi_clk_root\nuart_clk_root\nspdif0_clk_root\nusdhc1_clk_root\nlpi2c_clk_root\nCCM_CLKO1 output drives CCM_CLKO1 clock\nCCM_CLKO1 output drives CCM_CLKO2 clock\nOn chip oscillator enable bit - this bit value is …\nOscillator ready counter value. These bits define value of …\nEnable for REG_BYPASS_COUNTER\nCounter for analog_reg_bypass signal assertion after …\ndisable on chip oscillator\nenable on chip oscillator\nREG_BYPASS_COUNTER disabled\nREG_BYPASS_COUNTER enabled.\nno delay\n1 CKIL clock period delay\n63 CKIL clock periods delay\nSelects source to generate pll3_sw_clk. This bit should …\npll3_main_clk\npll3 bypass clock\nDivider for flexio1 clock podf. Divider should be updated …\nDivider for flexio1 clock pred. Divider should be updated …\nSelector for flexio1 clock multiplexer\nDivider for spdif0 clock podf. Divider should be updated …\nDivider for spdif0 clock pred. Divider should be updated …\nSelector for spdif0 clock multiplexer\nDivide by 1\nDivide by 2\nDivide by 3\nDivide by 4\nDivide by 5\nDivide by 6\nDivide by 7\nDivide by 8\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nderive clock from PLL4 divided clock\nderive clock from PLL3 PFD2 clock\nderive from PLL2\nderive clock from pll3_sw_clk\nDivide by 1\nDivide by 2\nDivide by 3\nDivide by 4\nDivide by 5\nDivide by 6\nDivide by 7\nDivide by 8\nDivide by 1\nDivide by 2\nDivide by 3\nDivide by 4\nDivide by 5\nDivide by 6\nDivide by 7\nDivide by 8\nderive clock from PLL4\nderive clock from PLL3 PFD2\nderive clock from PLL5\nderive clock from pll3_sw_clk\nBusy indicator for ahb_podf.\nBusy indicator for arm_podf.\nBusy indicator for periph2_clk_sel mux control.\nBusy indicator for periph_clk_sel mux control.\nBusy indicator for semc_podf.\ndivider is not busy and its value represents the actual …\ndivider is busy with handshake process with module. The …\ndivider is not busy and its value represents the actual …\ndivider is busy with handshake process with module. The …\nmux is not busy and its value represents the actual …\nmux is busy with handshake process with module. The value …\nmux is not busy and its value represents the actual …\nmux is busy with handshake process with module. The value …\ndivider is not busy and its value represents the actual …\ndivider is busy with handshake process with module. The …\nDefines the value of the output signal cgpr_dout[4]. Gate …\nFast PLL enable.\nControl for the Deep Sleep signal to the ARM Platform …\nDefines clock dividion of clock for stby_count (pmic delay …\nSystem memory DS control\nfuse programing supply voltage is gated off to the efuse …\nallow fuse programing.\nEngage PLL enable default way.\nEngage PLL enable 3 CKIL clocks earlier at exiting low …\nDisable the clock to the ARM platform memories when …\nKeep the clocks to the ARM platform memories enabled only …\nclock is not divided\nclock is divided /8\nDisable memory DS mode always\nEnable memory (outside ARM platform) DS mode when system …\nenable memory (outside ARM platform) DS mode when system …\nmask interrupt generation due to frequency change of …\nmask interrupt generation due to frequency change of …\nmask interrupt generation due to on board oscillator ready\nmask interrupt generation due to lrf of PLLs\nmask interrupt generation due to update of periph2_clk_sel.\nmask interrupt generation due to update of periph_clk_sel.\nmask interrupt generation due to frequency change of …\ndon’t mask interrupt due to frequency change of arm_podf …\nmask interrupt due to frequency change of arm_podf\ndon’t mask interrupt due to frequency change of ahb_podf …\nmask interrupt due to frequency change of ahb_podf\ndon’t mask interrupt due to on board oscillator ready - …\nmask interrupt due to on board oscillator ready\ndon’t mask interrupt due to lrf of PLLs - interrupt will …\nmask interrupt due to lrf of PLLs\ndon’t mask interrupt due to update of periph2_clk_sel - …\nmask interrupt due to update of periph2_clk_sel\ndon’t mask interrupt due to update of periph_clk_sel - …\nmask interrupt due to update of periph_clk_sel\ndon’t mask interrupt due to frequency change of …\nmask interrupt due to frequency change of semc_podf\nCCM interrupt request 1 generated due to frequency change …\nCCM interrupt request 1 generated due to frequency change …\nCCM interrupt request 2 generated due to on board …\nCCM interrupt request 2 generated due to lock of all …\nCCM interrupt request 1 generated due to frequency change …\nCCM interrupt request 1 generated due to update of …\nCCM interrupt request 1 generated due to frequency change …\ninterrupt is not generated due to frequency change of …\ninterrupt generated due to frequency change of ahb_podf\ninterrupt is not generated due to frequency change of …\ninterrupt generated due to frequency change of arm_podf\ninterrupt is not generated due to on board oscillator ready\ninterrupt generated due to on board oscillator ready\ninterrupt is not generated due to lock ready of all …\ninterrupt generated due to lock ready of all enabled and …\ninterrupt is not generated due to frequency change of …\ninterrupt generated due to frequency change of …\ninterrupt is not generated due to update of periph_clk_sel.\ninterrupt generated due to update of periph_clk_sel.\ninterrupt is not generated due to frequency change of …\ninterrupt generated due to frequency change of semc_podf\nDefine if ARM clocks (arm_clk, soc_mxclk, soc_pclk, …\nBypass low power mode handshake. This bit should always be …\nBypass low power mode handshake. This bit should always be …\nIn run mode, software can manually control powering down …\ndis_ref_osc - in run mode, software can manually control …\nSetting the low power mode that system will enter on next …\nMask WFI of core0 for entering low power mode Assertion of …\nMask L2CC IDLE for entering low power mode\nMask SCU IDLE for entering low power mode Assertion of all …\nStandby clock oscillator bit\nStandby counter definition\nVoltage standby request bit\nARM clock enabled on wait mode.\nARM clock disabled on wait mode. .\nOn chip oscillator will not be powered down, i.e. …\nOn chip oscillator will be powered down, i.e. cosc_pwrdown …\nexternal high frequency oscillator will be enabled, i.e. …\nexternal high frequency oscillator will be disabled, i.e. …\nRemain in run mode\nTransfer to wait mode\nTransfer to stop mode\nWFI of core0 is not masked\nWFI of core0 is masked\nL2CC IDLE is not masked\nL2CC IDLE is masked\nSCU IDLE is not masked\nSCU IDLE is masked\nOn-chip oscillator will not be powered down, after next …\nOn-chip oscillator will be powered down, after next …\nCCM will wait (1*pmic_delay_scaler)+1 ckil clock cycles\nCCM will wait (3*pmic_delay_scaler)+1 ckil clock cycles\nCCM will wait (7*pmic_delay_scaler)+1 ckil clock cycles\nCCM will wait (15*pmic_delay_scaler)+1 ckil clock cycles\nVoltage will not be changed to standby voltage after next …\nVoltage will be requested to change to standby voltage …\nOveride clock enable signal from CAN1 - clock will not be …\nOveride clock enable signal from CAN2 - clock will not be …\nOveride clock enable signal from FlexCAN3(CANFD) - clock …\nOveride clock enable signal from GPT - clock will not be …\nOveride clock enable signal from PIT - clock will not be …\nOveride clock enable signal from TRNG\noveride clock enable signal from USDHC.\ndon’t overide module enable signal\noveride module enable signal\ndon’t override module enable signal\noverride module enable signal\ndon’t override module enable signal\noverride module enable signal\ndon’t override module enable signal\noverride module enable signal\ndon’t override module enable signal\noverride module enable signal\ndon’t override module enable signal\noverride module enable signal\ndon’t override module enable signal\noverride module enable signal\nDivider for flexio2 clock. Divider should be updated when …\nDivider for flexio2 clock.\nDivider for sai1 clock podf. The input clock to this …\nDivider for sai1 clock pred.\nDivider for sai3 clock podf. The input clock to this …\nDivider for sai3 clock pred.\nDivide by 1\nDivide by 2\nDivide by 3\nDivide by 4\nDivide by 5\nDivide by 6\nDivide by 7\nDivide by 8\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nDivide by 1\nDivide by 10\nDivide by 11\nDivide by 12\nDivide by 13\nDivide by 14\nDivide by 15\nDivide by 16\nDivide by 17\nDivide by 18\nDivide by 19\nDivide by 2\nDivide by 20\nDivide by 21\nDivide by 22\nDivide by 23\nDivide by 24\nDivide by 25\nDivide by 26\nDivide by 27\nDivide by 28\nDivide by 29\nDivide by 3\nDivide by 30\nDivide by 31\nDivide by 32\nDivide by 33\nDivide by 34\nDivide by 35\nDivide by 36\nDivide by 37\nDivide by 38\nDivide by 39\nDivide by 4\nDivide by 40\nDivide by 41\nDivide by 42\nDivide by 43\nDivide by 44\nDivide by 45\nDivide by 46\nDivide by 47\nDivide by 48\nDivide by 49\nDivide by 5\nDivide by 50\nDivide by 51\nDivide by 52\nDivide by 53\nDivide by 54\nDivide by 55\nDivide by 56\nDivide by 57\nDivide by 58\nDivide by 59\nDivide by 6\nDivide by 60\nDivide by 61\nDivide by 62\nDivide by 63\nDivide by 64\nDivide by 7\nDivide by 8\nDivide by 9\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nDivide by 1\nDivide by 10\nDivide by 11\nDivide by 12\nDivide by 13\nDivide by 14\nDivide by 15\nDivide by 16\nDivide by 17\nDivide by 18\nDivide by 19\nDivide by 2\nDivide by 20\nDivide by 21\nDivide by 22\nDivide by 23\nDivide by 24\nDivide by 25\nDivide by 26\nDivide by 27\nDivide by 28\nDivide by 29\nDivide by 3\nDivide by 30\nDivide by 31\nDivide by 32\nDivide by 33\nDivide by 34\nDivide by 35\nDivide by 36\nDivide by 37\nDivide by 38\nDivide by 39\nDivide by 4\nDivide by 40\nDivide by 41\nDivide by 42\nDivide by 43\nDivide by 44\nDivide by 45\nDivide by 46\nDivide by 47\nDivide by 48\nDivide by 49\nDivide by 5\nDivide by 50\nDivide by 51\nDivide by 52\nDivide by 53\nDivide by 54\nDivide by 55\nDivide by 56\nDivide by 57\nDivide by 58\nDivide by 59\nDivide by 6\nDivide by 60\nDivide by 61\nDivide by 62\nDivide by 63\nDivide by 64\nDivide by 7\nDivide by 8\nDivide by 9\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nDivider for sai2 clock podf. The input clock to this …\nDivider for sai2 clock pred.Divider should be updated when …\nDivide by 1\nDivide by 10\nDivide by 11\nDivide by 12\nDivide by 13\nDivide by 14\nDivide by 15\nDivide by 16\nDivide by 17\nDivide by 18\nDivide by 19\nDivide by 2\nDivide by 20\nDivide by 21\nDivide by 22\nDivide by 23\nDivide by 24\nDivide by 25\nDivide by 26\nDivide by 27\nDivide by 28\nDivide by 29\nDivide by 3\nDivide by 30\nDivide by 31\nDivide by 32\nDivide by 33\nDivide by 34\nDivide by 35\nDivide by 36\nDivide by 37\nDivide by 38\nDivide by 39\nDivide by 4\nDivide by 40\nDivide by 41\nDivide by 42\nDivide by 43\nDivide by 44\nDivide by 45\nDivide by 46\nDivide by 47\nDivide by 48\nDivide by 49\nDivide by 5\nDivide by 50\nDivide by 51\nDivide by 52\nDivide by 53\nDivide by 54\nDivide by 55\nDivide by 56\nDivide by 57\nDivide by 58\nDivide by 59\nDivide by 6\nDivide by 60\nDivide by 61\nDivide by 62\nDivide by 63\nDivide by 64\nDivide by 7\nDivide by 8\nDivide by 9\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nDivider for trace clock. Divider should be updated when …\nDivider for uart clock podf.\nSelector for the UART clock multiplexor\nDivider for usdhc1 clock podf. Divider should be updated …\nDivider for usdhc2 clock. Divider should be updated when …\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\nDivide by 1\nDivide by 10\nDivide by 11\nDivide by 12\nDivide by 13\nDivide by 14\nDivide by 15\nDivide by 16\nDivide by 17\nDivide by 18\nDivide by 19\nDivide by 2\nDivide by 20\nDivide by 21\nDivide by 22\nDivide by 23\nDivide by 24\nDivide by 25\nDivide by 26\nDivide by 27\nDivide by 28\nDivide by 29\nDivide by 3\nDivide by 30\nDivide by 31\nDivide by 32\nDivide by 33\nDivide by 34\nDivide by 35\nDivide by 36\nDivide by 37\nDivide by 38\nDivide by 39\nDivide by 4\nDivide by 40\nDivide by 41\nDivide by 42\nDivide by 43\nDivide by 44\nDivide by 45\nDivide by 46\nDivide by 47\nDivide by 48\nDivide by 49\nDivide by 5\nDivide by 50\nDivide by 51\nDivide by 52\nDivide by 53\nDivide by 54\nDivide by 55\nDivide by 56\nDivide by 57\nDivide by 58\nDivide by 59\nDivide by 6\nDivide by 60\nDivide by 61\nDivide by 62\nDivide by 63\nDivide by 64\nDivide by 7\nDivide by 8\nDivide by 9\nderive clock from pll3_80m\nderive clock from osc_clk\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nPre-divider for lcdif clock. Divider should be updated …\nSelector for lcdif root clock pre-multiplexer\nDivider for lpi2c clock podf. Divider should be updated …\nSelector for the LPI2C clock multiplexor\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nderive clock from PLL2\nderive clock from PLL3 PFD3\nderive clock from PLL5\nderive clock from PLL2 PFD0\nderive clock from PLL2 PFD1\nderive clock from PLL3 PFD1\nDivide by 1\nDivide by 10\nDivide by 11\nDivide by 12\nDivide by 13\nDivide by 14\nDivide by 15\nDivide by 16\nDivide by 17\nDivide by 18\nDivide by 19\nDivide by 2\nDivide by 20\nDivide by 21\nDivide by 22\nDivide by 23\nDivide by 24\nDivide by 25\nDivide by 26\nDivide by 27\nDivide by 28\nDivide by 29\nDivide by 3\nDivide by 30\nDivide by 31\nDivide by 32\nDivide by 33\nDivide by 34\nDivide by 35\nDivide by 36\nDivide by 37\nDivide by 38\nDivide by 39\nDivide by 4\nDivide by 40\nDivide by 41\nDivide by 42\nDivide by 43\nDivide by 44\nDivide by 45\nDivide by 46\nDivide by 47\nDivide by 48\nDivide by 49\nDivide by 5\nDivide by 50\nDivide by 51\nDivide by 52\nDivide by 53\nDivide by 54\nDivide by 55\nDivide by 56\nDivide by 57\nDivide by 58\nDivide by 59\nDivide by 6\nDivide by 60\nDivide by 61\nDivide by 62\nDivide by 63\nDivide by 64\nDivide by 7\nDivide by 8\nDivide by 9\nderive clock from pll3_60m\nderive clock from osc_clk\nSelector for csi_mclk multiplexer\nPost divider for csi_mclk. Divider should be updated when …\nderive clock from osc_clk (24M)\nderive clock from PLL2 PFD2\nderive clock from pll3_120M\nderive clock from PLL3 PFD1\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nSelector for flexspi clock multiplexer\nDivider for flexspi clock root.\nSelector for the perclk clock multiplexor\nDivider for perclk podf.\nSelector for sai1 clock multiplexer\nSelector for sai2 clock multiplexer\nSelector for sai3 clock multiplexer\nSelector for usdhc1 clock multiplexer\nSelector for usdhc2 clock multiplexer\nderive clock from PLL2\nderive clock from pll3_sw_clk\nderive clock from PLL2 PFD2\nderive clock from PLL3 PFD0\ndivide by 1\ndivide by 2\ndivide by 3\ndivide by 4\ndivide by 5\ndivide by 6\ndivide by 7\ndivide by 8\nderive clock from ipg clk root\nderive clock from osc_clk\nDivide by 1\nDivide by 10\nDivide by 11\nDivide by 12\nDivide by 13\nDivide by 14\nDivide by 15\nDivide by 16\nDivide by 17\nDivide by 18\nDivide by 19\nDivide by 2\nDivide by 20\nDivide by 21\nDivide by 22\nDivide by 23\nDivide by 24\nDivide by 25\nDivide by 26\nDivide by 27\nDivide by 28\nDivide by 29\nDivide by 3\nDivide by 30\nDivide by 31\nDivide by 32\nDivide by 33\nDivide by 34\nDivide by 35\nDivide by 36\nDivide by 37\nDivide by 38\nDivide by 39\nDivide by 4\nDivide by 40\nDivide by 41\nDivide by 42\nDivide by 43\nDivide by 44\nDivide by 45\nDivide by 46\nDivide by 47\nDivide by 48\nDivide by 49\nDivide by 5\nDivide by 50\nDivide by 51\nDivide by 52\nDivide by 53\nDivide by 54\nDivide by 55\nDivide by 56\nDivide by 57\nDivide by 58\nDivide by 59\nDivide by 6\nDivide by 60\nDivide by 61\nDivide by 62\nDivide by 63\nDivide by 64\nDivide by 7\nDivide by 8\nDivide by 9\nderive clock from PLL3 PFD2\nderive from pll3_sw_clk\nderive clock from PLL4\nderive clock from PLL3 PFD2\nderive clock from PLL5\nderive clock from PLL4\nderive clock from PLL3 PFD2\nderive from pll3_sw_clk\nderive clock from PLL4\nderive clock from PLL2 PFD2\nderive clock from PLL2 PFD0\nderive clock from PLL2 PFD2\nderive clock from PLL2 PFD0\nDivider for CAN clock podf.\nSelector for CAN clock multiplexer\nSelector for flexio2 clock multiplexer\nDivide by 1\nDivide by 10\nDivide by 11\nDivide by 12\nDivide by 13\nDivide by 14\nDivide by 15\nDivide by 16\nDivide by 17\nDivide by 18\nDivide by 19\nDivide by 2\nDivide by 20\nDivide by 21\nDivide by 22\nDivide by 23\nDivide by 24\nDivide by 25\nDivide by 26\nDivide by 27\nDivide by 28\nDivide by 29\nDivide by 3\nDivide by 30\nDivide by 31\nDivide by 32\nDivide by 33\nDivide by 34\nDivide by 35\nDivide by 36\nDivide by 37\nDivide by 38\nDivide by 39\nDivide by 4\nDivide by 40\nDivide by 41\nDivide by 42\nDivide by 43\nDivide by 44\nDivide by 45\nDivide by 46\nDivide by 47\nDivide by 48\nDivide by 49\nDivide by 5\nDivide by 50\nDivide by 51\nDivide by 52\nDivide by 53\nDivide by 54\nDivide by 55\nDivide by 56\nDivide by 57\nDivide by 58\nDivide by 59\nDivide by 6\nDivide by 60\nDivide by 61\nDivide by 62\nDivide by 63\nDivide by 64\nDivide by 7\nDivide by 8\nDivide by 9\nderive clock from pll3_sw_clk divided clock (60M)\nderive clock from osc_clk (24M)\nderive clock from pll3_sw_clk divided clock (80M)\nDisable FlexCAN clock\nderive clock from PLL4 divided clock\nderive clock from PLL3 PFD2 clock\nderive clock from PLL5 clock\nderive clock from pll3_sw_clk\nStatus indication of CAMP2.\nStatus indication of on board oscillator\nStatus of the value of CCM_REF_EN_B output of ccm\nCAMP2 is not ready.\nCAMP2 is ready.\non board oscillator is not ready.\non board oscillator is ready.\nvalue of CCM_REF_EN_B is ‘0’\nvalue of CCM_REF_EN_B is ‘1’\nCCM_ANALOG\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 1\nMiscellaneous Register 1\nMiscellaneous Register 1\nMiscellaneous Register 1\nMiscellaneous Register 1\nMiscellaneous Register 1\nMiscellaneous Register 1\nMiscellaneous Register 1\nMiscellaneous Register 2\nMiscellaneous Register 2\nMiscellaneous Register 2\nMiscellaneous Register 2\nMiscellaneous Register 2\nMiscellaneous Register 2\nMiscellaneous Register 2\nMiscellaneous Register 2\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n480MHz Clock (PLL3) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\n528MHz Clock (PLL2) Phase Fractional Divider Control …\nAnalog ARM PLL control Register\nAnalog ARM PLL control Register\nAnalog ARM PLL control Register\nAnalog ARM PLL control Register\nAnalog ARM PLL control Register\nAnalog ARM PLL control Register\nAnalog ARM PLL control Register\nAnalog ARM PLL control Register\nAnalog Audio PLL control Register\nAnalog Audio PLL control Register\nAnalog Audio PLL control Register\nAnalog Audio PLL control Register\nDenominator of Audio PLL Fractional Loop Divider Register\nDenominator of Audio PLL Fractional Loop Divider Register\nNumerator of Audio PLL Fractional Loop Divider Register\nNumerator of Audio PLL Fractional Loop Divider Register\nAnalog Audio PLL control Register\nAnalog Audio PLL control Register\nAnalog Audio PLL control Register\nAnalog Audio PLL control Register\nAnalog ENET PLL Control Register\nAnalog ENET PLL Control Register\nAnalog ENET PLL Control Register\nAnalog ENET PLL Control Register\nAnalog ENET PLL Control Register\nAnalog ENET PLL Control Register\nAnalog ENET PLL Control Register\nAnalog ENET PLL Control Register\nAnalog System PLL Control Register\nAnalog System PLL Control Register\nAnalog System PLL Control Register\nAnalog System PLL Control Register\nDenominator of 528MHz System PLL Fractional Loop Divider …\nDenominator of 528MHz System PLL Fractional Loop Divider …\nNumerator of 528MHz System PLL Fractional Loop Divider …\nNumerator of 528MHz System PLL Fractional Loop Divider …\nAnalog System PLL Control Register\nAnalog System PLL Control Register\n528MHz System PLL Spread Spectrum Register\n528MHz System PLL Spread Spectrum Register\nAnalog System PLL Control Register\nAnalog System PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB1 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog USB2 480MHz PLL Control Register\nAnalog Video PLL control Register\nAnalog Video PLL control Register\nAnalog Video PLL control Register\nAnalog Video PLL control Register\nDenominator of Video PLL Fractional Loop Divider Register\nDenominator of Video PLL Fractional Loop Divider Register\nNumerator of Video PLL Fractional Loop Divider Register\nNumerator of Video PLL Fractional Loop Divider Register\nAnalog Video PLL control Register\nAnalog Video PLL control Register\nAnalog Video PLL control Register\nAnalog Video PLL control Register\nCCM_ANALOG\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to CCM. See Power Management Unit (PMU)\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except RTC powered down on stop mode assertion.\nBeside RTC, analog bandgap, 1p1 and 2p5 regulators are …\nBeside RTC, 1p1 and 2p5 regulators are also on, low-power …\nBeside RTC, low-power bandgap is selected and the rest …\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to CCM. See Power Management Unit (PMU)\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except RTC powered down on stop mode assertion.\nBeside RTC, analog bandgap, 1p1 and 2p5 regulators are …\nBeside RTC, 1p1 and 2p5 regulators are also on, low-power …\nBeside RTC, low-power bandgap is selected and the rest …\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to CCM. See Power Management Unit (PMU)\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except RTC powered down on stop mode assertion.\nBeside RTC, analog bandgap, 1p1 and 2p5 regulators are …\nBeside RTC, 1p1 and 2p5 regulators are also on, low-power …\nBeside RTC, low-power bandgap is selected and the rest …\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to CCM. See Power Management Unit (PMU)\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except RTC powered down on stop mode assertion.\nBeside RTC, analog bandgap, 1p1 and 2p5 regulators are …\nBeside RTC, 1p1 and 2p5 regulators are also on, low-power …\nBeside RTC, low-power bandgap is selected and the rest …\nThis status bit is set to one when when any of the analog …\nThis status bit is set to one when when any of the digital …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis field selects the clk to be routed to anaclk1/1b.\nThis enables the LVDS input buffer for anaclk1/1b\nThis enables the LVDS output buffer for anaclk1/1b\nThis enables a feature that will clkgate (reset) all …\nThis enables a feature that will clkgate (reset) all …\nArm PLL\nAudio PLL\nethernet ref clock (ENET_PLL)\nref_pfd0_clk == pll3_pfd0_clk\nref_pfd1_clk == pll3_pfd1_clk\nref_pfd2_clk == pll3_pfd2_clk\nref_pfd3_clk == pll3_pfd3_clk\nref_pfd4_clk == pll2_pfd0_clk\nref_pfd5_clk == pll2_pfd1_clk\nref_pfd6_clk == pll2_pfd2_clk\nref_pfd7_clk == pll2_pfd3_clk\nSystem PLL\nUSB1 PLL clock\nUSB2 PLL clock\nVideo PLL\nxtal (24M)\nThis status bit is set to one when when any of the analog …\nThis status bit is set to one when when any of the digital …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis field selects the clk to be routed to anaclk1/1b.\nThis enables the LVDS input buffer for anaclk1/1b\nThis enables the LVDS output buffer for anaclk1/1b\nThis enables a feature that will clkgate (reset) all …\nThis enables a feature that will clkgate (reset) all …\nArm PLL\nAudio PLL\nethernet ref clock (ENET_PLL)\nref_pfd0_clk == pll3_pfd0_clk\nref_pfd1_clk == pll3_pfd1_clk\nref_pfd2_clk == pll3_pfd2_clk\nref_pfd3_clk == pll3_pfd3_clk\nref_pfd4_clk == pll2_pfd0_clk\nref_pfd5_clk == pll2_pfd1_clk\nref_pfd6_clk == pll2_pfd2_clk\nref_pfd7_clk == pll2_pfd3_clk\nSystem PLL\nUSB1 PLL clock\nUSB2 PLL clock\nVideo PLL\nxtal (24M)\nThis status bit is set to one when when any of the analog …\nThis status bit is set to one when when any of the digital …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis field selects the clk to be routed to anaclk1/1b.\nThis enables the LVDS input buffer for anaclk1/1b\nThis enables the LVDS output buffer for anaclk1/1b\nThis enables a feature that will clkgate (reset) all …\nThis enables a feature that will clkgate (reset) all …\nArm PLL\nAudio PLL\nethernet ref clock (ENET_PLL)\nref_pfd0_clk == pll3_pfd0_clk\nref_pfd1_clk == pll3_pfd1_clk\nref_pfd2_clk == pll3_pfd2_clk\nref_pfd3_clk == pll3_pfd3_clk\nref_pfd4_clk == pll2_pfd0_clk\nref_pfd5_clk == pll2_pfd1_clk\nref_pfd6_clk == pll2_pfd2_clk\nref_pfd7_clk == pll2_pfd3_clk\nSystem PLL\nUSB1 PLL clock\nUSB2 PLL clock\nVideo PLL\nxtal (24M)\nThis status bit is set to one when when any of the analog …\nThis status bit is set to one when when any of the digital …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis status bit is set to one when the temperature sensor …\nThis field selects the clk to be routed to anaclk1/1b.\nThis enables the LVDS input buffer for anaclk1/1b\nThis enables the LVDS output buffer for anaclk1/1b\nThis enables a feature that will clkgate (reset) all …\nThis enables a feature that will clkgate (reset) all …\nArm PLL\nAudio PLL\nethernet ref clock (ENET_PLL)\nref_pfd0_clk == pll3_pfd0_clk\nref_pfd1_clk == pll3_pfd1_clk\nref_pfd2_clk == pll3_pfd2_clk\nref_pfd3_clk == pll3_pfd3_clk\nref_pfd4_clk == pll2_pfd0_clk\nref_pfd5_clk == pll2_pfd1_clk\nref_pfd6_clk == pll2_pfd2_clk\nref_pfd7_clk == pll2_pfd3_clk\nSystem PLL\nUSB1 PLL clock\nUSB2 PLL clock\nVideo PLL\nxtal (24M)\nLSB of Post-divider for Audio PLL\nMSB of Post-divider for Audio PLL\nWhen USB is in low power suspend mode this Control bit is …\nThis field defines the brown out voltage offset for the …\nReg0 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nARM supply Not related to CCM. See Power Management Unit …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg1 brownout status bit. Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nGPU/VPU supply Not related to CCM. See Power Management …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg2 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nSignals that the voltage is above the brownout level for …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nPost-divider for video\ndivide by 1 (Default)\ndivide by 2\ndivide by 1 (Default)\ndivide by 2\nPLL3 is being used by peripherals and is enabled when SoC …\nPLL3 can be disabled when the SoC is not in any low power …\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\n128\n256\n512\n64\ndivide by 1 (Default)\ndivide by 2\ndivide by 1\ndivide by 4\nLSB of Post-divider for Audio PLL\nMSB of Post-divider for Audio PLL\nWhen USB is in low power suspend mode this Control bit is …\nThis field defines the brown out voltage offset for the …\nReg0 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nARM supply Not related to CCM. See Power Management Unit …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg1 brownout status bit. Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nGPU/VPU supply Not related to CCM. See Power Management …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg2 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nSignals that the voltage is above the brownout level for …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nPost-divider for video\ndivide by 1 (Default)\ndivide by 2\ndivide by 1 (Default)\ndivide by 2\nPLL3 is being used by peripherals and is enabled when SoC …\nPLL3 can be disabled when the SoC is not in any low power …\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\n128\n256\n512\n64\ndivide by 1 (Default)\ndivide by 2\ndivide by 1\ndivide by 4\nLSB of Post-divider for Audio PLL\nMSB of Post-divider for Audio PLL\nWhen USB is in low power suspend mode this Control bit is …\nThis field defines the brown out voltage offset for the …\nReg0 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nARM supply Not related to CCM. See Power Management Unit …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg1 brownout status bit. Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nGPU/VPU supply Not related to CCM. See Power Management …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg2 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nSignals that the voltage is above the brownout level for …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nPost-divider for video\ndivide by 1 (Default)\ndivide by 2\ndivide by 1 (Default)\ndivide by 2\nPLL3 is being used by peripherals and is enabled when SoC …\nPLL3 can be disabled when the SoC is not in any low power …\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\n128\n256\n512\n64\ndivide by 1 (Default)\ndivide by 2\ndivide by 1\ndivide by 4\nLSB of Post-divider for Audio PLL\nMSB of Post-divider for Audio PLL\nWhen USB is in low power suspend mode this Control bit is …\nThis field defines the brown out voltage offset for the …\nReg0 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nARM supply Not related to CCM. See Power Management Unit …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg1 brownout status bit. Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nGPU/VPU supply Not related to CCM. See Power Management …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nThis field defines the brown out voltage offset for the …\nReg2 brownout status bit.Not related to CCM. See Power …\nEnables the brownout detection.Not related to CCM. See …\nSignals that the voltage is above the brownout level for …\nNumber of clock periods (24MHz clock).Not related to CCM. …\nPost-divider for video\ndivide by 1 (Default)\ndivide by 2\ndivide by 1 (Default)\ndivide by 2\nPLL3 is being used by peripherals and is enabled when SoC …\nPLL3 can be disabled when the SoC is not in any low power …\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\nBrownout, supply is below target minus brownout offset.\n128\n256\n512\n64\nBrownout offset = 0.100V\nBrownout offset = 0.175V\n128\n256\n512\n64\ndivide by 1 (Default)\ndivide by 2\ndivide by 1\ndivide by 4\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIf set to 1, the IO fractional divider clock (reference …\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nIO Clock Gate\nThis field controls the fractional divide value\nThis read-only bitfield is for DIAGNOSTIC PURPOSES ONLY …\nBypass the PLL.\nDetermines the bypass source\nThis field controls the PLL loop divider\nEnable the clock output.\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source\nThis field controls the PLL loop divider\nEnable the clock output.\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source\nThis field controls the PLL loop divider\nEnable the clock output.\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source\nThis field controls the PLL loop divider\nEnable the clock output.\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnable PLL output\n1 - PLL is currently locked. 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnable PLL output\n1 - PLL is currently locked. 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\n30 bit denominator of fractional loop divider.\n30 bit numerator of fractional loop divider.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnable PLL output\n1 - PLL is currently locked. 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnable PLL output\n1 - PLL is currently locked. 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\nBypass the PLL.\nDetermines the bypass source.\nControls the frequency of the ethernet reference clock\nEnable the PLL providing the ENET reference clock.\nControls the frequency of the ENET2 reference clock.\nEnable the PLL providing the ENET2 reference clock\nEnable the PLL providing ENET 25 MHz reference clock\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\n25MHz\n50MHz\n100MHz (not 50% duty cycle)\n125MHz\nBypass the PLL.\nDetermines the bypass source.\nControls the frequency of the ethernet reference clock\nEnable the PLL providing the ENET reference clock.\nControls the frequency of the ENET2 reference clock.\nEnable the PLL providing the ENET2 reference clock\nEnable the PLL providing ENET 25 MHz reference clock\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\n25MHz\n50MHz\n100MHz (not 50% duty cycle)\n125MHz\nBypass the PLL.\nDetermines the bypass source.\nControls the frequency of the ethernet reference clock\nEnable the PLL providing the ENET reference clock.\nControls the frequency of the ENET2 reference clock.\nEnable the PLL providing the ENET2 reference clock\nEnable the PLL providing ENET 25 MHz reference clock\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\n25MHz\n50MHz\n100MHz (not 50% duty cycle)\n125MHz\nBypass the PLL.\nDetermines the bypass source.\nControls the frequency of the ethernet reference clock\nEnable the PLL providing the ENET reference clock.\nControls the frequency of the ENET2 reference clock.\nEnable the PLL providing the ENET2 reference clock\nEnable the PLL providing ENET 25 MHz reference clock\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\n25MHz\n50MHz\n100MHz (not 50% duty cycle)\n125MHz\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\n30 bit denominator (B) of fractional loop divider …\n30 bit numerator (A) of fractional loop divider (signed …\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nEnable bit\nFrequency change step = step/CCM_ANALOG_PLL_SYS_DENOM[B]*…\nFrequency change = stop/CCM_ANALOG_PLL_SYS_DENOM[B]*24MHz.\nSpread spectrum modulation disabled\nSoread spectrum modulation enabled\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\nPowers the 9-phase PLL outputs for USBPHYn\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nPLL outputs for USBPHYn off.\nPLL outputs for USBPHYn on.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\nPowers the 9-phase PLL outputs for USBPHYn\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nPLL outputs for USBPHYn off.\nPLL outputs for USBPHYn on.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\nPowers the 9-phase PLL outputs for USBPHYn\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nPLL outputs for USBPHYn off.\nPLL outputs for USBPHYn on.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\nPowers the 9-phase PLL outputs for USBPHYn\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nPLL outputs for USBPHYn off.\nPLL outputs for USBPHYn on.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\n0: 8-phase PLL outputs for USBPHY1 are powered down\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\n0: 8-phase PLL outputs for USBPHY1 are powered down\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\n0: 8-phase PLL outputs for USBPHY1 are powered down\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. 0 - Fout=Fref<em>20; </em>…\nEnable the PLL clock output.\n0: 8-phase PLL outputs for USBPHY1 are powered down\n1 - PLL is currently locked. 0 - PLL is not currently …\nPowers up the PLL. This bit will be set automatically when …\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnalbe PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnalbe PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\n30 bit Denominator of fractional loop divider.\n30 bit numerator of fractional loop divider(Signed …\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnalbe PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\nBypass the PLL.\nDetermines the bypass source.\nThis field controls the PLL loop divider. Valid range for …\nEnalbe PLL output\n1 - PLL is currently locked; 0 - PLL is not currently …\nThese bits implement a divider after the PLL, but before …\nPowers down the PLL.\nSelect the CLK1_N / CLK1_P as source.\nSelect the 24MHz oscillator as source.\nDivide by 4.\nDivide by 2.\nDivide by 1.\nHigh-Speed Comparator (CMP), Voltage Reference (VREF) …\nHigh-Speed Comparator (CMP), Voltage Reference (VREF) …\nHigh-Speed Comparator (CMP), Voltage Reference (VREF) …\nHigh-Speed Comparator (CMP), Voltage Reference (VREF) …\nCMP Control Register 0\nCMP Control Register 0\nCMP Control Register 1\nCMP Control Register 1\nDAC Control Register\nDAC Control Register\nCMP Filter Period Register\nCMP Filter Period Register\nMUX Control Register\nMUX Control Register\nHigh-Speed Comparator (CMP), Voltage Reference (VREF) …\nCMP Status and Control Register\nCMP Status and Control Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nFilter Sample Count\nComparator hard block hysteresis control\nFilter is disabled. If SE = 1, then COUT is a logic 0. …\nOne sample must agree. The comparator output is simply …\n2 consecutive samples must agree.\n3 consecutive samples must agree.\n4 consecutive samples must agree.\n5 consecutive samples must agree.\n6 consecutive samples must agree.\n7 consecutive samples must agree.\nLevel 0\nLevel 1\nLevel 2\nLevel 3\nComparator Output Select\nComparator Module Enable\nComparator INVERT\nComparator Output Pin Enable\nPower Mode Select\nSample Enable\nWindowing Enable\nSet the filtered comparator output (CMPO) to equal COUT.\nSet the unfiltered comparator output (CMPO) to equal COUTA.\nAnalog Comparator is disabled.\nAnalog Comparator is enabled.\nDoes not invert the comparator output.\nInverts the comparator output.\nCMPO is not available on the associated CMPO output pin. …\nCMPO is available on the associated CMPO output pin. The …\nLow-Speed (LS) Comparison mode selected. In this mode, CMP …\nHigh-Speed (HS) Comparison mode selected. In this mode, …\nSampling mode is not selected.\nSampling mode is selected.\nWindowing mode is not selected.\nWindowing mode is selected.\nDAC Enable\nDAC Output Voltage Select\nSupply Voltage Reference Source Select\nDAC is disabled.\nDAC is enabled.\nVin1 is selected as resistor ladder network supply …\nVin2 is selected as resistor ladder network supply …\nFilter Sample Period\nMinus Input Mux Control\nPlus Input Mux Control\nIN0\nIN1\nIN2\nIN3\nIN4\nIN5\nIN6\nIN7\nIN0\nIN1\nIN2\nIN3\nIN4\nIN5\nIN6\nIN7\nAnalog Comparator Flag Falling\nAnalog Comparator Flag Rising\nAnalog Comparator Output\nDMA Enable Control\nComparator Interrupt Enable Falling\nComparator Interrupt Enable Rising\nFalling-edge on COUT has not been detected.\nFalling-edge on COUT has occurred.\nRising-edge on COUT has not been detected.\nRising-edge on COUT has occurred.\nDMA is disabled.\nDMA is enabled.\nInterrupt is disabled.\nInterrupt is enabled.\nInterrupt is disabled.\nInterrupt is enabled.\nCSI\nCSI Control Register 1\nCSI Control Register 1\nCSI Control Register 18\nCSI Control Register 18\nCSI Control Register 19\nCSI Control Register 19\nCSI Control Register 2\nCSI Control Register 2\nCSI Control Register 3\nCSI Control Register 3\nCSI DMA Start Address Register - for Frame Buffer1\nCSI DMA Start Address Register - for Frame Buffer1\nCSI DMA Transfer Size Register - for Frame Buffer2\nCSI DMA Transfer Size Register - for Frame Buffer2\nCSI DMA Start Address Register - for STATFIFO\nCSI DMA Start Address Register - for STATFIFO\nCSI DMA Transfer Size Register - for STATFIFO\nCSI DMA Transfer Size Register - for STATFIFO\nCSI Frame Buffer Parameter Register\nCSI Frame Buffer Parameter Register\nCSI Image Parameter Register\nCSI Image Parameter Register\nCSI RX FIFO Register\nCSI RX FIFO Register\nCSI RX Count Register\nCSI RX Count Register\nCSI Status Register\nCSI Status Register\nCSI Statistic FIFO Register\nCSI Statistic FIFO Register\nCSI\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nCCIR656 Interface Enable\nCCIR Mode Select\nAsynchronous RXFIFO Clear\nAsynchronous STATFIFO Clear\nChange Of Image Field (COF) Interrupt Enable\nEnd-of-Frame Interrupt Enable. This bit enables and …\nExternal VSYNC Enable\nFrame Buffer1 DMA Transfer Done Interrupt Enable\nFrame Buffer2 DMA Transfer Done Interrupt Enable\nFIFO Clear Control\nGated Clock Mode Enable\nHSYNC Polarity Select\nInvert Data Input. This bit enables or disables internal …\nInvert Pixel Clock Input\nData Packing Direction\nPixel Bit\nCSI-PrP Interface Enable\nValid Pixel Clock Edge Select\nRxFIFO Overrun Interrupt Enable. This bit enables the RX …\nRxFIFO Full Interrupt Enable. This bit enables the RxFIFO …\nSTATFIFO DMA Transfer Done Interrupt Enable\nSTAT FIFO Overrun Interrupt Enable. This bit enables the …\nStart Of Frame (SOF) Interrupt Enable. This bit enables …\nSOF Interrupt Polarity. This bit controls the condition …\nSTATFIFO Full Interrupt Enable. This bit enables the STAT …\nSWAP 16-Bit Enable\nHprot value in AHB bus protocol.\nBase address change error interrupt enable signal.\nWhen this bit is enabled, CSI DMA will switch the base …\nCSI 2 base addresses switching method. When using this …\nCSI global enable signal\nThis bit is used to select the output method When input is …\nWhen in interlace mode, field 1 done interrupt enable.\nIn interlace mode, fileld 0 means interrupt enabled.\nChoosing the last DMA request condition.\nThese bits used to choose the method to mask the CSI input.\nWhen input is parallel rgb888/yuv444 24bit, this bit can …\nOutput is 32-bit format.\nSwitching base address at the edge of the vsync\nSwitching base address at the edge of the first data of …\nDeinterlace disabled\nDeinterlace enabled\nInterrupt disabled\nInterrupt enabled\nInterrupt disabled\nInterrupt enabled\nfifo_full_level\nhburst_length\nWriting to memory from first completely frame, when using …\nWriting to memory when CSI_ENABLE is 1.\nWriting to memory from second completely frame, when using …\nWriting to memory when data comes in, not matter the …\n{8’h0, data[23:0]}\n{data[23:0], 8’h0}\nThis byte stores the highest FIFO level achieved by CSI …\nTraditional interface is selected. Timing interface logic …\nCCIR656 interface is selected.\nProgressive mode is selected\nInterlace mode is selected\nCOF interrupt is disabled\nCOF interrupt is enabled\nEOF interrupt is disabled.\nEOF interrupt is generated when RX count value is reached.\nInternal VSYNC mode\nExternal VSYNC mode\nFrame Buffer1 DMA Transfer Done interrupt disable\nFrame Buffer1 DMA Transfer Done interrupt enable\nFrame Buffer2 DMA Transfer Done interrupt disable\nFrame Buffer2 DMA Transfer Done interrupt enable\nAsynchronous FIFO clear is selected.\nSynchronous FIFO clear is selected.\nNon-gated clock mode. All incoming pixel clocks are valid. …\nGated clock mode. Pixel clock signal is valid only when …\nHSYNC is active low\nHSYNC is active high\nCSI_D[7:0] data lines are directly applied to internal …\nCSI_D[7:0] data lines are inverted before applied to …\nCSI_PIXCLK is directly applied to internal circuitry\nCSI_PIXCLK is inverted before applied to internal circuitry\nPack from LSB first. For image data, 0x11, 0x22, 0x33, …\nPack from MSB first. For image data, 0x11, 0x22, 0x33, …\n8-bit data for each pixel\n10-bit data for each pixel\nCSI to PrP bus is disabled\nCSI to PrP bus is enabled\nPixel data is latched at the falling edge of CSI_PIXCLK\nPixel data is latched at the rising edge of CSI_PIXCLK\nRxFIFO overrun interrupt is disabled\nRxFIFO overrun interrupt is enabled\nRxFIFO full interrupt disable\nRxFIFO full interrupt enable\nSTATFIFO DMA Transfer Done interrupt disable\nSTATFIFO DMA Transfer Done interrupt enable\nSTATFIFO overrun interrupt is disabled\nSTATFIFO overrun interrupt is enabled\nSOF interrupt disable\nSOF interrupt enable\nSOF interrupt is generated on SOF falling edge\nSOF interrupt is generated on SOF rising edge\nSTATFIFO full interrupt disable\nSTATFIFO full interrupt enable\nDisable swapping\nEnable swapping\nAuto Focus Spread. Selects which green pixels are used for …\nBayer Tile Start. Controls the Bayer pattern starting …\nBurst Type of DMA Transfer from RxFIFO. Selects the burst …\nBurst Type of DMA Transfer from STATFIFO. Selects the …\nDouble Resolution Mode. Controls size of statistics grid.\nHorizontal Skip Count\nLive View Resolution Mode. Selects the grid size used for …\nSkip Count Enable. Enables or disables the skip count …\nVertical Skip Count. Contains the number of rows to skip. …\nAbs Diff on consecutive green pixels\nAbs Diff on every third green pixels\nAbs Diff on every four green pixels\nGR\nRG\nBG\nGB\nINCR8\nINCR4\nINCR16\nINCR8\nINCR4\nINCR16\nStats grid of 8 x 6\nStats grid of 8 x 12\n512 x 384\n448 x 336\n384 x 288\n384 x 256\n320 x 240\n288 x 216\n400 x 300\nSkip count disable\nSkip count enable\nReflash DMA Controller for RxFIFO\nReflash DMA Controller for STATFIFO\nDMA Request Enable for RxFIFO\nDMA Request Enable for STATFIFO\nAutomatic Error Correction Enable\nError Detection Interrupt Enable\nFrame Counter\nFrame Count Reset. Resets the Frame Counter. (Cleared …\nHresponse Error Enable. This bit enables the hresponse …\nRxFIFO Full Level\nSTATFIFO Full Level\nTwo 8-bit Sensor Mode\nDummy Zero Packing Enable\nNo reflashing\nReflash the embedded DMA controller\nNo reflashing\nReflash the embedded DMA controller\nDisable the dma request\nEnable the dma request\nDisable the dma request\nEnable the dma request\nAuto Error correction is disabled.\nAuto Error correction is enabled.\nNo interrupt is generated when error is detected. Only the …\nInterrupt is generated when error is detected.\nDo not reset\nReset frame counter immediately\nDisable hresponse error interrupt\nEnable hresponse error interrupt\n4 Double words\n8 Double words\n16 Double words\n24 Double words\n32 Double words\n48 Double words\n64 Double words\n96 Double words\n4 Double words\n8 Double words\n12 Double words\n16 Double words\n24 Double words\n32 Double words\n48 Double words\n64 Double words\nOnly one sensor is connected.\nTwo 8-bit sensors are connected or one 16-bit sensor is …\nZero packing disabled\nZero packing enabled\nDMA Start Address in Frame Buffer1\nDMA Start Address in Frame Buffer2\nDMA Start Address for STATFIFO\nDMA Transfer Size for STATFIFO\nDEINTERLACE_STRIDE is only used in the deinterlace mode\nFrame Buffer Parameter\nImage Height. Indicates how many pixels in a column of the …\nImage Width\nReceived image data\nRxFIFO Count\nWhen using base address switching enable, this bit will be …\nChange Of Field Interrupt Status\nWhen DMA field 0 is complete, this bit will be set to …\nWhen DMA field 0 is complete, this bit will be set to …\nDMA Transfer Done in Frame Buffer1\nDMA Transfer Done in Frame Buffer2\nDMA Transfer Done from StatFIFO\nRXFIFO Data Ready\nCCIR Error Interrupt\nEnd of Frame (EOF) Interrupt Status. Indicates when EOF is …\nCCIR Field 1 Interrupt Status\nCCIR Field 2 Interrupt Status\nHresponse Error Interrupt Status\nRxFIFO Overrun Interrupt Status\nRXFIFO Full Interrupt Status\nSTATFIFO Overrun Interrupt Status\nStart of Frame Interrupt Status. Indicates when SOF is …\nSTATFIFO Full Interrupt Status\nVideo field has no change.\nChange of video field is detected.\nDMA transfer is not completed.\nDMA transfer is completed.\nDMA transfer is not completed.\nDMA transfer is completed.\nDMA transfer is not completed.\nDMA transfer is completed.\nNo data (word) is ready\nAt least 1 datum (word) is ready in RXFIFO.\nNo error detected\nError is detected in CCIR coding\nEOF is not detected.\nEOF is detected.\nField 1 of video is not detected.\nField 1 of video is about to start.\nField 2 of video is not detected\nField 2 of video is about to start\nNo hresponse error.\nHresponse error is detected.\nRXFIFO has not overflowed.\nRXFIFO has overflowed.\nRxFIFO is not full.\nRxFIFO is full.\nSTATFIFO has not overflowed.\nSTATFIFO has overflowed.\nSOF is not detected.\nSOF is detected.\nSTATFIFO is not full.\nSTATFIFO is full.\nStatic data from sensor\nConfig security level register\nConfig security level register\nCSU registers\nHP0 register\nHP0 register\nHPCONTROL0 register\nHPCONTROL0 register\nCSU registers\nSecure access register\nSecure access register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nThe lock bit corresponding to the first slave. It is …\nThe lock bit corresponding to the second slave. It is …\nNon-secure supervisor read access control for the first …\nNon-secure supervisor read access control for the second …\nNon-secure supervisor write access control for the first …\nNon-secure supervisor write access control for the second …\nNon-secure user read access control for the first slave\nNon-secure user read access control for the second slave\nNon-secure user write access control for the first slave\nNon-secure user write access control for the second slave\nSecure supervisor read access control for the first slave\nSecure supervisor read access control for the second slave\nSecure supervisor write access control for the first slave\nSecure supervisor write access control for the second slave\nSecure user read access control for the first slave\nSecure user read access control for the second slave\nSecure user write access control for the first slave\nSecure user write access control for the second slave\nNot locked. The bits 16-23 can be written by the software.\nThe bits 16-23 are locked and can’t be written by the …\nNot locked. Bits 7-0 can be written by the software.\nBits 7-0 are locked and cannot be written by the software\nThe non-secure supervisor read access is disabled for the …\nThe non-secure supervisor read access is enabled for the …\nThe non-secure supervisor read access is disabled for the …\nThe non-secure supervisor read access is enabled for the …\nThe non-secure supervisor write access is disabled for the …\nThe non-secure supervisor write access is enabled for the …\nThe non-secure supervisor write access is disabled for the …\nThe non-secure supervisor write access is enabled for the …\nThe non-secure user read access is disabled for the first …\nThe non-secure user read access is enabled for the first …\nThe non-secure user read access is disabled for the second …\nThe non-secure user read access is enabled for the second …\nThe non-secure user write access is disabled for the first …\nThe non-secure user write access is enabled for the first …\nThe non-secure user write access is disabled for the …\nThe non-secure user write access is enabled for the second …\nThe secure supervisor read access is disabled for the …\nThe secure supervisor read access is enabled for the first …\nThe secure supervisor read access is disabled for the …\nThe secure supervisor read access is enabled for the …\nThe secure supervisor write access is disabled for the …\nThe secure supervisor write access is enabled for the …\nThe secure supervisor write access is disabled for the …\nThe secure supervisor write access is enabled for the …\nThe secure user read access is disabled for the first …\nThe secure user read access is enabled for the first slave.\nThe secure user read access is disabled for the second …\nThe secure user read access is enabled for the second …\nThe secure user write access is disabled for the first …\nThe secure user write access is enabled for the first …\nThe secure user write access is disabled for the second …\nThe secure user write access is enabled for the second …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nDetermines whether the register value of the corresponding …\nLock bit set by the TZ software for the CSI\nLock bit set by the TZ software for the DCP\nLock bit set by the TZ software for the eDMA\nLock bit set by the TZ software for the ENET\nLock bit set by the TZ software for the LCDIF\nLock bit set by the TZ software for the PXP\nLock bit set by the TZ software for the TPSMP\nLock bit set by the TZ software for the USB\nLock bit set by the TZ software for the USDHC1\nLock bit set by the TZ software for the USDHC2\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nThe hprot1 input signal value is routed to the csu_hprot1 …\nThe HP register bit is routed to the csu_hprot1 output for …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit cannot be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nIndicates the privilege/user mode for the CSI\nIndicates the privilege/user mode for the DCP\nIndicates the privilege/user mode for the eDMA\nIndicates the privilege/user mode for the ENET\nIndicates the privilege/user mode for the LCDIF\nIndicates the privilege/user mode for the PXP\nIndicates the privilege/user mode for the TPSMP\nIndicates the privilege/user mode for the USB\nIndicates the privilege/user mode for the USDHC1\nIndicates the privilege/user mode for the USDHC2\nLock bit set by the TZ software for the CSI\nLock bit set by the TZ software for the DCP\nLock bit set by the TZ software for the eDMA\nLock bit set by the TZ software for the ENET\nLock bit set by the TZ software for the LCDIF\nLock bit set by the TZ software for the PXP\nLock bit set by the TZ software for the TPSMP.\nLock bit set by the TZ software for the USB.\nLock bit set by the TZ software for the USDHC1\nLock bit set by the TZ software for the USDHC2.\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nUser mode for the corresponding master\nSupervisor mode for the corresponding master\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nLock bit set by the TZ software for the CSI\nLock bit set by the TZ software for the DCP\nLock bit set by the TZ software for the eDMA\nLock bit set by the TZ software for the ENET1 and ENET2\nLock bit set by the TZ software for the LCDIF\nLock bit set by the TZ software for the PXP\nLock bit set by the TZ software for the TPSMP\nLock bit set by the TZ software for the USB\nLock bit set by the TZ software for the USDHC1\nLock bit set by the TZ software for the USDHC2\nNon-secure access policy indicator bit\nNon-secure access policy indicator bit\nNon-secure access policy indicator bit\nNon-secure access policy indicator bit\nNon-secure access policy indicator bit\nNon-Secure Access Policy indicator bit\nNon-secure access policy indicator bit\nNon-secure access policy indicator bit\nNon-secure access policy indicator bit\nNon-secure access policy indicator bit\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nNo lock-the adjacent (next lower) bit can be written by …\nLock-the adjacent (next lower) bit can’t be written by …\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nSecure access for the corresponding type-1 master\nNon-secure access for the corresponding type-1 master\nDCDC\nDCDC Register 0\nDCDC Register 0\nDCDC Register 1\nDCDC Register 1\nDCDC Register 2\nDCDC Register 2\nDCDC Register 3\nDCDC Register 3\nDCDC\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nadjust value to poslimit_buck register\nreset current alert signal\nSet the threshold of current detector, if the peak current …\nDisable automatic clock switch from internal osc to xtal …\nenable the overload detection in power save mode, if …\nAdjust hysteretic value in low power from 12.5mV to 25mV\nthe period of counting the charging times in power save …\nthe threshold of the counting number of charging times …\nThe threshold of over current detection in run mode and …\nset to “1” to power down the low voltage detection …\npower down output range comparator\nThe power down signal of the current detector.\npower down overvoltage detection comparator\nPower down internal osc. Only set this bit, when 24 MHz …\npower down overcurrent detection comparator\npower down the zero cross detection function for …\nselect 24 MHz Crystal clock for DCDC, when …\nStatus register to indicate DCDC status. 1’b1: DCDC …\n1’b1: Disable xtalok detection circuit 1’b0: Enable …\nset to 1 to switch internal ring osc to xtal 24M\nEnable hysteresis in switching converter common mode …\nincrease the threshold detection for common mode analog …\nset the current bias of low power comparator 0x0: 50 nA …\nselect the feedback point of the internal regulator\ncontrol the load resistor of the internal regulator of …\ntrim bandgap voltage\nSet high to improve the transition from heavy load to …\nSet to “0” : stop charging if the duty cycle is lower …\nRatio of integral control parameter to proportional …\nTwo’s complement feed forward step in duty cycle in the …\nMagnitude of proportional control parameter in the …\nEnable analog circuit of DC-DC converter to respond faster …\nInvert the sign of the hysteresis in DC-DC analog …\nIncrease the threshold detection for RC scale circuit.\nDisable stepping for the output VDD_SOC of DCDC\nSet DCDC clock to half freqeuncy for continuous mode\nAjust delay to reduce ground noise\nTarget value of standby (low power) mode 0x0: 0\nTarget value of VDD_SOC, 25 mV each step 0x0: 0.8V 0xE: …\nDCP capability 0 register\nDCP capability 0 register\nDCP capability 1 register\nDCP capability 1 register\nDCP channel 0 command pointer address register\nDCP channel 0 command pointer address register\nDCP channel 0 options register\nDCP channel 0 options register\nDCP channel 0 options register\nDCP channel 0 options register\nDCP channel 0 options register\nDCP channel 0 options register\nDCP channel 0 options register\nDCP channel 0 options register\nDCP channel 0 semaphore register\nDCP channel 0 semaphore register\nDCP channel 0 status register\nDCP channel 0 status register\nDCP channel 0 status register\nDCP channel 0 status register\nDCP channel 0 status register\nDCP channel 0 status register\nDCP channel 0 status register\nDCP channel 0 status register\nDCP channel 1 command pointer address register\nDCP channel 1 command pointer address register\nDCP channel 1 options register\nDCP channel 1 options register\nDCP channel 1 options register\nDCP channel 1 options register\nDCP channel 1 options register\nDCP channel 1 options register\nDCP channel 1 options register\nDCP channel 1 options register\nDCP channel 1 semaphore register\nDCP channel 1 semaphore register\nDCP channel 1 status register\nDCP channel 1 status register\nDCP channel 1 status register\nDCP channel 1 status register\nDCP channel 1 status register\nDCP channel 1 status register\nDCP channel 1 status register\nDCP channel 1 status register\nDCP channel 2 command pointer address register\nDCP channel 2 command pointer address register\nDCP channel 2 options register\nDCP channel 2 options register\nDCP channel 2 options register\nDCP channel 2 options register\nDCP channel 2 options register\nDCP channel 2 options register\nDCP channel 2 options register\nDCP channel 2 options register\nDCP channel 2 semaphore register\nDCP channel 2 semaphore register\nDCP channel 2 status register\nDCP channel 2 status register\nDCP channel 2 status register\nDCP channel 2 status register\nDCP channel 2 status register\nDCP channel 2 status register\nDCP channel 2 status register\nDCP channel 2 status register\nDCP channel 3 command pointer address register\nDCP channel 3 command pointer address register\nDCP channel 3 options register\nDCP channel 3 options register\nDCP channel 3 options register\nDCP channel 3 options register\nDCP channel 3 options register\nDCP channel 3 options register\nDCP channel 3 options register\nDCP channel 3 options register\nDCP channel 3 semaphore register\nDCP channel 3 semaphore register\nDCP channel 3 status register\nDCP channel 3 status register\nDCP channel 3 status register\nDCP channel 3 status register\nDCP channel 3 status register\nDCP channel 3 status register\nDCP channel 3 status register\nDCP channel 3 status register\nDCP channel control register\nDCP channel control register\nDCP channel control register\nDCP channel control register\nDCP channel control register\nDCP channel control register\nDCP channel control register\nDCP channel control register\nDCP context buffer pointer\nDCP context buffer pointer\nDCP control register 0\nDCP control register 0\nDCP control register 0\nDCP control register 0\nDCP control register 0\nDCP control register 0\nDCP control register 0\nDCP control register 0\nDCP debug data register\nDCP debug data register\nDCP debug select register\nDCP debug select register\nDCP register reference index\nDCP key index\nDCP key index\nDCP key data\nDCP key data\nDCP work packet 0 status register\nDCP work packet 0 status register\nDCP work packet 1 status register\nDCP work packet 1 status register\nDCP work packet 2 status register\nDCP work packet 2 status register\nDCP work packet 3 status register\nDCP work packet 3 status register\nDCP work packet 4 status register\nDCP work packet 4 status register\nDCP work packet 5 status register\nDCP work packet 5 status register\nDCP work packet 6 status register\nDCP work packet 6 status register\nDCP page table register\nDCP page table register\nDCP register reference index\nDCP status register\nDCP status register\nDCP status register\nDCP status register\nDCP status register\nDCP status register\nDCP status register\nDCP status register\nDCP version register\nDCP version register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nWrite to 1 to disable the decryption\nWrite to a 1 to disable the per-device unique key\nEncoded value indicating the number of channels …\nEncoded value indicating the number of key-storage …\nOne-hot field indicating which cipher algorithms are …\nOne-hot field indicating which hashing features are …\nAES128\nCRC32\nSHA1\nSHA256\nPointer to the descriptor structure to be processed for …\nThis field indicates the recovery time for the channel\nThis field indicates the recovery time for the channel\nThis field indicates the recovery time for the channel\nThis field indicates the recovery time for the channel\nThe value written to this field is added to the semaphore …\nThis read-only field shows the current (instantaneous) …\nIndicates the additional error codes for some of the error …\nThis bit indicates that a bus error occurred when storing …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a page fault occurred while …\nThis bit indicates that the hardware detected an invalid …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a hashing check operation …\nIndicates the tag from the last completed packet in the …\nError signalled because an error is reported …\nError signalled because the control packet specifies an …\nError signalled because the next pointer is 0x00000000\nError signalled because the semaphore is non-zero and …\nError signalled because an error is reported …\nIndicates the additional error codes for some of the error …\nThis bit indicates that a bus error occurred when storing …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a page fault occurred while …\nThis bit indicates that the hardware detected an invalid …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a hashing check operation …\nIndicates the tag from the last completed packet in the …\nError signalled because an error is reported …\nError signalled because the control packet specifies an …\nError signalled because the next pointer is 0x00000000\nError signalled because the semaphore is non-zero and …\nError signalled because an error is reported …\nIndicates the additional error codes for some of the error …\nThis bit indicates that a bus error occurred when storing …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a page fault occurred while …\nThis bit indicates that the hardware detected an invalid …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a hashing check operation …\nIndicates the tag from the last completed packet in the …\nError signalled because an error is reported …\nError signalled because the control packet specifies an …\nError signalled because the next pointer is 0x00000000\nError signalled because the semaphore is non-zero and …\nError signalled because an error is reported …\nIndicates the additional error codes for some of the error …\nThis bit indicates that a bus error occurred when storing …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a page fault occurred while …\nThis bit indicates that the hardware detected an invalid …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a hashing check operation …\nIndicates the tag from the last completed packet in the …\nError signalled because an error is reported …\nError signalled because the control packet specifies an …\nError signalled because the next pointer is 0x00000000\nError signalled because the semaphore is non-zero and …\nError signalled because an error is reported …\nPointer to the descriptor structure to be processed for …\nThis field indicates the recovery time for the channel\nThis field indicates the recovery time for the channel\nThis field indicates the recovery time for the channel\nThis field indicates the recovery time for the channel\nThe value written to this field is added to the semaphore …\nThis read-only field shows the current (instantaneous) …\nIndicates the additional error codes for some of the error …\nThis bit indicates that a bus error occurred when storing …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a page fault occurred while …\nThis bit indicates that the hardware detected an invalid …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a hashing check operation is …\nIndicates the tag from the last completed packet in the …\nError is signalled because an error was reported when …\nError is signalled because the control packet specifies an …\nError is signalled because the next pointer is 0x00000000.\nError is signalled because the semaphore is of a non-zero …\nError is signalled because an error was reported when …\nIndicates the additional error codes for some of the error …\nThis bit indicates that a bus error occurred when storing …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a page fault occurred while …\nThis bit indicates that the hardware detected an invalid …\nThis bit indicates that a bus error occurred when reading …\nThis bit indicates that a hashing check operation is …\nIndicates the tag from the last completed packet in the …\nError is signalled because an error was reported when …")