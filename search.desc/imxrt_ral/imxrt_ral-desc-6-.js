searchState.loadedDescShard("imxrt_ral", 6, "Output Buffer Pitch\nProcessed Surface Lower Right Coordinate\nProcessed Surface Lower Right Coordinate\nProcessed Surface Upper Left Coordinate\nProcessed Surface Upper Left Coordinate\nPXP Alpha Engine A Control Register.\nPXP Alpha Engine A Control Register.\nPXP Power Control Register\nPXP Power Control Register\nPS Background Color\nPS Background Color\nPS Input Buffer Address\nPS Input Buffer Address\nPS Color Key High\nPS Color Key High\nPS Color Key Low\nPS Color Key Low\nProcessed Surface (PS) Control Register\nProcessed Surface (PS) Control Register\nProcessed Surface (PS) Control Register\nProcessed Surface (PS) Control Register\nProcessed Surface (PS) Control Register\nProcessed Surface (PS) Control Register\nProcessed Surface (PS) Control Register\nProcessed Surface (PS) Control Register\nPS Scale Offset Register\nPS Scale Offset Register\nProcessed Surface Pitch\nProcessed Surface Pitch\nPS Scale Factor Register\nPS Scale Factor Register\nPS U/Cb or 2 Plane UV Input Buffer Address\nPS U/Cb or 2 Plane UV Input Buffer Address\nPS V/Cr Input Buffer Address\nPS V/Cr Input Buffer Address\nPXP v2.0 Register Reference Index\nPXP v2.0 Register Reference Index\nStatus Register\nStatus Register\nStatus Register\nStatus Register\nStatus Register\nStatus Register\nStatus Register\nStatus Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nAddress pointer for the alpha surface 0 buffer.\nHigh range of RGB color key applied to AS buffer. Each …\nLow range of RGB color key applied to AS buffer. Each …\nAlpha modifier used when the ALPHA_MULTIPLY or …\nDetermines how the alpha value is constructed for this …\nSetting this bit to logic 0 will not alter the alpha value\nIndicates that colorkey functionality is enabled for this …\nIndicates the input buffer format for AS.\nIndicates a raster operation to perform when enabled\nIndicates that the AS pixel alpha value will be used to …\nIndicates that the value in the ALPHA field should be used …\nIndicates that the value in the ALPHA field should be used …\nEnable ROPs. The ROP field indicates an operation to be …\n16-bit pixels with alpha\n16-bit pixels with alpha\n32-bit pixels with alpha\n16-bit pixels without alpha\n16-bit pixels without alpha\n16-bit pixels without alpha\n32-bit pixels without alpha (unpacked 24-bit format)\nAS AND PS\nAS AND nPS\nnAS AND PS\nAS OR PS\nAS OR nPS\nnAS OR PS\nnPS\nnAS\nAS NAND PS\nAS NOR PS\nAS XNOR PS\nAS XOR PS\nIndicates the number of bytes in memory between two …\nBypass the CSC unit in the scaling engine\nTwo’s compliment Y multiplier coefficient. YUV=0x100 …\nTwo’s compliment phase offset implicit for CbCr data\nSet to 1 when performing YCbCr conversion to RGB\nTwo’s compliment amplitude offset implicit in the Y data\nTwo’s compliment Red V/Cr multiplier coefficient. …\nTwo’s compliment Blue U/Cb multiplier coefficient. …\nTwo’s complement Green V/Cr multiplier coefficient. …\nTwo’s complement Green U/Cb multiplier coefficient. …\nSelect the block size to process.\nThis bit must be set to zero for normal operation\nEnables PXP operation with specified parameters\nEnable handshake with LCD controller\nEnable the PXP to run continuously\nIndicates that the output buffer should be flipped …\nInterrupt enable\nNext command interrupt enable\nIndicates the clockwise rotation to be applied at the …\nThis bit controls where rotation will occur in the PXP …\nSet this bit to zero to enable normal PXP operation\nIndicates that the output buffer should be flipped …\nProcess 16x16 pixel blocks.\nProcess 8x8 pixel blocks.\nROT_0\nROT_180\nROT_270\nROT_90\nSelect the block size to process.\nThis bit must be set to zero for normal operation\nEnables PXP operation with specified parameters\nEnable handshake with LCD controller\nEnable the PXP to run continuously\nIndicates that the output buffer should be flipped …\nInterrupt enable\nNext command interrupt enable\nIndicates the clockwise rotation to be applied at the …\nThis bit controls where rotation will occur in the PXP …\nSet this bit to zero to enable normal PXP operation\nIndicates that the output buffer should be flipped …\nProcess 16x16 pixel blocks.\nProcess 8x8 pixel blocks.\nROT_0\nROT_180\nROT_270\nROT_90\nSelect the block size to process.\nThis bit must be set to zero for normal operation\nEnables PXP operation with specified parameters\nEnable handshake with LCD controller\nEnable the PXP to run continuously\nIndicates that the output buffer should be flipped …\nInterrupt enable\nNext command interrupt enable\nIndicates the clockwise rotation to be applied at the …\nThis bit controls where rotation will occur in the PXP …\nSet this bit to zero to enable normal PXP operation\nIndicates that the output buffer should be flipped …\nProcess 16x16 pixel blocks.\nProcess 8x8 pixel blocks.\nROT_0\nROT_180\nROT_270\nROT_90\nSelect the block size to process.\nThis bit must be set to zero for normal operation\nEnables PXP operation with specified parameters\nEnable handshake with LCD controller\nEnable the PXP to run continuously\nIndicates that the output buffer should be flipped …\nInterrupt enable\nNext command interrupt enable\nIndicates the clockwise rotation to be applied at the …\nThis bit controls where rotation will occur in the PXP …\nSet this bit to zero to enable normal PXP operation\nIndicates that the output buffer should be flipped …\nProcess 16x16 pixel blocks.\nProcess 8x8 pixel blocks.\nROT_0\nROT_180\nROT_270\nROT_90\nIndicates that the “next frame” functionality has been …\nA pointer to a data structure containing register values …\nThis field indicates the lower right X-coordinate (in …\nThis field indicates the lower right Y-coordinate (in …\nThis field indicates the upper left X-coordinate (in …\nThis field indicates the upper left Y-coordinate (in …\nCurrent address pointer for the output frame buffer\nCurrent address pointer for the output frame buffer\nWhen generating an output buffer with an alpha component, …\nIndicates that alpha component in output buffer pixels …\nOutput framebuffer format\nDetermines how the PXP writes it’s output data\n16-bit pixels\n16-bit pixels\n32-bit pixels\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit pixel in 32 bit DWORD.)\n24-bit pixels (packed 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nInterlaced output: only data for field 0 is written to the …\nInterlaced output: only data for field 1 is written to the …\nInterlaced output: data for field 0 is written to OUTBUF …\nAll data written in progressive format to the OUTBUF …\nWhen generating an output buffer with an alpha component, …\nIndicates that alpha component in output buffer pixels …\nOutput framebuffer format\nDetermines how the PXP writes it’s output data\n16-bit pixels\n16-bit pixels\n32-bit pixels\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit pixel in 32 bit DWORD.)\n24-bit pixels (packed 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nInterlaced output: only data for field 0 is written to the …\nInterlaced output: only data for field 1 is written to the …\nInterlaced output: data for field 0 is written to OUTBUF …\nAll data written in progressive format to the OUTBUF …\nWhen generating an output buffer with an alpha component, …\nIndicates that alpha component in output buffer pixels …\nOutput framebuffer format\nDetermines how the PXP writes it’s output data\n16-bit pixels\n16-bit pixels\n32-bit pixels\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit pixel in 32 bit DWORD.)\n24-bit pixels (packed 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nInterlaced output: only data for field 0 is written to the …\nInterlaced output: only data for field 1 is written to the …\nInterlaced output: data for field 0 is written to OUTBUF …\nAll data written in progressive format to the OUTBUF …\nWhen generating an output buffer with an alpha component, …\nIndicates that alpha component in output buffer pixels …\nOutput framebuffer format\nDetermines how the PXP writes it’s output data\n16-bit pixels\n16-bit pixels\n32-bit pixels\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit pixel in 32 bit DWORD.)\n24-bit pixels (packed 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nInterlaced output: only data for field 0 is written to the …\nInterlaced output: only data for field 1 is written to the …\nInterlaced output: data for field 0 is written to OUTBUF …\nAll data written in progressive format to the OUTBUF …\nIndicates number of horizontal PIXELS in the output …\nIndicates the number of vertical PIXELS in the output …\nIndicates the number of bytes in memory between two …\nThis field indicates the lower right X-coordinate (in …\nThis field indicates the lower right Y-coordinate (in …\nThis field indicates the upper left X-coordinate (in …\nThis field indicates the upper left Y-coordinate (in …\npoter_duff enable\ns0 alpha mode\ns0 color mode\ns0 global alpha\ns0 global alpha mode\ns0 to s1 factor mode\ns1 alpha mode\ns1 color mode\ns1 global alpha\ns1 global alpha mode\ns1 to s0 factor mode\nPower control for the PXP.\nSelect the low power state of the ROT memory.\nDeep Sleep Mode. Low leakage mode, maintain memory …\nLight Sleep Mode. Low leakage mode, maintain memory …\nMemory is not in low power state.\nShut Down Mode. Shut Down periphery and core, no memory …\nBackground color (in 24bpp format) for any pixels not …\nAddress pointer for the PS RGB or Y (luma) input buffer.\nHigh range of color key applied to PS buffer\nLow range of color key applied to PS buffer\nHorizontal pre decimation filter control.\nVerticle pre decimation filter control.\nPS buffer format. To select between YUV and YCbCr formats, …\nSwap bytes in words. For each 16 bit word, the two bytes …\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (3-plane format)\n16-bit pixels (3-plane format)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nHorizontal pre decimation filter control.\nVerticle pre decimation filter control.\nPS buffer format. To select between YUV and YCbCr formats, …\nSwap bytes in words. For each 16 bit word, the two bytes …\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (3-plane format)\n16-bit pixels (3-plane format)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nHorizontal pre decimation filter control.\nVerticle pre decimation filter control.\nPS buffer format. To select between YUV and YCbCr formats, …\nSwap bytes in words. For each 16 bit word, the two bytes …\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (3-plane format)\n16-bit pixels (3-plane format)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nHorizontal pre decimation filter control.\nVerticle pre decimation filter control.\nPS buffer format. To select between YUV and YCbCr formats, …\nSwap bytes in words. For each 16 bit word, the two bytes …\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\nDecimate PS by 2.\nDecimate PS by 4.\nDecimate PS by 8.\nDisable pre-decimation filter.\n16-bit pixels\n16-bit pixels\n16-bit pixels\n32-bit pixels (unpacked 24-bit format)\n16-bit pixels (1-plane U0,Y0,V0,Y1 interleaved bytes)\n16-bit pixels (1-plane V0,Y0,U0,Y1 interleaved bytes)\n4-bit monochrome pixels (1-plane Y luma, 4 bit truncation)\n8-bit monochrome pixels (1-plane Y luma output)\n32-bit pixels (1-plane XYUV unpacked)\n16-bit pixels (2-plane UV)\n16-bit pixels (2-plane UV interleaved bytes)\n16-bit pixels (3-plane format)\n16-bit pixels (3-plane format)\n16-bit pixels (2-plane VU)\n16-bit pixels (2-plane VU interleaved bytes)\nThis is a 12 bit fractional representation (0\nThis is a 12 bit fractional representation (0\nIndicates the number of bytes in memory between two …\nThis is a two bit integer and 12 bit fractional …\nThis is a two bit integer and 12 bit fractional …\nAddress pointer for the PS U/Cb or 2 plane UV Chroma input …\nAddress pointer for the PS V/Cr Chroma input buffer.\nIndicates the AXI ID of the failing bus operation.\nIndicates PXP encountered an AXI read error and processing …\nIndicates PXP encountered an AXI write error and …\nIndicates the X coordinate of the block currently being …\nIndicates the X coordinate of the block currently being …\nIndicates current PXP interrupt status\nIndicates that the LUT DMA transfer has completed.\nIndicates that a command issued with the “Next Command”…\nIndicates the AXI ID of the failing bus operation.\nIndicates PXP encountered an AXI read error and processing …\nIndicates PXP encountered an AXI write error and …\nIndicates the X coordinate of the block currently being …\nIndicates the X coordinate of the block currently being …\nIndicates current PXP interrupt status\nIndicates that the LUT DMA transfer has completed.\nIndicates that a command issued with the “Next Command”…\nIndicates the AXI ID of the failing bus operation.\nIndicates PXP encountered an AXI read error and processing …\nIndicates PXP encountered an AXI write error and …\nIndicates the X coordinate of the block currently being …\nIndicates the X coordinate of the block currently being …\nIndicates current PXP interrupt status\nIndicates that the LUT DMA transfer has completed.\nIndicates that a command issued with the “Next Command”…\nIndicates the AXI ID of the failing bus operation.\nIndicates PXP encountered an AXI read error and processing …\nIndicates PXP encountered an AXI write error and …\nIndicates the X coordinate of the block currently being …\nIndicates the X coordinate of the block currently being …\nIndicates current PXP interrupt status\nIndicates that the LUT DMA transfer has completed.\nIndicates that a command issued with the “Next Command”…\nROMC\nROMC Address Registers\nROMC Address Registers\nROMC Control Register\nROMC Control Register\nROMC Data Registers\nROMC Data Registers\nROMC Enable Register High\nROMC Enable Register Low\nROMC Enable Register Low\nROMC Status Register\nROMC Status Register\nROMC\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nAddress Comparator Registers - Indicates the memory …\nTHUMB Comparator Select - Indicates that this address will …\nArm patch\nTHUMB patch (ignore if data fix)\nData Fix Enable - Controls the use of the first 8 address …\nROMC Disable – This bit, when set, disables all ROMC …\nAddress comparator triggers a opcode patch\nAddress comparator triggers a data fix\nDoes not affect any ROMC functions (default)\nDisable all ROMC functions: data fixing, and opcode …\nData Fix Registers - Stores the data used for 1-word data …\nEnable Address Comparator - This bit enables the …\nAddress comparator disabled\nAddress comparator enabled, ROMC will trigger a opcode …\nROMC Source Number - Binary encoding of the number of the …\nROMC AHB Multiple Address Comparator matches Indicator - …\nAddress Comparator 0 matched\nAddress Comparator 1 matched\nAddress Comparator 15 matched\nno event or comparator collisions\na collision has occurred\nWatchdog Counter Register\nWatchdog Counter Register\nWatchdog Control and Status Register\nWatchdog Control and Status Register\nWDOG\nWDOG\nWatchdog Timeout Value Register\nWatchdog Timeout Value Register\nWatchdog Window Register\nWatchdog Window Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nHigh byte of the Watchdog Counter\nLow byte of the Watchdog Counter\nWatchdog Clock\nEnables or disables WDOG support for 32-bit (otherwise …\nDebug Enable\nWatchdog Enable\nWatchdog Interrupt Flag\nWatchdog Interrupt\nWatchdog prescaler\nReconfiguration Success\nStop Enable\nWatchdog Test\nUnlock status\nAllow updates\nWait Enable\nWatchdog Window\nBus clock\nLPO clock\nINTCLK (internal clock)\nERCLK (external reference clock)\nDisables support for 32-bit refresh/unlock command write …\nEnables support for 32-bit refresh/unlock command write …\nWatchdog disabled in chip debug mode.\nWatchdog enabled in chip debug mode.\nWatchdog disabled.\nWatchdog enabled.\nNo interrupt occurred.\nAn interrupt occurred.\nWatchdog interrupts are disabled. Watchdog resets are not …\nWatchdog interrupts are enabled. Watchdog resets are …\n256 prescaler disabled.\n256 prescaler enabled.\nReconfiguring WDOG.\nReconfiguration is successful.\nWatchdog disabled in chip stop mode.\nWatchdog enabled in chip stop mode.\nWatchdog test mode disabled.\nWatchdog user mode enabled. (Watchdog test mode disabled.) …\nWatchdog test mode enabled, only the low byte is used. CNT…\nWatchdog test mode enabled, only the high byte is used. CNT…\nWDOG is locked.\nWDOG is unlocked.\nUpdates not allowed. After the initial configuration, the …\nUpdates allowed. Software can modify the watchdog …\nWatchdog disabled in chip wait mode.\nWatchdog enabled in chip wait mode.\nWindow mode disabled.\nWindow mode enabled.\nHigh byte of the timeout value\nLow byte of the timeout value\nHigh byte of Watchdog Window\nLow byte of Watchdog Window\nParameter Register\nParameter Register\nSAI Receive Configuration 1 Register\nSAI Receive Configuration 1 Register\nSAI Receive Configuration 2 Register\nSAI Receive Configuration 2 Register\nSAI Receive Configuration 3 Register\nSAI Receive Configuration 3 Register\nSAI Receive Configuration 4 Register\nSAI Receive Configuration 4 Register\nSAI Receive Configuration 5 Register\nSAI Receive Configuration 5 Register\nSAI Receive Control Register\nSAI Receive Control Register\nSAI Receive Data Register\nSAI Receive Data Register\nSAI Receive FIFO Register\nSAI Receive FIFO Register\nSAI Receive Mask Register\nSAI Receive Mask Register\nI2S\nI2S\nI2S\nI2S\nSAI Transmit Configuration 1 Register\nSAI Transmit Configuration 1 Register\nSAI Transmit Configuration 2 Register\nSAI Transmit Configuration 2 Register\nSAI Transmit Configuration 3 Register\nSAI Transmit Configuration 3 Register\nSAI Transmit Configuration 4 Register\nSAI Transmit Configuration 4 Register\nSAI Transmit Configuration 5 Register\nSAI Transmit Configuration 5 Register\nSAI Transmit Control Register\nSAI Transmit Control Register\nSAI Transmit Data Register\nSAI Transmit Data Register\nSAI Transmit FIFO Register\nSAI Transmit FIFO Register\nSAI Transmit Mask Register\nSAI Transmit Mask Register\nVersion ID Register\nVersion ID Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nNumber of Datalines\nFIFO Size\nFrame Size\nReceive FIFO Watermark\nBit Clock Direction\nBit Clock Input\nBit Clock Polarity\nBit Clock Swap\nBit Clock Divide\nMCLK Select\nSynchronous Mode\nBit clock is generated externally in Slave mode.\nBit clock is generated internally in Master mode.\nNo effect.\nInternal logic is clocked as if bit clock was externally …\nBit Clock is active high with drive outputs on rising edge …\nBit Clock is active low with drive outputs on falling edge …\nUse the normal bit clock source.\nSwap the bit clock source.\nBus Clock selected.\nMaster Clock (MCLK) 1 option selected.\nMaster Clock (MCLK) 2 option selected.\nMaster Clock (MCLK) 3 option selected.\nAsynchronous mode.\nSynchronous with transmitter.\nChannel FIFO Reset\nReceive Channel Enable\nWord Flag Configuration\nFIFO Combine Mode\nFIFO Continue on Error\nFIFO Packing Mode\nFrame Size\nFrame Sync Direction\nFrame Sync Early\nFrame Sync Polarity\nMSB First\nOn Demand Mode\nSync Width\nFIFO combine mode disabled.\nFIFO combine mode enabled on FIFO writes (from receive …\nFIFO combine mode enabled on FIFO reads (by software).\nFIFO combine mode enabled on FIFO writes (from receive …\nOn FIFO error, the SAI will continue from the start of the …\nOn FIFO error, the SAI will continue from the same word …\nFIFO packing is disabled\n8-bit FIFO packing is enabled\n16-bit FIFO packing is enabled\nFrame Sync is generated externally in Slave mode.\nFrame Sync is generated internally in Master mode.\nFrame sync asserts with the first bit of the frame.\nFrame sync asserts one bit before the first bit of the …\nFrame sync is active high.\nFrame sync is active low.\nLSB is received first.\nMSB is received first.\nInternal frame sync is generated continuously.\nInternal frame sync is generated when the FIFO warning …\nFirst Bit Shifted\nWord 0 Width\nWord N Width\nBit Clock Enable\nDebug Enable\nFIFO Error Flag\nFIFO Error Interrupt Enable\nFIFO Reset\nFIFO Request DMA Enable\nFIFO Request Flag\nFIFO Request Interrupt Enable\nFIFO Warning DMA Enable\nFIFO Warning Flag\nFIFO Warning Interrupt Enable\nReceiver Enable\nSync Error Flag\nSync Error Interrupt Enable\nSoftware Reset\nStop Enable\nWord Start Flag\nWord Start Interrupt Enable\nReceive bit clock is disabled.\nReceive bit clock is enabled.\nReceiver is disabled in Debug mode, after completing the …\nReceiver is enabled in Debug mode.\nReceive overflow not detected.\nReceive overflow detected.\nDisables the interrupt.\nEnables the interrupt.\nNo effect.\nFIFO reset.\nDisables the DMA request.\nEnables the DMA request.\nReceive FIFO watermark not reached.\nReceive FIFO watermark has been reached.\nDisables the interrupt.\nEnables the interrupt.\nDisables the DMA request.\nEnables the DMA request.\nNo enabled receive FIFO is full.\nEnabled receive FIFO is full.\nDisables the interrupt.\nEnables the interrupt.\nReceiver is disabled.\nReceiver is enabled, or receiver has been disabled and has …\nSync error not detected.\nFrame sync error detected.\nDisables interrupt.\nEnables interrupt.\nNo effect.\nSoftware reset.\nReceiver disabled in Stop mode.\nReceiver enabled in Stop mode.\nStart of word not detected.\nStart of word detected.\nDisables interrupt.\nEnables interrupt.\nReceive Data Register\nReceive Channel Pointer\nRead FIFO Pointer\nWrite FIFO Pointer\nNo effect.\nFIFO combine is enabled for FIFO reads and this FIFO will …\nReceive Word Mask\nWord N is enabled.\nWord N is masked.\nTransmit FIFO Watermark\nBit Clock Direction\nBit Clock Input\nBit Clock Polarity\nBit Clock Swap\nBit Clock Divide\nMCLK Select\nSynchronous Mode\nBit clock is generated externally in Slave mode.\nBit clock is generated internally in Master mode.\nNo effect.\nInternal logic is clocked as if bit clock was externally …\nBit clock is active high with drive outputs on rising edge …\nBit clock is active low with drive outputs on falling edge …\nUse the normal bit clock source.\nSwap the bit clock source.\nBus Clock selected.\nMaster Clock (MCLK) 1 option selected.\nMaster Clock (MCLK) 2 option selected.\nMaster Clock (MCLK) 3 option selected.\nAsynchronous mode.\nSynchronous with receiver.\nChannel FIFO Reset\nTransmit Channel Enable\nWord Flag Configuration\nChannel Mode\nFIFO Combine Mode\nFIFO Continue on Error\nFIFO Packing Mode\nFrame size\nFrame Sync Direction\nFrame Sync Early\nFrame Sync Polarity\nMSB First\nOn Demand Mode\nSync Width\nTDM mode, transmit data pins are tri-stated when slots are …\nOutput mode, transmit data pins are never tri-stated and …\nFIFO combine mode disabled.\nFIFO combine mode enabled on FIFO reads (from transmit …\nFIFO combine mode enabled on FIFO writes (by software).\nFIFO combine mode enabled on FIFO reads (from transmit …\nOn FIFO error, the SAI will continue from the start of the …\nOn FIFO error, the SAI will continue from the same word …\nFIFO packing is disabled\n8-bit FIFO packing is enabled\n16-bit FIFO packing is enabled\nFrame sync is generated externally in Slave mode.\nFrame sync is generated internally in Master mode.\nFrame sync asserts with the first bit of the frame.\nFrame sync asserts one bit before the first bit of the …\nFrame sync is active high.\nFrame sync is active low.\nLSB is transmitted first.\nMSB is transmitted first.\nInternal frame sync is generated continuously.\nInternal frame sync is generated when the FIFO warning …\nFirst Bit Shifted\nWord 0 Width\nWord N Width\nBit Clock Enable\nDebug Enable\nFIFO Error Flag\nFIFO Error Interrupt Enable\nFIFO Reset\nFIFO Request DMA Enable\nFIFO Request Flag\nFIFO Request Interrupt Enable\nFIFO Warning DMA Enable\nFIFO Warning Flag\nFIFO Warning Interrupt Enable\nSync Error Flag\nSync Error Interrupt Enable\nSoftware Reset\nStop Enable\nTransmitter Enable\nWord Start Flag\nWord Start Interrupt Enable\nTransmit bit clock is disabled.\nTransmit bit clock is enabled.\nTransmitter is disabled in Debug mode, after completing …\nTransmitter is enabled in Debug mode.\nTransmit underrun not detected.\nTransmit underrun detected.\nDisables the interrupt.\nEnables the interrupt.\nNo effect.\nFIFO reset.\nDisables the DMA request.\nEnables the DMA request.\nTransmit FIFO watermark has not been reached.\nTransmit FIFO watermark has been reached.\nDisables the interrupt.\nEnables the interrupt.\nDisables the DMA request.\nEnables the DMA request.\nNo enabled transmit FIFO is empty.\nEnabled transmit FIFO is empty.\nDisables the interrupt.\nEnables the interrupt.\nSync error not detected.\nFrame sync error detected.\nDisables interrupt.\nEnables interrupt.\nNo effect.\nSoftware reset.\nTransmitter disabled in Stop mode.\nTransmitter enabled in Stop mode.\nTransmitter is disabled.\nTransmitter is enabled, or transmitter has been disabled …\nStart of word not detected.\nStart of word detected.\nDisables interrupt.\nEnables interrupt.\nTransmit Data Register\nRead FIFO Pointer\nWrite Channel Pointer\nWrite FIFO Pointer\nNo effect.\nFIFO combine is enabled for FIFO writes and this FIFO will …\nTransmit Word Mask\nWord N is enabled.\nWord N is masked. The transmit data pins are tri-stated or …\nFeature Specification Number\nMajor Version Number\nMinor Version Number\nStandard feature set.\nMaster Bus (AXI) Control Register 0\nMaster Bus (AXI) Control Register 0\nMaster Bus (AXI) Control Register 1\nMaster Bus (AXI) Control Register 1\nBase Register 0 (For SDRAM CS0 device)\nBase Register 0 (For SDRAM CS0 device)\nBase Register 1 (For SDRAM CS1 device)\nBase Register 1 (For SDRAM CS1 device)\nBase Register 2 (For SDRAM CS2 device)\nBase Register 2 (For SDRAM CS2 device)\nBase Register 3 (For SDRAM CS3 device)\nBase Register 3 (For SDRAM CS3 device)\nBase Register 4 (For NAND device)\nBase Register 4 (For NAND device)\nBase Register 5 (For NOR device)\nBase Register 5 (For NOR device)\nBase Register 6 (For PSRAM device)\nBase Register 6 (For PSRAM device)\nBase Register 7 (For DBI-B (MIPI Display Bus Interface …\nBase Register 7 (For DBI-B (MIPI Display Bus Interface …\nBase Register 8 (For NAND device)\nBase Register 8 (For NAND device)\nDBI-B control register 0\nDBI-B control register 0\nDBI-B control register 1\nDBI-B control register 1\nDLL Control Register\nDLL Control Register\nInterrupt Enable Register\nInterrupt Enable Register\nInterrupt Enable Register\nInterrupt Enable Register\nIO Mux Control Register\nIO Mux Control Register\nIP Command register\nIP Command register\nIP Command control register 0\nIP Command control register 0\nIP Command control register 1\nIP Command control register 1\nIP Command control register 2\nIP Command control register 2\nRX DATA register (for IP Command)\nRX DATA register (for IP Command)\nTX DATA register (for IP Command)\nTX DATA register (for IP Command)\nModule Control Register\nModule Control Register\nNAND control register 0\nNAND control register 0\nNAND control register 1\nNAND control register 1\nNAND control register 2\nNAND control register 2\nNAND control register 3\nNAND control register 3\nNOR control register 0\nNOR control register 0\nNOR control register 1\nNOR control register 1\nNOR control register 2\nNOR control register 2\nNOR control register 3\nNOR control register 3\nSEMC\nSDRAM control register 0\nSDRAM control register 0\nSDRAM control register 1\nSDRAM control register 1\nSDRAM control register 2\nSDRAM control register 2\nSDRAM control register 3\nSDRAM control register 3\nSEMC\nSRAM control register 0\nSRAM control register 0\nSRAM control register 1\nSRAM control register 1\nSRAM control register 2\nSRAM control register 2\nSRAM control register 3\nStatus register 0\nStatus register 0\nStatus register 1\nStatus register 10\nStatus register 11\nStatus register 12\nStatus register 12\nStatus register 13\nStatus register 13\nStatus register 14\nStatus register 15\nStatus register 2\nStatus register 2\nStatus register 3\nStatus register 4\nStatus register 5\nStatus register 6\nStatus register 7\nStatus register 8\nStatus register 9\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nWeight of Aging\nWeight of QoS\nWeight of Slave Hit (Read/Write switch)\nWeight of Slave Hit (no read/write switch)\nWeight of Aging\nWeight of Bank Rotation\nWeight of Page Hit\nWeight of QoS\nWeight of Read/Write switch\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBase Address\nMemory size\nValid\n4KB\n8KB\n4MB\n8MB\n16MB\n32MB\n64MB\n128MB\n256MB\n512MB\n1GB\n2GB\n16KB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n4GB\n32KB\n4GB\n4GB\n64KB\n128KB\n256KB\n512KB\n1MB\n2MB\nBurst Length\nColumn Address bit width\nPort Size\n1\n2\n4\n8\n16\n32\n64\n64\n12 Bits\n11 Bits\n2 Bits\n12 Bits\n12 Bits\n12 Bits\n12 Bits\n12 Bits\n10 Bits\n9 Bits\n8 Bits\n7 Bits\n6 Bits\n5 Bits\n4 Bits\n3 Bits\n8bit\n16bit\nCSX Hold Time\nCSX interval min time\nCSX Setup Time\nRDX High Time\nRDX Low Time\nWRX High Time\nWRX Low Time\nDLL calibration enable.\nSoftware could force a reset on DLL by setting this field …\nSlave clock delay line delay cell number selection …\nSlave clock delay line delay cell number selection …\nThe delay target for slave delay line is: …\nAXI bus error interrupt enable\nAXI command error interrupt enable\nIP command done interrupt enable\nIP command error interrupt enable\nThis bit enable/disable the NDNOPEND interrupt generation.\nThis bit enable/disable the NDPAGEEND interrupt generation.\nDisable\nEnable\nDisable\nEnable\nAXI bus error interrupt\nAXI command error interrupt\nIP command normal done interrupt\nIP command error done interrupt\nThis interrupt is generated when all pending AXI write …\nThis interrupt is generated when the last address of one …\nSEMC_A8 output selection\nSEMC_CLKX0 function selection\nSEMC_CLKX1 function selection\nSEMC_CSX0 output selection\nSEMC_CSX1 output selection\nSEMC_CSX2 output selection\nSEMC_CSX3 output selection\nSEMC_RDY function selection\nSDRAM Address bit (A8)\nNAND CE#\nNOR CE#\nPSRAM CE#\nDBI CSX\nSDRAM Address bit (A8)\nSDRAM Address bit (A8)\nSDRAM Address bit (A8)\nNOR clock\nSRAM clock\nNOR clock\nSRAM clock\nNOR/PSRAM Address bit 24 (A24)\nSDRAM CS1\nSDRAM CS2\nSDRAM CS3\nNAND CE#\nNOR CE#\nPSRAM CE#\nDBI CSX\nNOR/PSRAM Address bit 25 (A25)\nSDRAM CS1\nSDRAM CS2\nSDRAM CS3\nNAND CE#\nNOR CE#\nPSRAM CE#\nDBI CSX\nNOR/PSRAM Address bit 26 (A26)\nSDRAM CS1\nSDRAM CS2\nSDRAM CS3\nNAND CE#\nNOR CE#\nPSRAM CE#\nDBI CSX\nNOR/PSRAM Address bit 27 (A27)\nSDRAM CS1\nSDRAM CS2\nSDRAM CS3\nNAND CE#\nNOR CE#\nPSRAM CE#\nDBI CSX\nNAND Ready/Wait# input\nSDRAM CS1\nSDRAM CS2\nSDRAM CS3\nNOR CE#\nPSRAM CE#\nDBI CSX\nNOR/PSRAM Address bit 27\nSDRAM Commands: 0x8: READ 0x9: WRITE 0xA: MODESET 0xB: …\nThis field should be written with 0xA55A when trigging an …\nSlave address\nData Size in Byte\nNAND Extended Address\n4\n1\n2\n3\n4\n4\n4\n4\nByte Mask for Byte 0 (IPTXD bit 7:0)\nByte Mask for Byte 1 (IPTXD bit 15:8)\nByte Mask for Byte 2 (IPTXD bit 23:16)\nByte Mask for Byte 3 (IPTXD bit 31:24)\nByte Unmasked\nByte Masked\nByte Unmasked\nByte Masked\nByte Unmasked\nByte Masked\nByte Unmasked\nByte Masked\nno description available\nno description available\nBus timeout cycles\nCommand Execution timeout cycles\nSelect DLL delay chain clock input.\nDQS (read strobe) mode\nSelect DQS source when DQSMD and DLLSEL both set.\nModule Disable\nSoftware Reset\nWAIT/RDY# polarity for NOR/PSRAM\nWAIT/RDY# polarity for NAND\n255*1\n255<em>2 - 255</em>2^30\n255<em>2 - 255</em>2^30\n255<em>2 - 255</em>2^30\n255*2^31\n255<em>2 - 255</em>2^30\n255<em>2 - 255</em>2^30\n255<em>2 - 255</em>2^30\n255<em>2 - 255</em>2^30\n255<em>2 - 255</em>2^30\n255<em>2 - 255</em>2^30\nDLL delay chain clock input is from NAND device’s DQS …\nDLL delay chain clock input is from internal clock. For …\nDummy read strobe loopbacked internally\nDummy read strobe loopbacked from DQS pad\nSDRAM/NOR/SRAM read clock source is from DQS pad in …\nSDRAM/NOR/SRAM read clock source is from DLL delay chain …\nModule enabled\nMaster disabled.\nLow active\nHigh active\nLow active\nHigh active\nBurst Length\nColumn address bit number\nEDO mode enabled\nPort Size\nSelect NAND controller mode.\n1\n2\n4\n8\n16\n32\n64\n64\n16\n15\n14\n13\n12\n11\n10\n9\nEDO mode disabled\nEDO mode enabled\n8bit\n16bit\nAsynchronous mode is enabled.\nSynchronous mode is enabled.\nCE hold time\nCE# interval time\nCE setup time\nRE# HIGH time\nRE# LOW time\nTurnaround time\nWE# HIGH time\nWE# LOW time\nALE to WRITE Data start wait time\nRE# HIGH to WE# LOW wait time\nReady to RE# LOW min wait time\nWE# HIGH to busy wait time\nWE# HIGH to RE# LOW wait time\nNAND CLE Option\nNAND option bit 1\nNAND option bit 2\nNAND option bit 3\nRead Data Hold cycle time.\nRead Data Setup cycle time.\nWrite Data Hold cycle time.\nWrite Data Setup cycle time.\nADV# level control during address hold state\nADV# polarity\nAddress Mode\nBurst Length\nColumn Address bit width\nPort Size\nSelect NOR controller mode.\nADV# is high during address hold state.\nADV# is low during address hold state.\nADV# is Low Active. In ASYNC mode, device sample address …\nADV# is High Active. In ASYNC mode, device sample address …\nAddress/Data MUX mode\nAdvanced Address/Data MUX mode\nAddress/Data non-MUX mode\nAddress/Data non-MUX mode\n1\n2\n4\n8\n16\n32\n64\n64\n12 Bits\n11 Bits\n2 Bits\n12 Bits\n12 Bits\n12 Bits\n12 Bits\n12 Bits\n10 Bits\n9 Bits\n8 Bits\n7 Bits\n6 Bits\n5 Bits\n4 Bits\n3 Bits\n8bit\n16bit\nAsynchronous mode is enabled.\nSynchronous mode is enabled.\nAddress hold time\nAddress setup time\nCE hold min time (CEH+1) cycle\nCE setup time cycle\nRE HIGH time (REH+1) cycle\nRE LOW time (REL+1) cycle\nWE HIGH time (WEH+1) cycle\nWE LOW time (WEL+1) cycle\nAddress to write data hold time cycle\nCE# interval min time\nLatency count\nRead cycle time\nRead cycle hold time\nTurnaround time cycle\nAddress hold time for synchronous read\nAddress setup time for synchronous read\n2 Bank selection bit\nBurst Length\nCAS Latency\nColumn address bit number\nColumn 8 selection bit\nPort Size\nSDRAM device has 4 banks.\nSDRAM device has 2 banks.\n1\n2\n4\n8\n8\n8\n8\n8\n1\n1\n2\n3\nColumn address bit number is decided by COL field.\nColumn address bit number is 8. COL field is ignored.\n12 bit\n11 bit\n10 bit\n9 bit\n8bit\n16bit\nACT to Precharge minimum time\nACT to Read/Write wait time\nCKE OFF minimum time\nPRECHARGE to ACT/Refresh wait time\nRefresh recovery time\nWrite recovery time\nACT to ACT wait time\nSDRAM Idle timeout\nRefresh to Refresh wait time\nSelf Refresh Recovery time\nIDLE timeout period is 256*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nIDLE timeout period is ITO*Prescale period.\nPrescaler timer period\nRefresh burst length\nRefresh enable\nRefresh timer period\nRefresh urgent threshold\n256*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\nPRESCALE*16 cycle\n1\n2\n3\n4\n5\n6\n7\n8\n256*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\nRT*Prescaler period\n256*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nUT*Prescaler period\nADV# level control during address hold state\nADV# polarity\nAddress Mode\nBurst Length\nColumn Address bit width\nPort Size\nSelect SRAM controller mode.\nADV# is high during address hold state.\nADV# is low during address hold state.\nADV# is Low Active. In ASYNC mode, device sample address …\nADV# is High Active. In ASYNC mode, device sample address …\nAddress/Data MUX mode\nAdvanced Address/Data MUX mode\nAddress/Data non-MUX mode\nAddress/Data non-MUX mode\n1\n2\n4\n8\n16\n32\n64\n64\n12 Bits\n11 Bits\n2 Bits\n12 Bits\n12 Bits\n12 Bits\n12 Bits\n12 Bits\n10 Bits\n9 Bits\n8 Bits\n7 Bits\n6 Bits\n5 Bits\n4 Bits\n3 Bits\n8bit\n16bit\nAsynchronous mode is enabled.\nSynchronous mode is enabled.\nAddress hold time\nAddress setup time\nCE hold min time (CEH+1) cycle\nCE setup time cycle\nRE HIGH time (REH+1) cycle\nRE LOW time (REL+1) cycle\nWE HIGH time (WEH+1) cycle\nWE LOW time (WEL+1) cycle\nAddress to write data hold time cycle\nCE# interval min time\nLatency count\nRead cycle time\nRead cycle hold time\nTurnaround time cycle\nWrite Data hold time WDH cycle\nWrite Data setup time (WDS+1) cycle\nIndicating whether SEMC is in IDLE state.\nIndicating NAND device Ready/WAIT# pin level.\nNAND device is not ready\nNAND device is ready\nThis field indicating the last write address (AXI command) …\nSample clock reference delay line locked.\nSample clock reference delay line delay cell number …\nSample clock slave delay line locked.\nSample clock slave delay line delay cell number selection .\nThis field indicating whether there is pending AXI command …\nNo pending\nPending\nSNVS_HP Command Register\nSNVS_HP Command Register\nSNVS_HP Control Register\nSNVS_HP Control Register\nSNVS_HP High Assurance Counter IV Register\nSNVS_HP High Assurance Counter IV Register\nSNVS_HP High Assurance Counter Register\nSNVS_HP High Assurance Counter Register\nSNVS_HP Lock Register\nSNVS_HP Lock Register\nSNVS_HP Real Time Counter LSB Register\nSNVS_HP Real Time Counter LSB Register\nSNVS_HP Real Time Counter MSB Register\nSNVS_HP Real Time Counter MSB Register\nSNVS_HP Security Interrupt Control Register\nSNVS_HP Security Interrupt Control Register\nSNVS_HP Status Register\nSNVS_HP Status Register\nSNVS_HP Security Violation Control Register\nSNVS_HP Security Violation Control Register\nSNVS_HP Security Violation Status Register\nSNVS_HP Security Violation Status Register\nSNVS_HP Time Alarm LSB Register\nSNVS_HP Time Alarm LSB Register\nSNVS_HP Time Alarm MSB Register\nSNVS_HP Time Alarm MSB Register\nSNVS_HP Version ID Register 1\nSNVS_HP Version ID Register 1\nSNVS_HP Version ID Register 2\nSNVS_HP Version ID Register 2\nSNVS_LP Control Register\nSNVS_LP Control Register\nSNVS_LP General Purpose Registers 0 .. 7\nSNVS_LP General Purpose Registers 0 .. 7\nSNVS_LP General Purpose Register 0 (legacy alias)\nSNVS_LP General Purpose Register 0 (legacy alias)\nSNVS_LP General Purpose Registers 0 .. 3\nSNVS_LP General Purpose Registers 0 .. 3\nSNVS_LP Lock Register\nSNVS_LP Lock Register\nSNVS_LP Master Key Control Register\nSNVS_LP Master Key Control Register\nSNVS_LP Power Glitch Detector Register\nSNVS_LP Power Glitch Detector Register\nSNVS_LP Secure Monotonic Counter LSB Register\nSNVS_LP Secure Monotonic Counter LSB Register\nSNVS_LP Secure Monotonic Counter MSB Register\nSNVS_LP Secure Monotonic Counter MSB Register\nSNVS_LP Status Register\nSNVS_LP Status Register\nSNVS_LP Secure Real Time Counter LSB Register\nSNVS_LP Secure Real Time Counter LSB Register\nSNVS_LP Secure Real Time Counter MSB Register\nSNVS_LP Secure Real Time Counter MSB Register\nSNVS_LP Security Violation Control Register\nSNVS_LP Security Violation Control Register\nSNVS_LP Time Alarm Register\nSNVS_LP Time Alarm Register\nSNVS_LP Tamper Detectors Configuration Register\nSNVS_LP Tamper Detectors Configuration Register\nSNVS_LP Zeroizable Master Key Register\nSNVS_LP Zeroizable Master Key Register\nSNVS\nSNVS\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nHigh Assurance Counter Clear When set, it clears the High …\nHigh Assurance Counter Enable This bit controls the SSM …\nHigh Assurance Counter Load When set, it loads the High …\nHigh Assurance Counter Stop This bit can be set only when …\nLP Software Reset When set to 1, most registers in the …\nLP Software Reset Disable When set, disables the LP …\nMaster Key Select Enable When not set, the one time …\nNon-Privileged Software Access Enable When set, allows …\nProgram Zeroizable Master Key This bit activates ZMK …\nSSM Soft Fail to Non-Secure State Transition Disable When …\nSSM State Transition Transition state of the system …\nSSM Secure to Trusted State Transition Disable When set, …\nSoftware Fatal Security Violation When set, the system …\nLP Software Security Violation When set, SNVS_LP treats …\nSoftware Security Violation When set, the system security …\nNo Action\nClear the HAC\nHigh Assurance Counter is disabled\nHigh Assurance Counter is enabled\nNo Action\nLoad the HAC\nNo Action\nReset LP section\nLP software reset is enabled\nLP software reset is disabled\nOTP master key is selected as an SNVS master key\nSNVS master key is selected according to the setting of …\nNo Action\nActivate hardware key programming mechanism\nSoft Fail to Non-Secure State transition is enabled\nSoft Fail to Non-Secure State transition is disabled\nSecure to Trusted State transition is enabled\nSecure to Trusted State transition is disabled\nButton Configuration\nButton interrupt mask\nDisable periodic interrupt in the functional interrupt\nHP Real Time Counter Calibration Enabled Indicates that …\nHP Calibration Value Defines signed calibration value for …\nHP Time Alarm Enable When set, the time alarm interrupt is …\nHP Time Synchronize\nHP Periodic Interrupt Enable The periodic interrupt can be …\nPeriodic Interrupt Frequency Defines frequency of the …\nHP Real Time Counter Enable\nPeriodic interrupt will trigger a functional interrupt\nDisable periodic interrupt in the function interrupt\nHP Timer calibration disabled\nHP Timer calibration enabled\n+0 counts per each 32768 ticks of the counter\n+1 counts per each 32768 ticks of the counter\n+15 counts per each 32768 ticks of the counter\n-16 counts per each 32768 ticks of the counter\n-15 counts per each 32768 ticks of the counter\n+2 counts per each 32768 ticks of the counter\n-2 counts per each 32768 ticks of the counter\n-1 counts per each 32768 ticks of the counter\nHP Time Alarm Interrupt is disabled\nHP Time Alarm Interrupt is enabled\nNo Action\nSynchronize the HP Time Counter to the LP Time Counter\nHP Periodic Interrupt is disabled\nHP Periodic Interrupt is enabled\nbit 0 of the HPRTCLR is selected as a source of the …\nbit 1 of the HPRTCLR is selected as a source of the …\nbit 10 of the HPRTCLR is selected as a source of the …\nbit 11 of the HPRTCLR is selected as a source of the …\nbit 12 of the HPRTCLR is selected as a source of the …\nbit 13 of the HPRTCLR is selected as a source of the …\nbit 14 of the HPRTCLR is selected as a source of the …\nbit 15 of the HPRTCLR is selected as a source of the …\nbit 2 of the HPRTCLR is selected as a source of the …\nbit 3 of the HPRTCLR is selected as a source of the …\nbit 4 of the HPRTCLR is selected as a source of the …\nbit 5 of the HPRTCLR is selected as a source of the …\nbit 6 of the HPRTCLR is selected as a source of the …\nbit 7 of the HPRTCLR is selected as a source of the …\nbit 8 of the HPRTCLR is selected as a source of the …\nbit 9 of the HPRTCLR is selected as a source of the …\nRTC is disabled\nRTC is enabled\nHigh Assurance Counter Initial Value This register is used …\nHigh Assurance Counter When the HAC_EN bit is set and the …\nGeneral Purpose Register Soft Lock When set, prevents any …\nHigh Assurance Counter Lock When set, prevents any writes …\nHP Security Interrupt Control Register Lock When set, …\nHP Security Violation Control Register Lock When set, …\nLP Calibration Soft Lock When set, prevents any writes to …\nLP Security Violation Control Register Soft Lock When set, …\nLP Tamper Detectors Configuration Register Soft Lock When …\nMonotonic Counter Soft Lock When set, prevents any writes …\nMaster Key Select Soft Lock When set, prevents any writes …\nSecure Real Time Counter Soft Lock When set, prevents any …\nZeroizable Master Key Read Soft Lock When set, prevents …\nZeroizable Master Key Write Soft Lock When set, prevents …\nWrite access is allowed\nWrite access is not allowed\nWrite access is allowed\nWrite access is not allowed\nWrite access is allowed\nWrite access is not allowed\nWrite access is allowed\nWrite access is not allowed\nWrite access is allowed\nWrite access is not allowed\nWrite access is allowed\nWrite access is not allowed\nWrite access is allowed\nWrite access is not allowed\nWrite access (increment) is allowed\nWrite access (increment) is not allowed\nWrite access is allowed\nWrite access is not allowed\nWrite access is allowed\nWrite access is not allowed\nRead access is allowed (only in software Programming mode)\nRead access is not allowed\nWrite access is allowed\nWrite access is not allowed\nHP Real Time Counter least-significant 32 bits\nHP Real Time Counter The most-significant 15 bits of the …\nLP Security Violation Interrupt Enable This bit enables …\nSecurity Violation 0 Interrupt Enable Setting this bit to …\nSecurity Violation 1 Interrupt Enable Setting this bit to …\nSecurity Violation 2 Interrupt Enable Setting this bit to …\nSecurity Violation 3 Interrupt Enable Setting this bit to …\nSecurity Violation 4 Interrupt Enable Setting this bit to …\nSecurity Violation 5 Interrupt Enable Setting this bit to …\nLP Security Violation Interrupt is Disabled\nLP Security Violation Interrupt is Enabled\nSecurity Violation 0 Interrupt is Disabled\nSecurity Violation 0 Interrupt is Enabled\nSecurity Violation 1 Interrupt is Disabled\nSecurity Violation 1 Interrupt is Enabled\nSecurity Violation 2 Interrupt is Disabled\nSecurity Violation 2 Interrupt is Enabled\nSecurity Violation 3 Interrupt is Disabled\nSecurity Violation 3 Interrupt is Enabled\nSecurity Violation 4 Interrupt is Disabled\nSecurity Violation 4 Interrupt is Enabled\nSecurity Violation 5 Interrupt is Disabled\nSecurity Violation 5 Interrupt is Enabled\nButton Interrupt Signal ipi_snvs_btn_int_b was asserted.\nButton Value of the BTN input\nHP Time Alarm Indicates that the HP Time Alarm has …\nLow Power Disable If 1, the low power section has been …\nOne Time Programmable Master Key Syndrome In the case of a …\nOne Time Programmable Master Key is Equal to Zero\nPeriodic Interrupt Indicates that periodic interrupt has …\nSecurity Configuration This field reflects the settings of …\nSystem Security Monitor State This field contains the …\nZeroizable Master Key is Equal to Zero\nNo time alarm interrupt occurred.\nA time alarm interrupt occurred.\nThe OTPMK is not zero.\nThe OTPMK is zero.\nNo periodic interrupt occurred.\nA periodic interrupt occurred.\nCLOSED Configuration\nFAB Configuration\nOPEN Configuration\nInit\nHard Fail\nNon-Secure\nTrusted\nSecure\nSoft Fail\nInit Intermediate (transition state between Init and Check …\nCheck\nThe ZMK is not zero.\nThe ZMK is zero.\nLP Security Violation Configuration This field configures …\nSecurity Violation 0 Security Violation Configuration This …\nSecurity Violation 1 Security Violation Configuration This …\nSecurity Violation 2 Security Violation Configuration This …\nSecurity Violation 3 Security Violation Configuration This …\nSecurity Violation 4 Security Violation Configuration This …\nSecurity Violation 5 Security Violation Configuration This …\nLP security violation is disabled\nLP security violation is a non-fatal violation\nLP security violation is a fatal violation\nSecurity Violation 0 is a non-fatal violation\nSecurity Violation 0 is a fatal violation\nSecurity Violation 1 is a non-fatal violation\nSecurity Violation 1 is a fatal violation\nSecurity Violation 2 is a non-fatal violation\nSecurity Violation 2 is a fatal violation\nSecurity Violation 3 is a non-fatal violation\nSecurity Violation 3 is a fatal violation\nSecurity Violation 4 is a non-fatal violation\nSecurity Violation 4 is a fatal violation\nSecurity Violation 5 is disabled\nSecurity Violation 5 is a non-fatal violation\nSecurity Violation 5 is a fatal violation\nLP Security Violation A security volation was detected in …\nSecurity Violation 0 security violation was detected.\nSecurity Violation 1 security violation was detected.\nSecurity Violation 2 security violation was detected.\nSecurity Violation 3 security violation was detected.\nSecurity Violation 4 security violation was detected.\nSecurity Violation 5 security violation was detected.\nSoftware Fatal Security Violation This bit is a read-only …\nLP Software Security Violation This bit is a read-only …\nSoftware Security Violation This bit is a read-only copy …\nZeroizable Master Key Error Correcting Code Check Failure …\nZeroizable Master Key Syndrome The ZMK syndrome indicates …\nNo Security Violation 0 security violation was detected.\nSecurity Violation 0 security violation was detected.\nNo Security Violation 1 security violation was detected.\nSecurity Violation 1 security violation was detected.\nNo Security Violation 2 security violation was detected.\nSecurity Violation 2 security violation was detected.\nNo Security Violation 3 security violation was detected.\nSecurity Violation 3 security violation was detected.\nNo Security Violation 4 security violation was detected.\nSecurity Violation 4 security violation was detected.\nNo Security Violation 5 security violation was detected.\nSecurity Violation 5 security violation was detected.\nZMK ECC Failure was not detected.\nZMK ECC Failure was detected.\nHP Time Alarm, 32 least-significant bits\nHP Time Alarm, most-significant 15 bits\nSNVS block ID\nSNVS block major version number\nSNVS block minor version number\nSNVS Configuration Options\nSNVS ECO Revision\nSNVS Integration Options\nIP Era 00h - Era 1 or 2 03h - Era 3 04h - Era 4 05h - Era 5\nThis field configures the button press time out values for …\nThis field configures the amount of debounce time for the …\nDumb PMIC Enabled When set, software can control the …\nGeneral Purpose Registers Zeroization Disable\nLP Calibration Enable When set, enables the SRTC …\nLP Calibration Value Defines signed calibration value for …\nLP Time Alarm Enable When set, the SNVS functional …\nLP Wake-Up Interrupt Enable This interrupt line should be …\nMonotonic Counter Enabled and Valid When set, the MC can …\nThe ON_TIME field is used to configure the period of time …\nPMIC On Request Enable The value written to PK_EN will be …\nPMIC On Request Override The value written to PK_OVERRIDE …\nPower Glitch Enable By default the detection of a power …\nSecure Real Time Counter Enabled and Valid When set, the …\nIf this bit is 1, in the case of a security violation the …\nTurn off System Power Asserting this bit causes a signal …\nSmart PMIC enabled.\nDumb PMIC enabled.\nSRTC Time calibration is disabled.\nSRTC Time calibration is enabled.\n+0 counts per each 32768 ticks of the counter clock\n+1 counts per each 32768 ticks of the counter clock\n+15 counts per each 32768 ticks of the counter clock\n-16 counts per each 32768 ticks of the counter clock\n-15 counts per each 32768 ticks of the counter clock\n+2 counts per each 32768 ticks of the counter clock\n-2 counts per each 32768 ticks of the counter clock\n-1 counts per each 32768 ticks of the counter clock\nLP time alarm interrupt is disabled.\nLP time alarm interrupt is enabled.\nMC is disabled or invalid.\nMC is enabled and valid.\nSRTC is disabled or invalid.\nSRTC is enabled and valid.\nSRTC stays valid in the case of security violation.\nSRTC is invalidated in the case of security violation.\nLeave system power on.\nTurn off system power.\nGeneral Purpose Register When GPR_SL or GPR_HL bit is set, …\nGeneral Purpose Register When GPR_SL or GPR_HL bit is set, …\nGeneral Purpose Register When GPR_SL or GPR_HL bit is set, …\nGeneral Purpose Register Hard Lock When set, prevents any …\nLP Calibration Hard Lock When set, prevents any writes to …\nLP Security Violation Control Register Hard Lock When set, …\nLP Tamper Detectors Configuration Register Hard Lock When …\nMonotonic Counter Hard Lock When set, prevents any writes …\nMaster Key Select Hard Lock When set, prevents any writes …\nSecure Real Time Counter Hard Lock When set, prevents any …\nZeroizable Master Key Read Hard Lock When set, prevents …\nZeroizable Master Key Write Hard Lock When set, prevents …\nWrite access is allowed.\nWrite access is not allowed.\nWrite access is allowed.\nWrite access is not allowed.\nWrite access is allowed.\nWrite access is not allowed.\nWrite access is allowed.\nWrite access is not allowed.\nWrite access (increment) is allowed.\nWrite access (increment) is not allowed.\nWrite access is allowed.\nWrite access is not allowed.\nWrite access is allowed.\nWrite access is not allowed.\nRead access is allowed (only in software programming mode).\nRead access is not allowed.\nWrite access is allowed.\nWrite access is not allowed.\nMaster Key Select These bits select the SNVS Master Key …\nZeroizable Master Key Error Correcting Code Check Enable …\nZeroizable Master Key Error Correcting Code Value This …\nZeroizable Master Key hardware Programming mode When set, …\nZeroizable Master Key Valid When set, the ZMK value can be …\nSelect one time programmable master key.\nSelect zeroizable master key when MKS_EN bit is set .\nSelect combined master key when MKS_EN bit is set .\nZMK ECC check is disabled.\nZMK ECC check is enabled.\nZMK is in the software programming mode.\nZMK is in the hardware programming mode.\nZMK is not valid.\nZMK is valid.\nPower Glitch Detector Value\nMonotonic Counter bits The MC is incremented by one when: …\nMonotonic Counter Era Bits These bits are inputs to the …\nMonotonic Counter most-significant 16 Bits The MC is …\nEmergency Off This bit is set when a power off is …\nExternal Security Violation Detected Indicates that a …\nExternal Tampering 1 Detected\nLP Section is Non-Secured Indicates that LP section was …\nLP Section is Secured Indicates that the LP section is …\nLP Time Alarm\nMonotonic Counter Rollover\nPower Supply Glitch Detected 0 No power supply glitch. 1 …\nScan Exit Detected\nSet Power Off The SPO bit is set when the power button is …\nSecure Real Time Counter Rollover\nEmergency off was not detected.\nEmergency off was detected.\nNo external security violation.\nExternal security violation is detected.\nExternal tampering 1 not detected.\nExternal tampering 1 detected.\nLP section was not programmed in the non-secure state.\nLP section was programmed in the non-secure state.\nLP section was not programmed in secure or trusted state.\nLP section was programmed in secure or trusted state.\nNo time alarm interrupt occurred.\nA time alarm interrupt occurred.\nMC has not reached its maximum value.\nMC has reached its maximum value.\nScan exit was not detected.\nScan exit was detected.\nSet Power Off was not detected.\nSet Power Off was detected.\nSRTC has not reached its maximum value.\nSRTC has reached its maximum value.\nLP Secure Real Time Counter least-significant 32 bits This …\nLP Secure Real Time Counter The most-significant 15 bits …\nSecurity Violation 0 Enable This bit enables Security …\nSecurity Violation 1 Enable This bit enables Security …\nSecurity Violation 2 Enable This bit enables Security …\nSecurity Violation 3 Enable This bit enables Security …\nSecurity Violation 4 Enable This bit enables Security …\nSecurity Violation 5 Enable This bit enables Security …\nSecurity Violation 0 is disabled in the LP domain.\nSecurity Violation 0 is enabled in the LP domain.\nSecurity Violation 1 is disabled in the LP domain.\nSecurity Violation 1 is enabled in the LP domain.\nSecurity Violation 2 is disabled in the LP domain.\nSecurity Violation 2 is enabled in the LP domain.\nSecurity Violation 3 is disabled in the LP domain.\nSecurity Violation 3 is enabled in the LP domain.\nSecurity Violation 4 is disabled in the LP domain.\nSecurity Violation 4 is enabled in the LP domain.\nSecurity Violation 5 is disabled in the LP domain.\nSecurity Violation 5 is enabled in the LP domain.\nLP Time Alarm This register can be programmed only when …\nExternal Tampering 1 Polarity This bit is used to …\nExternal Tampering 1 Enable When set, external tampering 1 …\nMC Rollover Enable When set, an MC Rollover event …\nOscillator Bypass When OSCB=1 the osc_bypass signal is …\nSystem Power Fail Detector (PFD) Observability Flop The …\nPower On Reset (POR) Observability Flop The asynchronous …\nSRTC Rollover Enable When set, an SRTC rollover event …\nExternal tamper 1 is active low.\nExternal tamper 1 is active high.\nExternal tamper 1 is disabled.\nExternal tamper 1 is enabled.\nMC rollover is disabled.\nMC rollover is enabled.\nNormal SRTC clock oscillator not bypassed.\nNormal SRTC clock oscillator bypassed. Alternate clock can …\nSRTC rollover is disabled.\nSRTC rollover is enabled.\nZeroizable Master Key Each of these registers contains 32 …\nSPDIF\nSPDIF Configuration Register\nSPDIF Configuration Register\nInterruptClear Register\nInterruptClear Register\nInterruptEn Register\nInterruptEn Register\nSPDIF\nCDText Control Register\nCDText Control Register\nSPDIFRxCChannel_h Register\nSPDIFRxCChannel_h Register\nSPDIFRxCChannel_l Register\nSPDIFRxCChannel_l Register\nFreqMeas Register\nFreqMeas Register\nSPDIFRxLeft Register\nSPDIFRxLeft Register\nPhaseConfig Register\nPhaseConfig Register\nQchannelRx Register\nQchannelRx Register\nSPDIFRxRight Register\nSPDIFRxRight Register\nUchannelRx Register\nUchannelRx Register\nSPDIFTxClk Register\nSPDIFTxClk Register\nSPDIFTxCChannelCons_h Register\nSPDIFTxCChannelCons_h Register\nSPDIFTxCChannelCons_l Register\nSPDIFTxCChannelCons_l Register\nSPDIFTxLeft Register\nSPDIFTxLeft Register\nSPDIFTxRight Register\nSPDIFTxRight Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nDMA Receive Request Enable (RX FIFO full)\nDMA Transmit Request Enable (Tx FIFO empty)\nWhen write 1 to this bit, it will cause SPDIF enter …\nno description available\nno description available\nno description available\nno description available\nno description available\nWhen write 1 to this bit, it will cause SPDIF software …\nno description available\nno description available\nno description available\nno description available\nno description available\nno description available\nRx FIFO auto sync off\nRxFIFO auto sync on\nFull interrupt if at least 1 sample in Rx left and right …\nFull interrupt if at least 4 sample in Rx left and right …\nFull interrupt if at least 8 sample in Rx left and right …\nFull interrupt if at least 16 sample in Rx left and right …\nNormal operation\nAlways read zero from Rx data register\nSPDIF Rx FIFO is on\nSPDIF Rx FIFO is off. Does not accept data from interface\nNormal operation\nReset register to 1 sample remaining\nTx FIFO auto sync off\nTx FIFO auto sync on\nEmpty interrupt if 0 sample in Tx left and right FIFOs\nEmpty interrupt if at most 4 sample in Tx left and right …\nEmpty interrupt if at most 8 sample in Tx left and right …\nEmpty interrupt if at most 12 sample in Tx left and right …\nSend out digital zero on SPDIF Tx\nTx Normal operation\nReset to 1 sample remaining\nOff and output 0\nFeed-through SPDIFIN\nTx Normal operation\nNo embedded U channel\nU channel from SPDIF receive block (CD mode)\nU channel from on chip transmitter\nOutgoing Validity always set\nOutgoing Validity always clear\nSPDIF receiver found parity bit error\nSPDIF receive change in value of control channel\nSPDIF receiver’s DPLL is locked\nSPDIF receiver loss of lock\nQ Channel receive register overrun\nRx FIFO resync\nRx FIFO underrun/overrun\nSPDIF receiver found illegal symbol\nSPDIF Tx FIFO resync\nSPDIF Tx FIFO under/overrun\nU/Q Channel framing error\nU/Q Channel sync found\nU Channel receive register overrun\nSPDIF validity flag no good\nSPDIF receiver found parity bit error\nSPDIF receive change in value of control channel\nSPDIF receiver’s DPLL is locked\nSPDIF receiver loss of lock\nQ Channel receive register full, can’t be cleared with …\nQ Channel receive register overrun\nSPDIF Rx FIFO full, can’t be cleared with reg. IntClear. …\nRx FIFO resync\nRx FIFO underrun/overrun\nSPDIF receiver found illegal symbol\nSPDIF Tx FIFO empty, can’t be cleared with reg. …\nSPDIF Tx FIFO resync\nSPDIF Tx FIFO under/overrun\nU/Q Channel framing error\nU/Q Channel sync found\nU Channel receive register full, can’t be cleared with …\nU Channel receive register overrun\nSPDIF validity flag no good\nno description available\nNon-CD data\nCD user channel subcode\nSPDIF receive C channel register, contains first 24 bits …\nSPDIF receive C channel register, contains next 24 bits of …\nFrequency measurement data\nProcessor receive SPDIF data left\nClock source selection, all other settings not shown are …\nGain selection:\nLOCK bit to show that the internal DPLL is locked, read …\nif (DPLL Locked) SPDIF_RxClk else REF_CLK_32K (XTALOSC)\nif (DPLL Locked) SPDIF_RxClk else tx_clk (SPDIF0_CLK_ROOT)\nif (DPLL Locked) SPDIF_RxClk else SPDIF_EXT_CLK\nREF_CLK_32K (XTALOSC)\ntx_clk (SPDIF0_CLK_ROOT)\nSPDIF_EXT_CLK\n24*(2**10)\n16*(2**10)\n12*(2**10)\n8*(2**10)\n6*(2**10)\n4*(2**10)\n3*(2**10)\nSPDIF receive Q channel register, contains next 3 Q …\nProcessor receive SPDIF data right\nSPDIF receive U channel register, contains next 3 U …\nsystem clock divider factor, 2~512.\nDivider factor (1-128)\nno description available\nSpdif transfer clock enable. When data is going to be …\nno clock signal\ndivider factor is 2\ndivider factor is 512\ndivider factor is 1\ndivider factor is 2\ndivider factor is 128\nXTALOSC input (XTALOSC clock)\ntx_clk input (from SPDIF0_CLK_ROOT. See CCM.)\ntx_clk1 (from SAI1)\ntx_clk2 SPDIF_EXT_CLK, from pads\ntx_clk3 (from SAI2)\nipg_clk input (frequency divided)\ntx_clk4 (from SAI3)\ndisable transfer clock.\nenable transfer clock.\nSPDIF transmit Cons\nSPDIF transmit Cons\nSPDIF transmit left channel data. It is write-only, and …\nSPDIF transmit right channel data. It is write-only, and …\nSRC General Purpose Register 1\nSRC General Purpose Register 1\nSRC General Purpose Register 10\nSRC General Purpose Register 2\nSRC General Purpose Register 2\nSRC General Purpose Register 3\nSRC General Purpose Register 4\nSRC General Purpose Register 5\nSRC General Purpose Register 6\nSRC General Purpose Register 7\nSRC General Purpose Register 8\nSRC General Purpose Register 9\nSRC\nSRC Boot Mode Register 1\nSRC Boot Mode Register 1\nSRC Boot Mode Register 2\nSRC Boot Mode Register 2\nSRC Control Register\nSRC Control Register\nSRC\nSRC Reset Status Register\nSRC Reset Status Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nHolds entry function for core0 for waking-up from low …\nHolds argument of entry function for core0 for waking-up …\nRefer to fusemap.\nRefer to fusemap.\nRefer to fusemap.\nRefer to fusemap.\nBMOD[1:0] shows the latched state of the BOOT_MODE1 and …\nBT_FUSE_SEL (connected to gpio bt_fuse_sel) shows the …\nDIR_BT_DIS shows the state of the DIR_BT_DIS fuse\nSECONFIG[1] shows the state of the SECONFIG[1] fuse\nSoftware reset for core0 debug only\nSoftware reset for core0 only\nDo not assert debug resets after power gating event of core\nMask wdog3_rst_b source\nMask wdog_rst_b source\ndo not assert core0 debug reset\nassert core0 debug reset\ndo not assert core0 reset\nassert core0 reset\ndo not mask core debug resets (debug resets will be …\nmask core debug resets (debug resets won’t be asserted …\nwdog3_rst_b is not masked\nwdog3_rst_b is masked\nwdog_rst_b is not masked (default)\nwdog_rst_b is masked\nIndicates whether the reset was the result of the …\nIndicates whether reset was the result of ipp_reset_b pin …\nIndicates whether the reset was the result of the …\nHIGH - Z JTAG reset. Indicates whether the reset was the …\nJTAG software reset\nIndicates a reset has been caused by CPU lockup.\nTemper Sensor software reset\nIC Watchdog3 Time-out reset\nIC Watchdog Time-out reset\nReset is not a result of the csu_reset_b event.\nReset is a result of the csu_reset_b event.\nReset is not a result of ipp_reset_b pin.\nReset is a result of ipp_reset_b pin.\nReset is not a result of the ipp_user_reset_b qualified as …\nReset is a result of the ipp_user_reset_b qualified as …\nReset is not a result of HIGH-Z reset from JTAG.\nReset is a result of HIGH-Z reset from JTAG.\nReset is not a result of the mentioned case.\nReset is not a result of the mentioned case.\nReset is not a result of the mentioned case.\nReset is a result of the mentioned case.\nReset is not a result of software reset from Temperature …\nReset is a result of software reset from Temperature …\nReset is not a result of the watchdog3 time-out event.\nReset is a result of the watchdog3 time-out event.\nReset is not a result of the watchdog time-out event.\nReset is a result of the watchdog time-out event.\nTemperature Monitor\nTemperature Monitor\nTempsensor Control Register 0\nTempsensor Control Register 0\nTempsensor Control Register 0\nTempsensor Control Register 0\nTempsensor Control Register 0\nTempsensor Control Register 0\nTempsensor Control Register 0\nTempsensor Control Register 0\nTempsensor Control Register 1\nTempsensor Control Register 1\nTempsensor Control Register 1\nTempsensor Control Register 1\nTempsensor Control Register 1\nTempsensor Control Register 1\nTempsensor Control Register 1\nTempsensor Control Register 1\nTempsensor Control Register 2\nTempsensor Control Register 2\nTempsensor Control Register 2\nTempsensor Control Register 2\nTempsensor Control Register 2\nTempsensor Control Register 2\nTempsensor Control Register 2\nTempsensor Control Register 2\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nThis bit field contains the temperature count (raw sensor …\nIndicates that the latest temp is valid\nStarts the measurement process\nThis bit powers down the temperature sensor.\nThis bit field contains the last measured temperature …\nLast measurement is not ready yet.\nLast measurement is valid.\nStart the measurement process.\nDo not start the measurement process.\nPower down the temperature sensor.\nEnable power to the temperature sensor.\nThis bit field contains the temperature count (raw sensor …\nIndicates that the latest temp is valid\nStarts the measurement process\nThis bit powers down the temperature sensor.\nThis bit field contains the last measured temperature …\nLast measurement is not ready yet.\nLast measurement is valid.\nStart the measurement process.\nDo not start the measurement process.\nPower down the temperature sensor.\nEnable power to the temperature sensor.\nThis bit field contains the temperature count (raw sensor …\nIndicates that the latest temp is valid\nStarts the measurement process\nThis bit powers down the temperature sensor.\nThis bit field contains the last measured temperature …\nLast measurement is not ready yet.\nLast measurement is valid.\nStart the measurement process.\nDo not start the measurement process.\nPower down the temperature sensor.\nEnable power to the temperature sensor.\nThis bit field contains the temperature count (raw sensor …\nIndicates that the latest temp is valid\nStarts the measurement process\nThis bit powers down the temperature sensor.\nThis bit field contains the last measured temperature …\nLast measurement is not ready yet.\nLast measurement is valid.\nStart the measurement process.\nDo not start the measurement process.\nPower down the temperature sensor.\nEnable power to the temperature sensor.\nThis bits determines how many RTC clocks to wait before …\nThis bits determines how many RTC clocks to wait before …\nThis bits determines how many RTC clocks to wait before …\nThis bits determines how many RTC clocks to wait before …\nThis bit field contains the temperature count that will …\nThis bit field contains the temperature count that will …\nThis bit field contains the temperature count that will …\nThis bit field contains the temperature count that will …\nThis bit field contains the temperature count that will …\nThis bit field contains the temperature count that will …\nThis bit field contains the temperature count that will …\nThis bit field contains the temperature count that will …\nTimer Channel Capture Register\nTimer Channel Capture Register\nTimer Channel Capture Register\nTimer Channel Capture Register\nTimer Channel Capture Register\nTimer Channel Capture Register\nTimer Channel Capture Register\nTimer Channel Capture Register\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 1\nTimer Channel Comparator Load Register 2\nTimer Channel Comparator Load Register 2\nTimer Channel Comparator Load Register 2\nTimer Channel Comparator Load Register 2\nTimer Channel Comparator Load Register 2\nTimer Channel Comparator Load Register 2\nTimer Channel Comparator Load Register 2\nTimer Channel Comparator Load Register 2\nTimer Channel Counter Register\nTimer Channel Counter Register\nTimer Channel Counter Register\nTimer Channel Counter Register\nTimer Channel Counter Register\nTimer Channel Counter Register\nTimer Channel Counter Register\nTimer Channel Counter Register\nTimer Channel Compare Register 1\nTimer Channel Compare Register 1\nTimer Channel Compare Register 1\nTimer Channel Compare Register 1\nTimer Channel Compare Register 1\nTimer Channel Compare Register 1\nTimer Channel Compare Register 1\nTimer Channel Compare Register 1\nTimer Channel Compare Register 2\nTimer Channel Compare Register 2\nTimer Channel Compare Register 2\nTimer Channel Compare Register 2\nTimer Channel Compare Register 2\nTimer Channel Compare Register 2\nTimer Channel Compare Register 2\nTimer Channel Compare Register 2\nTimer Channel Comparator Status and Control Register\nTimer Channel Comparator Status and Control Register\nTimer Channel Comparator Status and Control Register\nTimer Channel Comparator Status and Control Register\nTimer Channel Comparator Status and Control Register\nTimer Channel Comparator Status and Control Register\nTimer Channel Comparator Status and Control Register\nTimer Channel Comparator Status and Control Register\nTimer Channel Control Register\nTimer Channel Control Register\nTimer Channel Control Register\nTimer Channel Control Register\nTimer Channel Control Register\nTimer Channel Control Register\nTimer Channel Control Register\nTimer Channel Control Register\nTimer Channel DMA Enable Register\nTimer Channel DMA Enable Register\nTimer Channel DMA Enable Register\nTimer Channel DMA Enable Register\nTimer Channel DMA Enable Register\nTimer Channel DMA Enable Register\nTimer Channel DMA Enable Register\nTimer Channel DMA Enable Register\nTimer Channel Enable Register\nTimer Channel Enable Register\nTimer Channel Input Filter Register\nTimer Channel Input Filter Register\nTimer Channel Input Filter Register\nTimer Channel Input Filter Register\nTimer Channel Input Filter Register\nTimer Channel Input Filter Register\nTimer Channel Input Filter Register\nTimer Channel Input Filter Register\nTimer Channel Hold Register\nTimer Channel Hold Register\nTimer Channel Hold Register\nTimer Channel Hold Register\nTimer Channel Hold Register\nTimer Channel Hold Register\nTimer Channel Hold Register\nTimer Channel Hold Register\nTimer Channel Load Register\nTimer Channel Load Register\nTimer Channel Load Register\nTimer Channel Load Register\nTimer Channel Load Register\nTimer Channel Load Register\nTimer Channel Load Register\nTimer Channel Load Register\nQuad Timer\nTimer Channel Status and Control Register\nTimer Channel Status and Control Register\nTimer Channel Status and Control Register\nTimer Channel Status and Control Register\nTimer Channel Status and Control Register\nTimer Channel Status and Control Register\nTimer Channel Status and Control Register\nTimer Channel Status and Control Register\nQuad Timer\nQuad Timer\nQuad Timer\nQuad Timer\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nCapture Value\nCapture Value\nCapture Value\nCapture Value\nThis read/write register is the comparator 1 preload value …\nThis read/write register is the comparator 1 preload value …\nThis read/write register is the comparator 1 preload value …\nThis read/write register is the comparator 1 preload value …\nThis read/write register is the comparator 2 preload value …\nThis read/write register is the comparator 2 preload value …\nThis read/write register is the comparator 2 preload value …\nThis read/write register is the comparator 2 preload value …\nThis read/write register is the counter for the …\nThis read/write register is the counter for the …\nThis read/write register is the counter for the …\nThis read/write register is the counter for the …\nComparison Value 1\nComparison Value 1\nComparison Value 1\nComparison Value 1\nComparison Value 2\nComparison Value 2\nComparison Value 2\nComparison Value 2\nAlternative Load Enable\nCompare Load Control 1\nCompare Load Control 2\nDebug Actions Enable\nFault Enable\nReload on Capture\nTimer Compare 1 Interrupt Flag\nTimer Compare 1 Interrupt Enable\nTimer Compare 2 Interrupt Flag\nTimer Compare 2 Interrupt Enable\nTriggered Count Initialization Control\nCounting Direction Indicator\nCounter can be re-initialized only with the LOAD register.\nCounter can be re-initialized with the LOAD or CMPLD2 …\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nContinue with normal operation during debug mode. (default)\nHalt TMR counter during debug mode.\nForce TMR output to logic 0 (prior to consideration of …\nBoth halt counter and force output to 0 during debug mode.\nFault function disabled.\nFault function enabled.\nDo not reload the counter on a capture event.\nReload the counter on a capture event.\nStop counter upon receiving a second trigger event while …\nReload the counter upon receiving a second trigger event …\nThe last count was in the DOWN direction.\nThe last count was in the UP direction.\nAlternative Load Enable\nCompare Load Control 1\nCompare Load Control 2\nDebug Actions Enable\nFault Enable\nReload on Capture\nTimer Compare 1 Interrupt Flag\nTimer Compare 1 Interrupt Enable\nTimer Compare 2 Interrupt Flag\nTimer Compare 2 Interrupt Enable\nTriggered Count Initialization Control\nCounting Direction Indicator\nCounter can be re-initialized only with the LOAD register.\nCounter can be re-initialized with the LOAD or CMPLD2 …\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nContinue with normal operation during debug mode. (default)\nHalt TMR counter during debug mode.\nForce TMR output to logic 0 (prior to consideration of …\nBoth halt counter and force output to 0 during debug mode.\nFault function disabled.\nFault function enabled.\nDo not reload the counter on a capture event.\nReload the counter on a capture event.\nStop counter upon receiving a second trigger event while …\nReload the counter upon receiving a second trigger event …\nThe last count was in the DOWN direction.\nThe last count was in the UP direction.\nAlternative Load Enable\nCompare Load Control 1\nCompare Load Control 2\nDebug Actions Enable\nFault Enable\nReload on Capture\nTimer Compare 1 Interrupt Flag\nTimer Compare 1 Interrupt Enable\nTimer Compare 2 Interrupt Flag\nTimer Compare 2 Interrupt Enable\nTriggered Count Initialization Control\nCounting Direction Indicator\nCounter can be re-initialized only with the LOAD register.\nCounter can be re-initialized with the LOAD or CMPLD2 …\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nContinue with normal operation during debug mode. (default)\nHalt TMR counter during debug mode.\nForce TMR output to logic 0 (prior to consideration of …\nBoth halt counter and force output to 0 during debug mode.\nFault function disabled.\nFault function enabled.\nDo not reload the counter on a capture event.\nReload the counter on a capture event.\nStop counter upon receiving a second trigger event while …\nReload the counter upon receiving a second trigger event …\nThe last count was in the DOWN direction.\nThe last count was in the UP direction.\nAlternative Load Enable\nCompare Load Control 1\nCompare Load Control 2\nDebug Actions Enable\nFault Enable\nReload on Capture\nTimer Compare 1 Interrupt Flag\nTimer Compare 1 Interrupt Enable\nTimer Compare 2 Interrupt Flag\nTimer Compare 2 Interrupt Enable\nTriggered Count Initialization Control\nCounting Direction Indicator\nCounter can be re-initialized only with the LOAD register.\nCounter can be re-initialized with the LOAD or CMPLD2 …\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nNever preload\nLoad upon successful compare with the value in COMP1\nLoad upon successful compare with the value in COMP2\nContinue with normal operation during debug mode. (default)\nHalt TMR counter during debug mode.\nForce TMR output to logic 0 (prior to consideration of …\nBoth halt counter and force output to 0 during debug mode.\nFault function disabled.\nFault function enabled.\nDo not reload the counter on a capture event.\nReload the counter on a capture event.\nStop counter upon receiving a second trigger event while …\nReload the counter upon receiving a second trigger event …\nThe last count was in the DOWN direction.\nThe last count was in the UP direction.\nCount Mode\nCo-Channel Initialization\nCount Direction\nCount Length\nCount Once\nOutput Mode\nPrimary Count Source\nSecondary Count Source\nNo operation\nCount rising edges of primary sourceRising edges are …\nCount rising and falling edges of primary sourceIP bus …\nCount rising edges of primary source while secondary input …\nQuadrature count mode, uses primary and secondary sources\nCount rising edges of primary source; secondary source …\nEdge of secondary source triggers primary count until …\nCascaded counter mode (up/down)The primary count source …\nCo-channel counter/timers cannot force a re-initialization …\nCo-channel counter/timers may force a re-initialization of …\nCount up.\nCount down.\nCount until roll over at $FFFF and continue from $0000.\nCount until compare, then re-initialize. If counting up, a …\nCount repeatedly.\nCount until compare and then stop. If counting up, a …\nAsserted while counter is active\nClear OFLAG output on successful compare\nSet OFLAG output on successful compare\nToggle OFLAG output on successful compare\nToggle OFLAG output using alternating compare registers\nSet on compare, cleared on secondary source input edge\nSet on compare, cleared on counter rollover\nEnable gated clock output while counter is active\nCounter 0 input pin\nCounter 1 input pin\nIP bus clock divide by 4 prescaler\nIP bus clock divide by 8 prescaler\nIP bus clock divide by 16 prescaler\nIP bus clock divide by 32 prescaler\nIP bus clock divide by 64 prescaler\nIP bus clock divide by 128 prescaler\nCounter 2 input pin\nCounter 3 input pin\nCounter 0 output\nCounter 1 output\nCounter 2 output\nCounter 3 output\nIP bus clock divide by 1 prescaler\nIP bus clock divide by 2 prescaler\nCounter 0 input pin\nCounter 1 input pin\nCounter 2 input pin\nCounter 3 input pin\nCount Mode\nCo-Channel Initialization\nCount Direction\nCount Length\nCount Once\nOutput Mode\nPrimary Count Source\nSecondary Count Source\nNo operation\nCount rising edges of primary sourceRising edges are …\nCount rising and falling edges of primary sourceIP bus …\nCount rising edges of primary source while secondary input …\nQuadrature count mode, uses primary and secondary sources\nCount rising edges of primary source; secondary source …\nEdge of secondary source triggers primary count until …\nCascaded counter mode (up/down)The primary count source …\nCo-channel counter/timers cannot force a re-initialization …\nCo-channel counter/timers may force a re-initialization of …\nCount up.\nCount down.\nCount until roll over at $FFFF and continue from $0000.\nCount until compare, then re-initialize. If counting up, a …\nCount repeatedly.\nCount until compare and then stop. If counting up, a …\nAsserted while counter is active\nClear OFLAG output on successful compare\nSet OFLAG output on successful compare\nToggle OFLAG output on successful compare\nToggle OFLAG output using alternating compare registers\nSet on compare, cleared on secondary source input edge\nSet on compare, cleared on counter rollover\nEnable gated clock output while counter is active\nCounter 0 input pin\nCounter 1 input pin\nIP bus clock divide by 4 prescaler\nIP bus clock divide by 8 prescaler\nIP bus clock divide by 16 prescaler\nIP bus clock divide by 32 prescaler\nIP bus clock divide by 64 prescaler\nIP bus clock divide by 128 prescaler\nCounter 2 input pin\nCounter 3 input pin\nCounter 0 output\nCounter 1 output\nCounter 2 output\nCounter 3 output\nIP bus clock divide by 1 prescaler\nIP bus clock divide by 2 prescaler\nCounter 0 input pin\nCounter 1 input pin\nCounter 2 input pin\nCounter 3 input pin\nCount Mode\nCo-Channel Initialization\nCount Direction\nCount Length\nCount Once\nOutput Mode\nPrimary Count Source\nSecondary Count Source\nNo operation\nCount rising edges of primary sourceRising edges are …\nCount rising and falling edges of primary sourceIP bus …\nCount rising edges of primary source while secondary input …\nQuadrature count mode, uses primary and secondary sources\nCount rising edges of primary source; secondary source …\nEdge of secondary source triggers primary count until …\nCascaded counter mode (up/down)The primary count source …\nCo-channel counter/timers cannot force a re-initialization …\nCo-channel counter/timers may force a re-initialization of …\nCount up.\nCount down.\nCount until roll over at $FFFF and continue from $0000.\nCount until compare, then re-initialize. If counting up, a …\nCount repeatedly.\nCount until compare and then stop. If counting up, a …\nAsserted while counter is active\nClear OFLAG output on successful compare\nSet OFLAG output on successful compare\nToggle OFLAG output on successful compare\nToggle OFLAG output using alternating compare registers\nSet on compare, cleared on secondary source input edge\nSet on compare, cleared on counter rollover\nEnable gated clock output while counter is active\nCounter 0 input pin\nCounter 1 input pin\nIP bus clock divide by 4 prescaler\nIP bus clock divide by 8 prescaler\nIP bus clock divide by 16 prescaler\nIP bus clock divide by 32 prescaler\nIP bus clock divide by 64 prescaler\nIP bus clock divide by 128 prescaler\nCounter 2 input pin\nCounter 3 input pin\nCounter 0 output\nCounter 1 output\nCounter 2 output\nCounter 3 output\nIP bus clock divide by 1 prescaler\nIP bus clock divide by 2 prescaler\nCounter 0 input pin\nCounter 1 input pin\nCounter 2 input pin\nCounter 3 input pin\nCount Mode\nCo-Channel Initialization\nCount Direction\nCount Length\nCount Once\nOutput Mode\nPrimary Count Source\nSecondary Count Source\nNo operation\nCount rising edges of primary sourceRising edges are …\nCount rising and falling edges of primary sourceIP bus …\nCount rising edges of primary source while secondary input …\nQuadrature count mode, uses primary and secondary sources\nCount rising edges of primary source; secondary source …\nEdge of secondary source triggers primary count until …\nCascaded counter mode (up/down)The primary count source …\nCo-channel counter/timers cannot force a re-initialization …\nCo-channel counter/timers may force a re-initialization of …\nCount up.\nCount down.\nCount until roll over at $FFFF and continue from $0000.\nCount until compare, then re-initialize. If counting up, a …\nCount repeatedly.\nCount until compare and then stop. If counting up, a …\nAsserted while counter is active\nClear OFLAG output on successful compare\nSet OFLAG output on successful compare\nToggle OFLAG output on successful compare\nToggle OFLAG output using alternating compare registers\nSet on compare, cleared on secondary source input edge\nSet on compare, cleared on counter rollover\nEnable gated clock output while counter is active\nCounter 0 input pin\nCounter 1 input pin\nIP bus clock divide by 4 prescaler\nIP bus clock divide by 8 prescaler\nIP bus clock divide by 16 prescaler\nIP bus clock divide by 32 prescaler\nIP bus clock divide by 64 prescaler\nIP bus clock divide by 128 prescaler\nCounter 2 input pin\nCounter 3 input pin\nCounter 0 output\nCounter 1 output\nCounter 2 output\nCounter 3 output\nIP bus clock divide by 1 prescaler\nIP bus clock divide by 2 prescaler\nCounter 0 input pin\nCounter 1 input pin\nCounter 2 input pin\nCounter 3 input pin\nComparator Preload Register 1 DMA Enable\nComparator Preload Register 2 DMA Enable\nInput Edge Flag DMA Enable\nComparator Preload Register 1 DMA Enable\nComparator Preload Register 2 DMA Enable\nInput Edge Flag DMA Enable\nComparator Preload Register 1 DMA Enable\nComparator Preload Register 2 DMA Enable\nInput Edge Flag DMA Enable\nComparator Preload Register 1 DMA Enable\nComparator Preload Register 2 DMA Enable\nInput Edge Flag DMA Enable\nTimer Channel Enable\nTimer channel is disabled.\nTimer channel is enabled. (default)\nInput Filter Sample Count\nInput Filter Sample Period\nInput Filter Sample Count\nInput Filter Sample Period\nInput Filter Sample Count\nInput Filter Sample Period\nInput Filter Sample Count\nInput Filter Sample Period\nThis read/write register stores the counter’s values of …\nThis read/write register stores the counter’s values of …\nThis read/write register stores the counter’s values of …\nThis read/write register stores the counter’s values of …\nTimer Load Register\nTimer Load Register\nTimer Load Register\nTimer Load Register\nInput Capture Mode\nEnable External OFLAG Force\nForce OFLAG Output\nInput Edge Flag\nInput Edge Flag Interrupt Enable\nExternal Input Signal\nInput Polarity Select\nMaster Mode\nOutput Enable\nOutput Polarity Select\nTimer Compare Flag\nTimer Compare Flag Interrupt Enable\nTimer Overflow Flag\nTimer Overflow Flag Interrupt Enable\nForced OFLAG Value\nCapture function is disabled\nLoad capture register on rising edge (when IPS=0) or …\nLoad capture register on falling edge (when IPS=0) or …\nLoad capture register on both edges of input\nThe external pin is configured as an input.\nThe OFLAG output signal is driven on the external pin. …\nTrue polarity.\nInverted polarity.\nInput Capture Mode\nEnable External OFLAG Force\nForce OFLAG Output\nInput Edge Flag\nInput Edge Flag Interrupt Enable\nExternal Input Signal\nInput Polarity Select\nMaster Mode\nOutput Enable\nOutput Polarity Select\nTimer Compare Flag\nTimer Compare Flag Interrupt Enable\nTimer Overflow Flag\nTimer Overflow Flag Interrupt Enable\nForced OFLAG Value\nCapture function is disabled\nLoad capture register on rising edge (when IPS=0) or …\nLoad capture register on falling edge (when IPS=0) or …\nLoad capture register on both edges of input\nThe external pin is configured as an input.\nThe OFLAG output signal is driven on the external pin. …\nTrue polarity.\nInverted polarity.\nInput Capture Mode\nEnable External OFLAG Force\nForce OFLAG Output\nInput Edge Flag\nInput Edge Flag Interrupt Enable\nExternal Input Signal\nInput Polarity Select\nMaster Mode\nOutput Enable\nOutput Polarity Select\nTimer Compare Flag\nTimer Compare Flag Interrupt Enable\nTimer Overflow Flag\nTimer Overflow Flag Interrupt Enable\nForced OFLAG Value\nCapture function is disabled\nLoad capture register on rising edge (when IPS=0) or …\nLoad capture register on falling edge (when IPS=0) or …\nLoad capture register on both edges of input\nThe external pin is configured as an input.\nThe OFLAG output signal is driven on the external pin. …\nTrue polarity.\nInverted polarity.\nInput Capture Mode\nEnable External OFLAG Force\nForce OFLAG Output\nInput Edge Flag\nInput Edge Flag Interrupt Enable\nExternal Input Signal\nInput Polarity Select\nMaster Mode\nOutput Enable\nOutput Polarity Select\nTimer Compare Flag\nTimer Compare Flag Interrupt Enable\nTimer Overflow Flag\nTimer Overflow Flag Interrupt Enable\nForced OFLAG Value\nCapture function is disabled\nLoad capture register on rising edge (when IPS=0) or …\nLoad capture register on falling edge (when IPS=0) or …\nLoad capture register on both edges of input\nThe external pin is configured as an input.\nThe OFLAG output signal is driven on the external pin. …\nTrue polarity.\nInverted polarity.\nEntropy Read Register\nEntropy Read Register\nFrequency Count Maximum Limit Register\nFrequency Count Maximum Limit Register\nFrequency Count Minimum Limit Register\nFrequency Count Minimum Limit Register\nInterrupt Control Register\nInterrupt Control Register\nMask Register\nMask Register\nInterrupt Status Register\nInterrupt Status Register\nMiscellaneous Control Register\nMiscellaneous Control Register\nStatistical Check Poker Count 1 and 0 Register\nStatistical Check Poker Count 1 and 0 Register\nStatistical Check Poker Count 3 and 2 Register\nStatistical Check Poker Count 3 and 2 Register\nStatistical Check Poker Count 5 and 4 Register\nStatistical Check Poker Count 5 and 4 Register\nStatistical Check Poker Count 7 and 6 Register\nStatistical Check Poker Count 7 and 6 Register\nStatistical Check Poker Count 9 and 8 Register\nStatistical Check Poker Count 9 and 8 Register\nStatistical Check Poker Count B and A Register\nStatistical Check Poker Count B and A Register\nStatistical Check Poker Count D and C Register\nStatistical Check Poker Count D and C Register\nStatistical Check Poker Count F and E Register\nStatistical Check Poker Count F and E Register\nPoker Maximum Limit Register\nPoker Maximum Limit Register\nPoker Range Register\nPoker Range Register\nTRNG\nSparse Bit Limit Register\nSparse Bit Limit Register\nStatistical Check Miscellaneous Register\nStatistical Check Miscellaneous Register\nStatistical Check Monobit Limit Register\nStatistical Check Monobit Limit Register\nStatistical Check Run Length 1 Limit Register\nStatistical Check Run Length 1 Limit Register\nStatistical Check Run Length 2 Limit Register\nStatistical Check Run Length 2 Limit Register\nStatistical Check Run Length 3 Limit Register\nStatistical Check Run Length 3 Limit Register\nStatistical Check Run Length 4 Limit Register\nStatistical Check Run Length 4 Limit Register\nStatistical Check Run Length 5 Limit Register\nStatistical Check Run Length 5 Limit Register\nStatistical Check Run Length 6+ Limit Register\nStatistical Check Run Length 6+ Limit Register\nSeed Control Register\nSeed Control Register\nSecurity Configuration Register\nSecurity Configuration Register\nStatus Register\nStatus Register\nTRNG\nVersion ID Register (MS)\nVersion ID Register (MS)\nVersion ID Register (LS)\nVersion ID Register (LS)\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nEntropy Value\nFrequency Counter Maximum Limit\nFrequency Count Minimum Limit\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nBit position that can be cleared if corresponding bit of …\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nCorresponding bit of INT_STATUS register cleared.\nCorresponding bit of INT_STATUS register active.\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nBit position that can be cleared if corresponding bit of …\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nSame behavior as bit 0 of this register.\nCorresponding interrupt of INT_STATUS is masked.\nCorresponding bit of INT_STATUS is active.\nRead only: Entropy Valid\nRead only: Frequency Count Fail\nRead: Error status\nBusy generation entropy. Any value read is invalid.\nTRNG can be stopped and entropy is valid if read.\nNo hardware nor self test frequency errors.\nThe frequency counter has detected a failure.\nno error\nerror detected.\nRead only: Entropy Valid\nRead: Error status\nRead only: Frequency Count Fail\nRead only: Frequency Count Valid. Indicates that a valid …\nForce System Clock\nLong run count continues between entropy generations\nOscillator Divide\nProgramming Mode Select\nReset Defaults\nSample Mode\nTRNG_OK_TO_STOP\nRead only: Test point inside ring oscillator.\nThis bit is unused. Always reads zero.\nThis bit is unused. Always reads zero.\nuse ring oscillator with no divide\nuse ring oscillator divided-by-2\nuse ring oscillator divided-by-4\nuse ring oscillator divided-by-8\nuse Von Neumann data into both Entropy shifter and …\nuse raw data into both Entropy shifter and Statistical …\nuse Von Neumann data into Entropy shifter. Use raw data …\nundefined/reserved.\nPoker 0h Count\nPoker 1h Count\nPoker 2h Count\nPoker 3h Count\nPoker 4h Count\nPoker 5h Count\nPoker 6h Count\nPoker 7h Count\nPoker 8h Count\nPoker 9h Count\nPoker Ah Count\nPoker Bh Count\nPoker Ch Count\nPoker Dh Count\nPoker Eh Count\nPoker Fh Count\nPoker Maximum Limit.\nPoker Range\nSparse Bit Limit\nLONG RUN MAX LIMIT\nRETRY COUNT\nMonobit Maximum Limit\nMonobit Range\nRun Length 1 Maximum Limit\nRun Length 1 Range\nRun Length 2 Maximum Limit\nRun Length 2 Range\nRun Length 3 Maximum Limit\nRun Length 3 Range\nRun Length 4 Maximum Limit\nRun Length 4 Range\nRun Length 5 Maximum Limit\nRun Length 5 Range\nRun Length 6+ Maximum Limit\nRun Length 6+ Range\nEntropy Delay\nSample Size\nIf set, the TRNG registers cannot be programmed\nThis bit is unused. Ignore.\nThis bit is unused. Ignore.\nProgramability of registers controlled only by the …\nOverides Miscellaneous Control Register access mode and …\nRETRY COUNT\nTest Fail, 1-Bit Run, Sampling 0s. If TF1BR0=1, the 1-Bit …\nTest Fail, 1-Bit Run, Sampling 1s. If TF1BR1=1, the 1-Bit …\nTest Fail, 2-Bit Run, Sampling 0s. If TF2BR0=1, the 2-Bit …\nTest Fail, 2-Bit Run, Sampling 1s. If TF2BR1=1, the 2-Bit …\nTest Fail, 3-Bit Run, Sampling 0s. If TF3BR0=1, the 3-Bit …\nTest Fail, 3-Bit Run, Sampling 1s. If TF3BR1=1, the 3-Bit …\nTest Fail, 4-Bit Run, Sampling 0s. If TF4BR0=1, the 4-Bit …\nTest Fail, 4-Bit Run, Sampling 1s. If TF4BR1=1, the 4-Bit …\nTest Fail, 5-Bit Run, Sampling 0s. If TF5BR0=1, the 5-Bit …\nTest Fail, 5-Bit Run, Sampling 1s. If TF5BR1=1, the 5-Bit …\nTest Fail, 6 Plus Bit Run, Sampling 0s\nTest Fail, 6 Plus Bit Run, Sampling 1s\nTest Fail, Long Run. If TFLR=1, the Long Run Test has …\nTest Fail, Mono Bit. If TFMB=1, the Mono Bit Test has …\nTest Fail, Poker. If TFP=1, the Poker Test has failed.\nTest Fail, Sparse Bit. If TFSB=1, the Sparse Bit Test has …\nShows the IP ID.\nShows the IP’s Major revision of the TRNG.\nShows the IP’s Minor revision of the TRNG.\nID for TRNG.\nMajor revision number for TRNG.\nMinor revision number for TRNG.\nShows the IP’s Configuaration options for the TRNG.\nShows the IP’s ECO revision of the TRNG.\nShows the compile options for the TRNG.\nShows the integration options for the TRNG.\nTRNG_CONFIG_OPT for TRNG.\nTRNG_ECO_REV for TRNG.\nCOMPILE_OPT for TRNG.\nINTG_OPT for TRNG.\nno description available\nno description available\nno description available\nno description available\nno description available\nno description available\nFlow Control\nFlow Control\nInterrupt Enable\nInterrupt Enable\nInterrupt Signal Enable\nInterrupt Signal Enable\nIntterrupt Status\nIntterrupt Status\nMeasure Value\nMeasure Value\nno description available\nno description available\nTouch Screen Controller\nTouch Screen Controller\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nAuto Measure\nMeasure Delay Time\n4/5 Wire detection\nDisable Auto Measure\nAuto Measure\n4-Wire Detection Mode\n5-Wire Detection Mode\nADC COCO Signal\nADC Coco Clear\nADC COCO Clear Disable\nADC Conversion Value\nDebug Enable\nHardware Trigger Select Signal\nTrigger\nDetect Enable Five Wire\nDetect Enable Four Wire\nDetect Five Wire\nDetect Four Wire\nThis field indicates glitch threshold\nIntermediate State\nState Machine\nWiper Wire 200K Pull Up Switch\nWiper Wire Pull Down Switch\nWiper Wire Pull Up Switch\nXNUR Wire 200K Pull Up Switch\nXNUR Wire Pull Down Switch\nXNUR Wire Pull Up Switch\nXPUL Wire 200K Pull Up Switch\nXPUL Wire Pull Down Switch\nXPUL Wire Pull Up Switch\nYNLR Wire 200K Pull Up Switch\nYNLR Wire Pull Down Switch\nYNLR Wire Pull Up Switch\nYPLL Wire 200K Pull Up Switch\nYPLL Wire Pull Down Switch\nYPLL Wire Pull Up Switch\nDo not read five wire detect value, read default value …\nRead five wire detect status from analogue\nDo not read four wire detect value, read default value …\nRead four wire detect status from analogue\nNo detect signal\nYes, there is a detect on the touch screen.\nNo detect signal\nYes, there is a detect on the touch screen.\nNormal function: 0x1fff ipg clock cycles; Low power mode: …\nNormal function: 0xfff ipg clock cycles; Low power mode: …\nNormal function: 0x7ff ipg clock cycles; Low power …\nNormal function: 0x3 ipg clock cycles; Low power mode:0x3 …\nNot in intermedia\nIntermedia\nIdle\nPre-charge\nDetect\nX-measure\nY-measure\nPre-charge\nDetect\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen up the switch\nClose the switch\nOpen the switch\nNo ADC COCO clear\nSet ADC COCO clear\nAllow TSC hardware generates ADC COCO clear\nPrevent TSC from generate ADC COCO clear signal\nEnable debug mode\nDisable debug mode\nNo hardware trigger signal\nHardware trigger signal, the signal must last at least 1 …\nThis bit is for SW disable registers\nDrop Measure\nStart Measure\nStart Sense\nSoft Reset\nLeave HW state machine control\nSW set to idle status\nDo not drop measure for now\nDrop the measure and controller return to idle status\nDo not start measure for now\nStart measure the X/Y coordinate value\nStay at idle status\nStart sense detection and (if auto_measure set to 1) …\nDetect Interrupt Enable\nIdle Software Interrupt Enable\nMeasure Interrupt Enable\nDisable detect interrupt\nEnable detect interrupt\nDisable idle software interrupt\nEnable idle software interrupt\nDisable measure interrupt\nEnable measure interrupt\nDetect Signal Enable\nIdle Software Signal Enable\nMeasure Signal Enable\nValid Signal Enable\nDisable detect signal\nEnable detect signal\nDisable idle software signal\nEnable idle software signal\nDisable valid signal\nEnable valid signal\nDetect Signal\nIdle Software\nMeasure Signal\nValid Signal\nDoes not exist a detect signal\nExist detect signal\nHaven’t return to idle status\nAlready return to idle status\nDoes not exist a measure signal\nExist a measure signal\nThere is no touch detected after measurement, indicates …\nThere is touch detection after measurement, indicates that …\nX Value\nY Value\nBefore detection, the top screen needs some time before …\nNext Asynch. Address\nNext Asynch. Address\nProgrammable Burst Size\nProgrammable Burst Size\nCapability Registers Length\nCapability Registers Length\nConfigure Flag Register\nConfigure Flag Register\nDevice Controller Capability Parameters\nDevice Controller Capability Parameters\nDevice Controller Interface Version\nDevice Controller Interface Version\nDevice Address\nDevice Address\nEndpoint Complete\nEndpoint Complete\nEndpoint Control\nEndpoint Control\nEndpoint Control0\nEndpoint Control0\nEndpoint Flush\nEndpoint Flush\nEndpoint NAK\nEndpoint NAK\nEndpoint NAK Enable\nEndpoint NAK Enable\nEndpoint Prime\nEndpoint Prime\nEndpoint Setup Status\nEndpoint Setup Status\nEndpoint Status\nEndpoint Status\nUSB Frame Index\nUSB Frame Index\nGeneral Purpose Timer #0 Controller\nGeneral Purpose Timer #0 Controller\nGeneral Purpose Timer #0 Load\nGeneral Purpose Timer #0 Load\nGeneral Purpose Timer #1 Controller\nGeneral Purpose Timer #1 Controller\nGeneral Purpose Timer #1 Load\nGeneral Purpose Timer #1 Load\nHost Controller Capability Parameters\nHost Controller Capability Parameters\nHost Controller Interface Version\nHost Controller Interface Version\nHost Controller Structural Parameters\nHost Controller Structural Parameters\nDevice Hardware Parameters\nDevice Hardware Parameters\nHardware General\nHardware General\nHost Hardware Parameters\nHost Hardware Parameters\nRX Buffer Hardware Parameters\nRX Buffer Hardware Parameters\nTX Buffer Hardware Parameters\nTX Buffer Hardware Parameters\nIdentification register\nIdentification register\nOn-The-Go Status &amp; control\nOn-The-Go Status &amp; control\nPort Status &amp; Control\nPort Status &amp; Control\nUSB\nSystem Bus Config\nSystem Bus Config\nTX FIFO Fill Tuning\nTX FIFO Fill Tuning\nUSB\nUSB\nUSB Command Register\nUSB Command Register\nInterrupt Enable Register\nInterrupt Enable Register\nUSB Device Mode\nUSB Device Mode\nUSB Status Register\nUSB Status Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nLink Pointer Low (LPL)\nProgrammable RX Burst Size\nProgrammable TX Burst Size\nThese bits are used as an offset to add to register base …\nConfigure Flag Host software sets this bit as the last …\nPort routing control logic default-routes each port to an …\nPort routing control logic default-routes all ports to …\nDevice Capable When this bit is 1, this controller is …\nDevice Endpoint Number This field indicates the number of …\nHost Capable When this bit is 1, this controller is …\nDevice Controller Interface Version Number Default value …\nDevice Address. These bits correspond to the USB device …\nDevice Address Advance\nEndpoint Receive Complete Event - RW/C\nEndpoint Transmit Complete Event - R/WC\nRX Endpoint Data Sink - Read/Write 0 Dual Port Memory …\nRX Endpoint Enable 0 Disabled [Default] 1 Enabled An …\nRX Data Toggle Inhibit 0 Disabled [Default] 1 Enabled This …\nRX Data Toggle Reset (WS) Write 1 - Reset PID Sequence …\nRX Endpoint Stall - Read/Write 0 End Point OK\nRX Endpoint Type - Read/Write 00 Control 01 Isochronous 10 …\nTX Endpoint Data Source - Read/Write 0 Dual Port Memory …\nTX Endpoint Enable 0 Disabled [Default] 1 Enabled An …\nTX Data Toggle Inhibit 0 PID Sequencing Enabled\nTX Data Toggle Reset (WS) Write 1 - Reset PID Sequence …\nTX Endpoint Stall - Read/Write 0 End Point OK 1 End Point …\nTX Endpoint Type - Read/Write 00 Control 01 Isochronous 10 …\nRX Endpoint Enable 1 Enabled Endpoint0 is always enabled.\nRX Endpoint Stall - Read/Write 0 End Point OK\nRX Endpoint Type - Read/Write 00 Control Endpoint0 is …\nTX Endpoint Enable 1 Enabled Endpoint0 is always enabled.\nTX Endpoint Stall - Read/Write 0 End Point OK [Default] 1 …\nTX Endpoint Type - Read/Write 00 - Control Endpoint0 is …\nFlush Endpoint Receive Buffer - R/WS\nFlush Endpoint Transmit Buffer - R/WS\nRX Endpoint NAK - R/WC\nTX Endpoint NAK - R/WC\nRX Endpoint NAK Enable - R/W\nTX Endpoint NAK Enable - R/W\nPrime Endpoint Receive Buffer - R/WS\nPrime Endpoint Transmit Buffer - R/WS\nSetup Endpoint Status\nEndpoint Receive Buffer Ready – Read Only\nEndpoint Transmit Buffer Ready – Read Only\nFrame Index\n(1024) 12\n(512) 11\n(256) 10\n(128) 9\n(64) 8\n(32) 7\n(16) 6\n(8) 5\nGeneral Purpose Timer Counter. This field is the count …\nGeneral Purpose Timer Mode In one shot mode, the timer …\nGeneral Purpose Timer Reset\nGeneral Purpose Timer Run GPTCNT bits are not effected …\nOne Shot Mode\nRepeat Mode\nNo action\nLoad counter value from GPTLD bits in n_GPTIMER0LD\nStop counting\nRun\nGeneral Purpose Timer Load Value These bit fields are …\nGeneral Purpose Timer Counter. This field is the count …\nGeneral Purpose Timer Mode In one shot mode, the timer …\nGeneral Purpose Timer Reset\nGeneral Purpose Timer Run GPTCNT bits are not effected …\nOne Shot Mode\nRepeat Mode\nNo action\nLoad counter value from GPTLD bits in USB_n_GPTIMER0LD\nStop counting\nRun\nGeneral Purpose Timer Load Value These bit fields are …\n64-bit Addressing Capability This bit is set ‘0b’ in …\nAsynchronous Schedule Park Capability If this bit is set …\nEHCI Extended Capabilities Pointer\nIsochronous Scheduling Threshold\nProgrammable Frame List Flag If this bit is set to zero, …\nHost Controller Interface Version Number Default value is …\nNumber of Companion Controller (N_CC)\nNumber of Ports per Companion Controller This field …\nNumber of downstream ports\nNumber of Ports per Transaction Translator (N_PTT)\nNumber of Transaction Translators (N_TT)\nPort Indicators (P INDICATOR) This bit indicates whether …\nPort Power Control This field indicates whether the host …\nThere is no internal Companion Controller and …\nThere are internal companion controller(s) and …\nDevice Capable. Indicating whether device operation mode …\nDevice Endpoint Number\nNot supported\nSupported\nTransciever type\nData width of the transciever connected to the controller …\nSerial interface mode capability\nUTMI/UMTI+\nULPI DDR\nULPI\nSerial Only\nSoftware programmable - reset to UTMI/UTMI+\nSoftware programmable - reset to ULPI DDR\nSoftware programmable - reset to ULPI\nSoftware programmable - reset to Serial\n8 bit wide data bus Software non-programmable\n16 bit wide data bus Software non-programmable\nReset to 8 bit wide data bus Software programmable\nReset to 16 bit wide data bus Software programmable\nNo Serial Engine, always use parallel signalling.\nSerial Engine present, always use serial signalling for …\nSoftware programmable - Reset to use parallel signalling …\nSoftware programmable - Reset to use serial signalling for …\nHost Capable. Indicating whether host operation mode is …\nThe Nmber of downstream ports supported by the host …\nNot supported\nSupported\nBuffer total size for all receive endpoints is (2^RXADD)\nDefault burst size for memory to RX buffer transfer\nDefault burst size for memory to TX buffer transfer\nTX FIFO Buffer size is: (2^TXCHANADD) * 4 Bytes\nConfiguration number\nComplement version of ID\nRevision number of the controller core.\nA Session Valid - Read Only. Indicates VBus is above the A …\nA Session Valid Interrupt Enable - Read/Write\nA Session Valid Interrupt Status - Read/Write to Clear\nA VBus Valid - Read Only. Indicates VBus is above the A …\nA VBus Valid Interrupt Enable - Read/Write. Setting this …\nA VBus Valid Interrupt Status - Read/Write to Clear\nB Session End - Read Only. Indicates VBus is below the B …\nB Session End Interrupt Enable - Read/Write. Setting this …\nB Session End Interrupt Status - Read/Write to Clear\nB Session Valid - Read Only. Indicates VBus is above the B …\nB Session Valid Interrupt Enable - Read/Write\nB Session Valid Interrupt Status - Read/Write to Clear\nData Pulsing - Read/Write\nData Pulse Interrupt Enable\nData Pulse Interrupt Status - Read/Write to Clear\nData Bus Pulsing Status - Read Only\n1 millisecond timer Interrupt Enable - Read/Write\nUSB ID - Read Only. 0 = A device, 1 = B device\nUSB ID Interrupt Enable - Read/Write. Setting this bit …\nUSB ID Interrupt Status - Read/Write\nID Pullup - Read/Write This bit provide control over the …\nOTG Termination - Read/Write\n1 millisecond timer Interrupt Status - Read/Write to Clear\n1 millisecond timer toggle - Read Only. This bit toggles …\nVBUS Charge - Read/Write\nVBUS_Discharge - Read/Write. Setting this bit causes VBus …\nCurrent Connect Status-Read Only\nConnect Status Change-R/WC\nForce Port Resume -Read/Write\nHigh-Speed Port - Read Only\nLine Status-Read Only\nOver-current Active-Read Only\nOver-current Change-R/WC\nPort Enabled/Disabled-Read/Write\nPort Enable/Disable Change-R/WC\nPort Force Full Speed Connect - Read/Write\nPHY Low Power Suspend - Clock Disable (PLPSCD) - Read/Write\nPort Indicator Control - Read/Write\nPort Owner-Read/Write\nPort Power (PP)-Read/Write or Read Only\nPort Reset - Read/Write or Read Only\nPort Speed - Read Only. This register field indicates the …\nPort Test Control - Read/Write\nAll USB port interface modes are listed in this field …\nSee description at bits 31-30\nParallel Transceiver Width This bit has no effect if …\nSerial Transceiver Select 1 Serial Interface Engine is …\nSuspend - Read/Write or Read Only\nWake on Connect Enable (WKCNNT_E) - Read/Write\nWake on Disconnect Enable (WKDSCNNT_E) - Read/Write\nWake on Over-current Enable (WKOC_E) - Read/Write\nSE0\nK-state\nJ-state\nUndefined\nThis port does not have an over-current condition.\nThis port currently has an over-current condition\nNormal operation\nForced to full speed\nEnable PHY clock\nDisable PHY clock\nPort indicators are off\nAmber\nGreen\nUndefined\nFull Speed\nLow Speed\nHigh Speed\nUndefined\nTEST_MODE_DISABLE\nJ_STATE\nK_STATE\nSE0 (host) / NAK (device)\nPacket\nFORCE_ENABLE_HS\nFORCE_ENABLE_FS\nFORCE_ENABLE_LS\nSelect the 8-bit UTMI interface [60MHz]\nSelect the 16-bit UTMI interface [30MHz]\nAHB master interface Burst configuration These bits …\nIncremental burst of unspecified length only\nINCR4 burst, then single transfer\nINCR8 burst, INCR4 burst, then single transfer\nINCR16 burst, INCR8 burst, INCR4 burst, then single …\nINCR4 burst, then incremental burst of unspecified length\nINCR8 burst, INCR4 burst, then incremental burst of …\nINCR16 burst, INCR8 burst, INCR4 burst, then incremental …\nFIFO Burst Threshold\nScheduler Health Counter\nScheduler Overhead\nAsynchronous Schedule Enable - Read/Write\nAsynchronous Schedule Park Mode Count - Read/Write\nAsynchronous Schedule Park Mode Enable - Read/Write\nAdd dTD TripWire - Read/Write\nSee description at bit 15\nFrame List Size - (Read/Write or Read Only)\nInterrupt on Async Advance Doorbell - Read/Write\nInterrupt Threshold Control -Read/Write\nPeriodic Schedule Enable- Read/Write\nRun/Stop (RS) - Read/Write\nController Reset (RESET) - Read/Write\nSetup TripWire - Read/Write\nDo not process the Asynchronous Schedule.\nUse the ASYNCLISTADDR register to access the Asynchronous …\nImmediate (no threshold)\n1 micro-frame\n16 micro-frames\n2 micro-frames\n32 micro-frames\n4 micro-frames\n64 micro-frames\n8 micro-frames\nDo not process the Periodic Schedule\nUse the PERIODICLISTBASE register to access the Periodic …\nAsync Advance Interrupt Enable When this bit is one and …\nFrame List Rollover Interrupt Enable When this bit is one …\nNAK Interrupt Enable When this bit is one and the NAKI bit …\nPort Change Detect Interrupt Enable When this bit is one …\nSystem Error Interrupt Enable When this bit is one and the …\nSleep Interrupt Enable When this bit is one and the SLI …\nSOF Received Interrupt Enable When this bit is one and the …\nGeneral Purpose Timer #0 Interrupt Enable When this bit is …\nGeneral Purpose Timer #1 Interrupt Enable When this bit is …\nUSB Host Asynchronous Interrupt Enable When this bit is …\nUSB Interrupt Enable When this bit is one and the UI bit …\nUSB Error Interrupt Enable When this bit is one and the …\nULPI Interrupt Enable When this bit is one and the UPLII …\nUSB Host Periodic Interrupt Enable When this bit is one, …\nUSB Reset Interrupt Enable When this bit is one and the …\nController Mode - R/WO\nEndian Select - Read/Write\nStream Disable Mode\nSetup Lockout Mode\nIdle [Default for combination host/device]\nDevice Controller [Default for device only controller]\nHost Controller [Default for host only controller]\nLittle Endian [Default]\nBig Endian\nSetup Lockouts On (default);\nSetup Lockouts Off (DCD requires use of Setup Data Buffer …\nInterrupt on Async Advance - R/WC\nAsynchronous Schedule Status - Read Only\nFrame List Rollover - R/WC\nHCHaIted - Read Only\nNAK Interrupt Bit–RO\nPort Change Detect - R/WC\nPeriodic Schedule Status - Read Only\nReclamation - Read Only\nSystem Error- R/WC\nDCSuspend - R/WC\nSOF Received - R/WC\nGeneral Purpose Timer Interrupt 0(GPTINT0)–R/WC\nGeneral Purpose Timer Interrupt 1(GPTINT1)–R/WC\nUSB Error Interrupt (USBERRINT) - R/WC\nUSB Interrupt (USBINT) - R/WC\nULPI Interrupt - R/WC\nUSB Reset Received - R/WC\nChip Silicon Version\nChip Silicon Version\nUSB Analog\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Status Register\nUSB Charger Detect Status Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Status Register\nUSB VBUS Detect Status Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Charger Detect Status Register\nUSB Charger Detect Status Register\nUSB Charger Detect Register\nUSB Charger Detect Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Loopback Test Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB Misc Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB VBUS Detect Status Register\nUSB VBUS Detect Status Register\nUSB VBUS Detect Register\nUSB VBUS Detect Register\nUSB Analog\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nChip silicon revision\nSilicon revision 1.0\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nState of charger detection. This bit is a read only …\nDM line state output of the charger detector.\nDP line state output of the charger detector.\nState of the USB plug contact detector.\nThe USB port is not connected to a charger.\nA charger (either a dedicated charger or a host charger) …\nThe USB plug has made good contact.\nThe USB plug has not made contact.\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nSetting this bit can enable 1\nSetting this bit can enable 1\nSetting this bit can enable 1\nSetting this bit can enable 1\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nIndicates VBus is valid for a A-peripheral\nIndicates VBus is valid for a B-peripheral\nSession End for USB OTG\nVBus valid for USB OTG\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nState of charger detection. This bit is a read only …\nDM line state output of the charger detector.\nDP line state output of the charger detector.\nState of the USB plug contact detector.\nThe USB port is not connected to a charger.\nA charger (either a dedicated charger or a host charger) …\nThe USB plug has made good contact.\nThe USB plug has not made contact.\nCheck the charger connection\nCheck the contact of USB plug\nControl the charger detector.\nCheck whether a charger (either a dedicated charger or a …\nDo not check whether a charger is connected to the USB …\nCheck whether the USB plug has been in contact with each …\nDo not check the contact of USB plug.\nDisable the charger detector.\nEnable the charger detector.\nSetting this bit can enable 1\nSetting this bit can enable 1\nSetting this bit can enable 1\nSetting this bit can enable 1\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nEnables the clk to the UTMI block.\nEnable the deglitching circuit of the USB PLL output.\nUse external resistor to generate the current bias for the …\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nIndicates VBus is valid for a A-peripheral\nIndicates VBus is valid for a B-peripheral\nSession End for USB OTG\nVBus valid for USB OTG\nUSB OTG charge VBUS.\nUSB OTG discharge VBUS.\nPowers up comparators for vbus_valid detector.\nSet the threshold for the VBUSVALID comparator\n4.0V\n4.1V\n4.2V\n4.3V\n4.4V (default)\n4.5V\n4.6V\n4.7V\nUSB\nUSB\nUSB\nUSB OTG1 Control Register\nUSB OTG1 Control Register\nOTG1 UTMI PHY Control 0 Register\nOTG1 UTMI PHY Control 0 Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nDisable OTG1 Overcurrent Detection\nOTG1 Polarity of Overcurrent The polarity of OTG1 port …\nOTG1 Power Polarity This bit should be set according to …\nOTG1 Wake-up Interrupt Enable This bit enables or disables …\nOTG1 Wake-up Interrupt Request This bit indicates that a …\nWake-up on DPDM change enable\nOTG1 Wake-up on ID change enable\nOTG1 Software Wake-up\nOTG1 Software Wake-up Enable\nOTG1 wake-up on VBUS change enable\nEnables overcurrent detection\nDisables overcurrent detection\nHigh active (high on this signal represents an overcurrent …\nLow active (low on this signal represents an overcurrent …\nPMIC Power Pin is Low active.\nPMIC Power Pin is High active.\nInterrupt Disabled\nInterrupt Enabled\nNo wake-up interrupt request received\nWake-up Interrupt Request received\nDPDM changes wake-up to be disabled only when VBUS is 0.\n(Default) DPDM changes wake-up to be enabled, it is for …\nDisable\nEnable\nInactive\nForce wake-up\nDisable\nEnable\nDisable\nEnable\nIndicating whether OTG1 UTMI PHY clock is valid\nInvalid\nValid\nUSB PHY General Control Register\nUSB PHY General Control Register\nUSB PHY General Control Register\nUSB PHY General Control Register\nUSB PHY General Control Register\nUSB PHY General Control Register\nUSB PHY General Control Register\nUSB PHY General Control Register\nUSB PHY Debug Register\nUSB PHY Debug Register\nUTMI Debug Status Register 0\nUTMI Debug Status Register 0\nUTMI Debug Status Register 1\nUTMI Debug Status Register 1\nUTMI Debug Status Register 1\nUTMI Debug Status Register 1\nUTMI Debug Status Register 1\nUTMI Debug Status Register 1\nUTMI Debug Status Register 1\nUTMI Debug Status Register 1\nUSB PHY Debug Register\nUSB PHY Debug Register\nUSB PHY Debug Register\nUSB PHY Debug Register\nUSB PHY Debug Register\nUSB PHY Debug Register\nUSB PHY Power-Down Register\nUSB PHY Power-Down Register\nUSB PHY Power-Down Register\nUSB PHY Power-Down Register\nUSB PHY Power-Down Register\nUSB PHY Power-Down Register\nUSB PHY Power-Down Register\nUSB PHY Power-Down Register\nUSB PHY Receiver Control Register\nUSB PHY Receiver Control Register\nUSB PHY Receiver Control Register\nUSB PHY Receiver Control Register\nUSB PHY Receiver Control Register\nUSB PHY Receiver Control Register\nUSB PHY Receiver Control Register\nUSB PHY Receiver Control Register\nUSBPHY Register Reference Index\nUSB PHY Status Register\nUSB PHY Status Register\nUSB PHY Transmitter Control Register\nUSB PHY Transmitter Control Register\nUSB PHY Transmitter Control Register\nUSB PHY Transmitter Control Register\nUSB PHY Transmitter Control Register\nUSB PHY Transmitter Control Register\nUSB PHY Transmitter Control Register\nUSB PHY Transmitter Control Register\nUSBPHY Register Reference Index\nUSBPHY Register Reference Index\nUTMI RTL Version\nUTMI RTL Version\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nGate UTMI Clocks\nEnables the LRADC to monitor USB_DP and USB_DM. This is …\nIndicates that the device is connected\nFor device mode, if this bit is cleared to 0, then it …\nEnables the feature to auto-clear the CLKGATE bit if there …\nEnables the feature to auto-clear the PWD register bits in …\nEnables the feature to auto-enable the POWER bit of …\nFor device mode, enables 200-KOhm pullups for detecting …\nEnables the feature to wakeup USB if DP/DM is toggled when …\nFor host mode, enables high-speed disconnect detector\nEnables the feature to wakeup USB if ID is toggled when …\nEnables interrupt for the detection of connectivity to the …\nEnables interrupt for detection of disconnection to Device …\nEnables interrupt for detection of a non-J state on the …\nEnables interrupt for the wakeup events.\nEnables circuit to detect resistance of MiniAB ID pin.\nEnable OTG_ID_CHG_IRQ.\nEnables UTMI+ Level2. This should be enabled if needs to …\nEnables UTMI+ Level3\nEnables the feature to wakeup USB if VBUS is toggled when …\nEnables the feature to reset the FSDLL lock detection …\nIndicates that the device has disconnected in high-speed …\nForces the next FS packet that is transmitted to have a …\nOTG ID change interrupt. Indicates the value of ID pin …\nAlmost same as OTGID_STATUS in USBPHYx_STATUS Register")