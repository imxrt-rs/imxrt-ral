searchState.loadedDescShard("imxrt_ral", 7, "Set to 1 will make RESUME_IRQ bit a sticky bit until …\nIndicates that the host is sending a wake-up after suspend\nWriting a 1 to this bit will soft-reset the USBPHYx_PWD, …\nUsed by the PHY to indicate a powered-down state\nIndicates that there is a wakeup event\nGate UTMI Clocks\nEnables the LRADC to monitor USB_DP and USB_DM. This is …\nIndicates that the device is connected\nFor device mode, if this bit is cleared to 0, then it …\nEnables the feature to auto-clear the CLKGATE bit if there …\nEnables the feature to auto-clear the PWD register bits in …\nEnables the feature to auto-enable the POWER bit of …\nFor device mode, enables 200-KOhm pullups for detecting …\nEnables the feature to wakeup USB if DP/DM is toggled when …\nFor host mode, enables high-speed disconnect detector\nEnables the feature to wakeup USB if ID is toggled when …\nEnables interrupt for the detection of connectivity to the …\nEnables interrupt for detection of disconnection to Device …\nEnables interrupt for detection of a non-J state on the …\nEnables interrupt for the wakeup events.\nEnables circuit to detect resistance of MiniAB ID pin.\nEnable OTG_ID_CHG_IRQ.\nEnables UTMI+ Level2. This should be enabled if needs to …\nEnables UTMI+ Level3\nEnables the feature to wakeup USB if VBUS is toggled when …\nEnables the feature to reset the FSDLL lock detection …\nIndicates that the device has disconnected in high-speed …\nForces the next FS packet that is transmitted to have a …\nOTG ID change interrupt. Indicates the value of ID pin …\nAlmost same as OTGID_STATUS in USBPHYx_STATUS Register\nSet to 1 will make RESUME_IRQ bit a sticky bit until …\nIndicates that the host is sending a wake-up after suspend\nWriting a 1 to this bit will soft-reset the USBPHYx_PWD, …\nUsed by the PHY to indicate a powered-down state\nIndicates that there is a wakeup event\nGate UTMI Clocks\nEnables the LRADC to monitor USB_DP and USB_DM. This is …\nIndicates that the device is connected\nFor device mode, if this bit is cleared to 0, then it …\nEnables the feature to auto-clear the CLKGATE bit if there …\nEnables the feature to auto-clear the PWD register bits in …\nEnables the feature to auto-enable the POWER bit of …\nFor device mode, enables 200-KOhm pullups for detecting …\nEnables the feature to wakeup USB if DP/DM is toggled when …\nFor host mode, enables high-speed disconnect detector\nEnables the feature to wakeup USB if ID is toggled when …\nEnables interrupt for the detection of connectivity to the …\nEnables interrupt for detection of disconnection to Device …\nEnables interrupt for detection of a non-J state on the …\nEnables interrupt for the wakeup events.\nEnables circuit to detect resistance of MiniAB ID pin.\nEnable OTG_ID_CHG_IRQ.\nEnables UTMI+ Level2. This should be enabled if needs to …\nEnables UTMI+ Level3\nEnables the feature to wakeup USB if VBUS is toggled when …\nEnables the feature to reset the FSDLL lock detection …\nIndicates that the device has disconnected in high-speed …\nForces the next FS packet that is transmitted to have a …\nOTG ID change interrupt. Indicates the value of ID pin …\nAlmost same as OTGID_STATUS in USBPHYx_STATUS Register\nSet to 1 will make RESUME_IRQ bit a sticky bit until …\nIndicates that the host is sending a wake-up after suspend\nWriting a 1 to this bit will soft-reset the USBPHYx_PWD, …\nUsed by the PHY to indicate a powered-down state\nIndicates that there is a wakeup event\nGate UTMI Clocks\nEnables the LRADC to monitor USB_DP and USB_DM. This is …\nIndicates that the device is connected\nFor device mode, if this bit is cleared to 0, then it …\nEnables the feature to auto-clear the CLKGATE bit if there …\nEnables the feature to auto-clear the PWD register bits in …\nEnables the feature to auto-enable the POWER bit of …\nFor device mode, enables 200-KOhm pullups for detecting …\nEnables the feature to wakeup USB if DP/DM is toggled when …\nFor host mode, enables high-speed disconnect detector\nEnables the feature to wakeup USB if ID is toggled when …\nEnables interrupt for the detection of connectivity to the …\nEnables interrupt for detection of disconnection to Device …\nEnables interrupt for detection of a non-J state on the …\nEnables interrupt for the wakeup events.\nEnables circuit to detect resistance of MiniAB ID pin.\nEnable OTG_ID_CHG_IRQ.\nEnables UTMI+ Level2. This should be enabled if needs to …\nEnables UTMI+ Level3\nEnables the feature to wakeup USB if VBUS is toggled when …\nEnables the feature to reset the FSDLL lock detection …\nIndicates that the device has disconnected in high-speed …\nForces the next FS packet that is transmitted to have a …\nOTG ID change interrupt. Indicates the value of ID pin …\nAlmost same as OTGID_STATUS in USBPHYx_STATUS Register\nSet to 1 will make RESUME_IRQ bit a sticky bit until …\nIndicates that the host is sending a wake-up after suspend\nWriting a 1 to this bit will soft-reset the USBPHYx_PWD, …\nUsed by the PHY to indicate a powered-down state\nIndicates that there is a wakeup event\nGate Test Clocks\nUse holding registers to assist in timing for external …\nSet bit 5 to 1 to override the control of the USB_DP …\nSet bit to allow squelch to reset high-speed receive.\nSet this bit to allow a countdown to transition in between …\nChoose to trigger the host resume SE0 with …\nSet bit 3 to 1 to pull down 15-KOhm on USB_DP line\nOnce OTG ID from USBPHYx_STATUS_OTGID_STATUS, use this to …\nDelay in between the detection of squelch to the reset of …\nDuration of RESET in terms of the number of 480-MHz cycles.\nDelay in between the end of transmit to the beginning of …\nRunning count of the failed pseudo-random generator …\nRunning count of the squelch reset instead of normal end …\nRunning count of the UTMI_RXERROR.\nDelay increment of the rise of squelch: 00 = Delay is …\nDelay increment of the rise of squelch: 00 = Delay is …\nDelay increment of the rise of squelch: 00 = Delay is …\nDelay increment of the rise of squelch: 00 = Delay is …\nGate Test Clocks\nUse holding registers to assist in timing for external …\nSet bit 5 to 1 to override the control of the USB_DP …\nSet bit to allow squelch to reset high-speed receive.\nSet this bit to allow a countdown to transition in between …\nChoose to trigger the host resume SE0 with …\nSet bit 3 to 1 to pull down 15-KOhm on USB_DP line\nOnce OTG ID from USBPHYx_STATUS_OTGID_STATUS, use this to …\nDelay in between the detection of squelch to the reset of …\nDuration of RESET in terms of the number of 480-MHz cycles.\nDelay in between the end of transmit to the beginning of …\nGate Test Clocks\nUse holding registers to assist in timing for external …\nSet bit 5 to 1 to override the control of the USB_DP …\nSet bit to allow squelch to reset high-speed receive.\nSet this bit to allow a countdown to transition in between …\nChoose to trigger the host resume SE0 with …\nSet bit 3 to 1 to pull down 15-KOhm on USB_DP line\nOnce OTG ID from USBPHYx_STATUS_OTGID_STATUS, use this to …\nDelay in between the detection of squelch to the reset of …\nDuration of RESET in terms of the number of 480-MHz cycles.\nDelay in between the end of transmit to the beginning of …\nGate Test Clocks\nUse holding registers to assist in timing for external …\nSet bit 5 to 1 to override the control of the USB_DP …\nSet bit to allow squelch to reset high-speed receive.\nSet this bit to allow a countdown to transition in between …\nChoose to trigger the host resume SE0 with …\nSet bit 3 to 1 to pull down 15-KOhm on USB_DP line\nOnce OTG ID from USBPHYx_STATUS_OTGID_STATUS, use this to …\nDelay in between the detection of squelch to the reset of …\nDuration of RESET in terms of the number of 480-MHz cycles.\nDelay in between the end of transmit to the beginning of …\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\n0 = Normal operation\nThe DISCONADJ field adjusts the trip point for the …\nThe ENVADJ field adjusts the trip point for the envelope …\n0 = Normal operation\nThe DISCONADJ field adjusts the trip point for the …\nThe ENVADJ field adjusts the trip point for the envelope …\n0 = Normal operation\nThe DISCONADJ field adjusts the trip point for the …\nThe ENVADJ field adjusts the trip point for the envelope …\n0 = Normal operation\nThe DISCONADJ field adjusts the trip point for the …\nThe ENVADJ field adjusts the trip point for the envelope …\n0 = Normal operation\nIndicates that the device has been connected on the USB_DP …\nIndicates that the device has disconnected while in …\nIndicates the results of ID pin on MiniAB plug\nIndicates that the host is sending a wake-up after suspend …\nResistor Trimming Code: 0000 = 0.16% 0111 = Nominal 1111 = …\nDecode to select a 45-Ohm resistance to the USB_DN output …\nDecode to select a 45-Ohm resistance to the USB_DP output …\nControls the edge-rate of the current sensing transistors …\nResistor Trimming Code: 0000 = 0.16% 0111 = Nominal 1111 = …\nDecode to select a 45-Ohm resistance to the USB_DN output …\nDecode to select a 45-Ohm resistance to the USB_DP output …\nControls the edge-rate of the current sensing transistors …\nResistor Trimming Code: 0000 = 0.16% 0111 = Nominal 1111 = …\nDecode to select a 45-Ohm resistance to the USB_DN output …\nDecode to select a 45-Ohm resistance to the USB_DP output …\nControls the edge-rate of the current sensing transistors …\nResistor Trimming Code: 0000 = 0.16% 0111 = Nominal 1111 = …\nDecode to select a 45-Ohm resistance to the USB_DN output …\nDecode to select a 45-Ohm resistance to the USB_DP output …\nControls the edge-rate of the current sensing transistors …\nFixed read-only value reflecting the MAJOR field of the …\nFixed read-only value reflecting the MINOR field of the …\nFixed read-only value reflecting the stepping of the RTL …\nADMA Error Status Register\nADMA Error Status Register\nADMA System Address\nADMA System Address\nAuto CMD12 Error Status\nAuto CMD12 Error Status\nBlock Attributes\nBlock Attributes\nCLK Tuning Control and Status\nCLK Tuning Control and Status\nCommand Argument\nCommand Argument\nCommand Response0\nCommand Response0\nCommand Response1\nCommand Response1\nCommand Response2\nCommand Response2\nCommand Response3\nCommand Response3\nCommand Transfer Type\nCommand Transfer Type\nData Buffer Access Port\nData Buffer Access Port\nDLL (Delay Line) Control\nDLL (Delay Line) Control\nDLL Status\nDLL Status\nDMA System Address\nDMA System Address\nForce Event\nForce Event\nHost Controller Capabilities\nHost Controller Capabilities\nInterrupt Signal Enable\nInterrupt Signal Enable\nInterrupt Status\nInterrupt Status\nInterrupt Status Enable\nInterrupt Status Enable\nMixer Control\nMixer Control\nMMC Boot Register\nMMC Boot Register\nPresent State\nPresent State\nProtocol Control\nProtocol Control\nuSDHC\nSystem Control\nSystem Control\nTuning Control Register\nTuning Control Register\nuSDHC\nuSDHC\nVendor Specific Register\nVendor Specific Register\nVendor Specific 2 Register\nVendor Specific 2 Register\nWatermark Level\nWatermark Level\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nADMA Descriptor Error\nADMA Error State (when ADMA Error is occurred)\nADMA Length Mismatch Error\nNo Error\nError\nNo Error\nError\nADMA System Address\nAuto CMD12 / 23 CRC Error\nAuto CMD12 / 23 End Bit Error\nAuto CMD12 / 23 Index Error\nAuto CMD12 Not Executed\nAuto CMD12 / 23 Timeout Error\nCommand Not Issued By Auto CMD12 Error\nExecute Tuning\nSample Clock Select\nNo CRC error\nCRC Error Met in Auto CMD12/23 Response\nNo error\nEnd Bit Error Generated\nNo error\nError, the CMD index in response is not CMD12/23\nExecuted\nNot executed\nNo error\nTime out\nNo error\nNot Issued\nFixed clock is used to sample data\nTuned clock is used to sample data\nBlock Count\nBlock Size\nStop Count\n1 block\n2 blocks\n65535 blocks\nNo data transfer\n1 Byte\n2 Bytes\n2048 Bytes\n3 Bytes\n4 Bytes\n4096 Bytes\n511 Bytes\n512 Bytes\nDLY_CELL_SET_OUT\nDLY_CELL_SET_POST\nDLY_CELL_SET_PRE\nNXT_ERR\nPRE_ERR\nTAP_SEL_OUT\nTAP_SEL_POST\nTAP_SEL_PRE\nCommand Argument\nCommand Response 0\nCommand Response 1\nCommand Response 2\nCommand Response 3\nCommand CRC Check Enable\nCommand Index Check Enable\nCommand Index\nCommand Type\nData Present Select\nResponse Type Select\nDisable\nEnable\nDisable\nEnable\nNormal Other commands\nSuspend CMD52 for writing Bus Suspend in CCCR\nResume CMD52 for writing Function Select in CCCR\nAbort CMD12, CMD52 for writing I/O Abort in CCCR\nNo Data Present\nData Present\nNo Response\nResponse Length 136\nResponse Length 48\nResponse Length 48, check Busy after response\nData Content\nDLL_CTRL_ENABLE\nDLL_CTRL_GATE_UPDATE\nDLL_CTRL_REF_UPDATE_INT\nDLL_CTRL_RESET\nDLL_CTRL_SLV_DLY_TARGET0\nDLL_CTRL_SLV_DLY_TARGET1\nDLL_CTRL_SLV_FORCE_UPD\nDLL_CTRL_SLV_OVERRIDE\nDLL_CTRL_SLV_OVERRIDE_VAL\nDLL_CTRL_SLV_UPDATE_INT\nDLL_STS_REF_LOCK\nDLL_STS_REF_SEL\nDLL_STS_SLV_LOCK\nDLL_STS_SLV_SEL\nDS_ADDR\nForce Event Auto Command 12 CRC Error\nForce Event Auto Command 12 Error\nForce Event Auto Command 12 End Bit Error\nForce Event Auto Command 12 Index Error\nForce Event Auto Command 12 Not Executed\nForce Event Auto Command 12 Time Out Error\nForce Event Command CRC Error\nForce Event Command End Bit Error\nForce Event Command Index Error\nForce Event Card Interrupt\nForce Event Command Not Executed By Auto Command 12 Error\nForce Event Command Time Out Error\nForce Event Data CRC Error\nForce Event Data End Bit Error\nForce Event DMA Error\nForce Event Data Time Out Error\nForce Tuning Error\nADMA Support\nDDR50 support\nDMA Support\nHigh Speed Support\nMax Block Length\nRetuning Mode\nSDR104 support\nSDR50 support\nSuspend / Resume Support\nTime Counter for Retuning\nUse Tuning for SDR50\nVoltage Support 1.8 V\nVoltage Support 3.0 V\nVoltage Support 3.3V\nAdvanced DMA Not supported\nAdvanced DMA Supported\nDMA not supported\nDMA Supported\nHigh Speed Not Supported\nHigh Speed Supported\n512 bytes\n1024 bytes\n2048 bytes\n4096 bytes\nMode 1\nMode 2\nMode 3\nNot supported\nSupported\nSDR does not require tuning\nSDR50 requires tuning\n1.8V not supported\n1.8V supported\n3.0V not supported\n3.0V supported\n3.3V not supported\n3.3V supported\nAuto CMD12 Error Interrupt Enable\nBlock Gap Event Interrupt Enable\nBuffer Read Ready Interrupt Enable\nBuffer Write Ready Interrupt Enable\nCommand CRC Error Interrupt Enable\nCommand Complete Interrupt Enable\nCommand End Bit Error Interrupt Enable\nCommand Index Error Interrupt Enable\nCard Insertion Interrupt Enable\nCard Interrupt Interrupt Enable\nCard Removal Interrupt Enable\nCommand Timeout Error Interrupt Enable\nData CRC Error Interrupt Enable\nData End Bit Error Interrupt Enable\nDMA Interrupt Enable\nDMA Error Interrupt Enable\nData Timeout Error Interrupt Enable\nRe-Tuning Event Interrupt Enable\nTransfer Complete Interrupt Enable\nTuning Error Interrupt Enable\nTuning Pass Interrupt Enable\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnable\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nAuto CMD12 Error\nBlock Gap Event\nBuffer Read Ready\nBuffer Write Ready\nCommand Complete\nCommand CRC Error\nCommand End Bit Error\nCommand Index Error\nCard Insertion\nCard Interrupt\nCard Removal\nCommand Timeout Error\nData CRC Error\nData End Bit Error\nDMA Interrupt\nDMA Error\nData Timeout Error\nRe-Tuning Event: (only for SD3.0 SDR104 mode and EMMC …\nTransfer Complete\nTuning Error: (only for SD3.0 SDR104 mode and EMMC HS200 …\nTuning Pass:(only for SD3.0 SDR104 mode and EMMC HS200 …\nNo Error\nError\nNo block gap event\nTransaction stopped at block gap\nNot ready to read buffer\nReady to read buffer\nNot ready to write buffer\nReady to write buffer:\nCommand not complete\nCommand complete\nNo Error\nCRC Error Generated.\nNo Error\nEnd Bit Error Generated\nNo Error\nError\nCard state unstable or removed\nCard inserted\nNo Card Interrupt\nGenerate Card Interrupt\nCard state unstable or inserted\nCard removed\nNo Error\nTime out\nNo Error\nError\nNo Error\nError\nNo DMA Interrupt\nDMA Interrupt is generated\nNo Error\nError\nNo Error\nTime out\nRe-Tuning is not required\nRe-Tuning should be performed\nTransfer not complete\nTransfer complete\nAuto CMD12 Error Status Enable\nBlock Gap Event Status Enable\nBuffer Read Ready Status Enable\nBuffer Write Ready Status Enable\nCommand CRC Error Status Enable\nCommand Complete Status Enable\nCommand End Bit Error Status Enable\nCommand Index Error Status Enable\nCard Insertion Status Enable\nCard Interrupt Status Enable\nCard Removal Status Enable\nCommand Timeout Error Status Enable\nData CRC Error Status Enable\nData End Bit Error Status Enable\nDMA Interrupt Status Enable\nDMA Error Status Enable\nData Timeout Error Status Enable\nRe-Tuning Event Status Enable\nTransfer Complete Status Enable\nTuning Error Status Enable\nTuning Pass Status Enable\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nMasked\nEnabled\nAuto CMD12 Enable\nAuto CMD23 Enable\nAuto Tuning Enable (Only used for SD3.0, SDR104 mode and …\nBlock Count Enable\nDual Data Rate mode selection\nDMA Enable\nData Transfer Direction Select\nExecute Tuning: (Only used for SD3.0, SDR104 mode and EMMC …\nFeedback Clock Source Selection (Only used for SD3.0, …\nMulti / Single Block Select\nNIBBLE_POS\nSMP_CLK_SEL\nDisable\nEnable\nDisable auto tuning\nEnable auto tuning\nDisable\nEnable\nDisable\nEnable\nWrite (Host to Card)\nRead (Card to Host)\nNot Tuned or Tuning Completed\nExecute Tuning\nFeedback clock comes from the loopback CLK\nFeedback clock comes from the ipp_card_clk_out\nSingle Block\nMultiple Blocks\nFixed clock is used to sample data / cmd\nTuned clock is used to sample data / cmd\nAUTO_SABG_EN\nBOOT_ACK\nBOOT_BLK_CNT\nBOOT_EN\nBOOT_MODE\nDisable Time Out\nDTOCV_ACK\nNo ack\nAck\nFast boot disable\nFast boot enable\nNormal boot\nAlternative boot\nEnable time out\nDisable time out\nSDCLK x 2^14\nSDCLK x 2^15\nSDCLK x 2^28\nSDCLK x 2^29\nSDCLK x 2^16\nSDCLK x 2^17\nSDCLK x 2^18\nSDCLK x 2^19\nSDCLK x 2^20\nSDCLK x 2^21\nBuffer Read Enable\nBuffer Write Enable\nCommand Inhibit (DATA)\nCard Detect Pin Level\nCommand Inhibit (CMD)\nCard Inserted\nCMD Line Signal Level\nData Line Active\nDATA[7:0] Line Signal Level\nHCLK Gated Off Internally\nIPG_CLK Gated Off Internally\nIPG_PERCLK Gated Off Internally\nRead Transfer Active\nRe-Tuning Request (only for SD3.0 SDR104 mode and EMMC …\nSD Clock Gated Off Internally\nSD Clock Stable\nTape Select Change Done\nWrite Protect Switch Pin Level\nWrite Transfer Active\nRead disable\nRead enable\nWrite disable\nWrite enable\nCan issue command which uses the DATA line\nCannot issue command which uses the DATA line\nNo card present (CD_B = 1)\nCard present (CD_B = 0)\nCan issue command using only CMD line\nCannot issue command\nPower on Reset or No Card\nCard Inserted\nDATA Line Inactive\nDATA Line Active\nData 0 line signal level\nData 1 line signal level\nData 2 line signal level\nData 3 line signal level\nData 4 line signal level\nData 5 line signal level\nData 6 line signal level\nData 7 line signal level\nHCLK is active.\nHCLK is gated off.\nIPG_CLK is active.\nIPG_CLK is gated off.\nIPG_PERCLK is active.\nIPG_PERCLK is gated off.\nNo valid data\nTransferring data\nFixed or well tuned sampling clock\nSampling clock needs re-tuning\nSD Clock is active.\nSD Clock is gated off.\nClock is changing frequency and not stable.\nClock is stable.\nDelay cell select change is not finished.\nDelay cell select change is finished.\nWrite protected (WP = 1)\nWrite enabled (WP = 0)\nNo valid data\nTransferring data\nBURST length enable for INCR, INCR4 / INCR8 / INCR16, …\nCard Detect Signal Selection\nCard Detect Test Level\nContinue Request\nDATA3 as Card Detection Pin\nDMA Select\nData Transfer Width\nEndian Mode\nInterrupt At Block Gap\nLED Control\nNON_EXACT_BLK_RD\nRD_DONE_NO_8CLK\nRead Wait Control\nStop At Block Gap Request\nWakeup Event Enable On SD Card Insertion\nWakeup Event Enable On Card Interrupt\nWakeup Event Enable On SD Card Removal\nBurst length is enabled for INCR\nCard Detection Level is selected (for normal purpose).\nCard Detection Test Level is selected (for test purpose).\nCard Detect Test Level is 0, no card inserted\nCard Detect Test Level is 1, card inserted\nNo effect\nRestart\nDATA3 does not monitor Card Insertion\nDATA3 as Card Detection Pin\nNo DMA or Simple DMA is selected\nADMA1 is selected\nADMA2 is selected\n1-bit mode\n4-bit mode\n8-bit mode\nBig Endian Mode\nHalf Word Big Endian Mode\nLittle Endian Mode\nDisabled\nEnabled\nLED off\nLED on\nThe block read is exact block read. Host driver doesn’t …\nThe block read is non-exact block read. Host driver needs …\nDisable Read Wait Control, and stop SD Clock at block gap …\nEnable Read Wait Control, and assert Read Wait without …\nTransfer\nStop\nDisable\nEnable\nDisable\nEnable\nDisable\nEnable\nData Timeout Counter Value\nDivisor\nInitialization Active\nIPP_RST_N\nSoftware Reset For ALL\nSoftware Reset For CMD Line\nSoftware Reset For DATA Line\nReset Tuning\nSDCLK Frequency Select\nSDCLK x 2 14\nSDCLK x 2 15\nSDCLK x 2 27\nSDCLK x 2 28\nSDCLK x 2 29\nDivide-by-1\nDivide-by-2\nDivide-by-15\nDivide-by-16\nNo Reset\nReset\nNo Reset\nReset\nNo Reset\nReset\nSTD_TUNING_EN\nTUNING_COUNTER\nTUNING_START_TAP\nTUNING_STEP\nTUNING_WINDOW\nAC12_WR_CHKBUSY_EN\nCMD_BYTE_EN\nConflict check enable.\nCRC Check Disable\nFRC_SDCLK_ON\nVoltage Selection\nArgument2 register enable for ACMD23\nBUS reset\nCard Interrupt Detection Test\ndebug for part dll\nTUNING_1bit_EN\nTUNING_8bit_EN\nTUNING_CMD_EN\nDisable\nArgument2 register enable for ACMD23 sharing with SDMA …\nCheck the card interrupt only when DATA3 is high.\nCheck the card interrupt by ignoring the status of DATA3.\nAuto tuning circuit does not check the CMD line.\nAuto tuning circuit checks the CMD line.\nDo not check busy after auto CMD12 for write data packet\nCheck busy after auto CMD12 for write data packet\nDisable\nEnable\nConflict check disable\nConflict check enable\nCheck CRC16 for every read data packet and check CRC bits …\nIgnore CRC16 check for every read data packet and ignore …\nCLK active or inactive is fully controlled by the hardware.\nForce CLK active.\nChange the voltage to high voltage range, around 3.0 V\nChange the voltage to low voltage range, around 1.8 V\nRead Burst Length Due to system restriction, the actual …\nRead Watermark Level\nWrite Burst Length Due to system restriction, the actual …\nWrite Watermark Level\nWDOG\nWatchdog Control Register\nWatchdog Control Register\nWDOG\nWDOG\nWatchdog Interrupt Control Register\nWatchdog Interrupt Control Register\nWatchdog Miscellaneous Control Register\nWatchdog Miscellaneous Control Register\nWatchdog Reset Status Register\nWatchdog Reset Status Register\nWatchdog Service Register\nWatchdog Service Register\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nsoftware reset extension, an option way to generate …\nSRS\nWDA\nWDBG\nWDE\nWDT\nWDW\nWDZST\nWT\nusing original way to generate software reset (default)\nusing new way to generate software reset.\nAssert system reset signal.\nNo effect on the system (Default).\nAssert WDOG_B output.\nNo effect on system (Default).\nContinue WDOG timer operation (Default).\nSuspend the watchdog timer.\nDisable the Watchdog (Default).\nEnable the Watchdog.\nNo effect on WDOG_B (Default).\nAssert WDOG_B upon a Watchdog Time-out event.\nContinue WDOG timer operation (Default).\nSuspend WDOG timer operation.\nContinue timer operation (Default).\nSuspend the watchdog timer.\n0.5 Seconds (Default).\n1.0 Seconds.\n1.5 Seconds.\n128 Seconds.\n2.0 Seconds.\nWICT\nWIE\nWTIS\nWICT[7:0] = Time duration between interrupt and time-out …\nWICT[7:0] = Time duration between interrupt and time-out …\nWICT[7:0] = Time duration between interrupt and time-out …\nWICT[7:0] = Time duration between interrupt and time-out …\nDisable Interrupt (Default).\nEnable Interrupt.\nNo interrupt has occurred (Default).\nInterrupt has occurred\nPDE\nPower Down Counter of WDOG is disabled.\nPower Down Counter of WDOG is enabled (Default).\nPOR\nSFTW\nTOUT\nReset is not the result of a power on reset.\nReset is the result of a power on reset.\nReset is not the result of a software reset.\nReset is the result of a software reset.\nReset is not the result of a WDOG timeout.\nReset is the result of a WDOG timeout.\nWSR\nWrite to the Watchdog Service Register (WDOG_WSR).\nWrite to the Watchdog Service Register (WDOG_WSR).\nCrossbar A Control Register 0\nCrossbar A Control Register 0\nCrossbar A Control Register 1\nCrossbar A Control Register 1\nCrossbar Switch\nCrossbar A Select Register 0\nCrossbar A Select Register 0\nCrossbar A Select Register 1\nCrossbar A Select Register 1\nCrossbar A Select Register 10\nCrossbar A Select Register 10\nCrossbar A Select Register 11\nCrossbar A Select Register 11\nCrossbar A Select Register 12\nCrossbar A Select Register 12\nCrossbar A Select Register 13\nCrossbar A Select Register 13\nCrossbar A Select Register 14\nCrossbar A Select Register 14\nCrossbar A Select Register 15\nCrossbar A Select Register 15\nCrossbar A Select Register 16\nCrossbar A Select Register 16\nCrossbar A Select Register 17\nCrossbar A Select Register 17\nCrossbar A Select Register 18\nCrossbar A Select Register 18\nCrossbar A Select Register 19\nCrossbar A Select Register 19\nCrossbar A Select Register 2\nCrossbar A Select Register 2\nCrossbar A Select Register 20\nCrossbar A Select Register 20\nCrossbar A Select Register 21\nCrossbar A Select Register 21\nCrossbar A Select Register 22\nCrossbar A Select Register 22\nCrossbar A Select Register 23\nCrossbar A Select Register 23\nCrossbar A Select Register 24\nCrossbar A Select Register 24\nCrossbar A Select Register 25\nCrossbar A Select Register 25\nCrossbar A Select Register 26\nCrossbar A Select Register 26\nCrossbar A Select Register 27\nCrossbar A Select Register 27\nCrossbar A Select Register 28\nCrossbar A Select Register 28\nCrossbar A Select Register 29\nCrossbar A Select Register 29\nCrossbar A Select Register 3\nCrossbar A Select Register 3\nCrossbar A Select Register 30\nCrossbar A Select Register 30\nCrossbar A Select Register 31\nCrossbar A Select Register 31\nCrossbar A Select Register 32\nCrossbar A Select Register 32\nCrossbar A Select Register 33\nCrossbar A Select Register 33\nCrossbar A Select Register 34\nCrossbar A Select Register 34\nCrossbar A Select Register 35\nCrossbar A Select Register 35\nCrossbar A Select Register 36\nCrossbar A Select Register 36\nCrossbar A Select Register 37\nCrossbar A Select Register 37\nCrossbar A Select Register 38\nCrossbar A Select Register 38\nCrossbar A Select Register 39\nCrossbar A Select Register 39\nCrossbar A Select Register 4\nCrossbar A Select Register 4\nCrossbar A Select Register 40\nCrossbar A Select Register 40\nCrossbar A Select Register 41\nCrossbar A Select Register 41\nCrossbar A Select Register 42\nCrossbar A Select Register 42\nCrossbar A Select Register 43\nCrossbar A Select Register 43\nCrossbar A Select Register 44\nCrossbar A Select Register 44\nCrossbar A Select Register 45\nCrossbar A Select Register 45\nCrossbar A Select Register 46\nCrossbar A Select Register 46\nCrossbar A Select Register 47\nCrossbar A Select Register 47\nCrossbar A Select Register 48\nCrossbar A Select Register 48\nCrossbar A Select Register 49\nCrossbar A Select Register 49\nCrossbar A Select Register 5\nCrossbar A Select Register 5\nCrossbar A Select Register 50\nCrossbar A Select Register 50\nCrossbar A Select Register 51\nCrossbar A Select Register 51\nCrossbar A Select Register 52\nCrossbar A Select Register 52\nCrossbar A Select Register 53\nCrossbar A Select Register 53\nCrossbar A Select Register 54\nCrossbar A Select Register 54\nCrossbar A Select Register 55\nCrossbar A Select Register 55\nCrossbar A Select Register 56\nCrossbar A Select Register 56\nCrossbar A Select Register 57\nCrossbar A Select Register 57\nCrossbar A Select Register 58\nCrossbar A Select Register 58\nCrossbar A Select Register 59\nCrossbar A Select Register 59\nCrossbar A Select Register 6\nCrossbar A Select Register 6\nCrossbar A Select Register 60\nCrossbar A Select Register 60\nCrossbar A Select Register 61\nCrossbar A Select Register 61\nCrossbar A Select Register 62\nCrossbar A Select Register 62\nCrossbar A Select Register 63\nCrossbar A Select Register 63\nCrossbar A Select Register 64\nCrossbar A Select Register 64\nCrossbar A Select Register 65\nCrossbar A Select Register 65\nCrossbar A Select Register 7\nCrossbar A Select Register 7\nCrossbar A Select Register 8\nCrossbar A Select Register 8\nCrossbar A Select Register 9\nCrossbar A Select Register 9\nCrossbar Switch\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nDMA Enable for XBAR_OUT0\nDMA Enable for XBAR_OUT1\nActive edge for edge detection on XBAR_OUT0\nActive edge for edge detection on XBAR_OUT1\nInterrupt Enable for XBAR_OUT0\nInterrupt Enable for XBAR_OUT1\nEdge detection status for XBAR_OUT0\nEdge detection status for XBAR_OUT1\nDMA disabled\nDMA enabled\nDMA disabled\nDMA enabled\nSTS0 never asserts\nSTS0 asserts on rising edges of XBAR_OUT0\nSTS0 asserts on falling edges of XBAR_OUT0\nSTS0 asserts on rising and falling edges of XBAR_OUT0\nSTS1 never asserts\nSTS1 asserts on rising edges of XBAR_OUT1\nSTS1 asserts on falling edges of XBAR_OUT1\nSTS1 asserts on rising and falling edges of XBAR_OUT1\nInterrupt disabled\nInterrupt enabled\nInterrupt disabled\nInterrupt enabled\nActive edge not yet detected on XBAR_OUT0\nActive edge detected on XBAR_OUT0\nActive edge not yet detected on XBAR_OUT1\nActive edge detected on XBAR_OUT1\nDMA Enable for XBAR_OUT2\nDMA Enable for XBAR_OUT3\nActive edge for edge detection on XBAR_OUT2\nActive edge for edge detection on XBAR_OUT3\nInterrupt Enable for XBAR_OUT2\nInterrupt Enable for XBAR_OUT3\nEdge detection status for XBAR_OUT2\nEdge detection status for XBAR_OUT3\nDMA disabled\nDMA enabled\nDMA disabled\nDMA enabled\nSTS2 never asserts\nSTS2 asserts on rising edges of XBAR_OUT2\nSTS2 asserts on falling edges of XBAR_OUT2\nSTS2 asserts on rising and falling edges of XBAR_OUT2\nSTS3 never asserts\nSTS3 asserts on rising edges of XBAR_OUT3\nSTS3 asserts on falling edges of XBAR_OUT3\nSTS3 asserts on rising and falling edges of XBAR_OUT3\nInterrupt disabled\nInterrupt enabled\nInterrupt disabled\nInterrupt enabled\nActive edge not yet detected on XBAR_OUT2\nActive edge detected on XBAR_OUT2\nActive edge not yet detected on XBAR_OUT3\nActive edge detected on XBAR_OUT3\nInput (XBARA_INn) to be muxed to XBARA_OUT0 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT1 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT2 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT3 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT20 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT21 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT22 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT23 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT24 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT25 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT26 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT27 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT28 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT29 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT30 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT31 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT32 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT33 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT34 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT35 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT36 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT37 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT38 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT39 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT4 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT5 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT40 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT41 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT42 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT43 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT44 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT45 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT46 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT47 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT48 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT49 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT50 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT51 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT52 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT53 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT54 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT55 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT56 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT57 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT58 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT59 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT6 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT7 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT60 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT61 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT62 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT63 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT64 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT65 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT66 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT67 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT68 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT69 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT70 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT71 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT72 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT73 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT74 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT75 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT76 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT77 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT78 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT79 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT8 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT9 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT80 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT81 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT82 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT83 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT84 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT85 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT86 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT87 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT88 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT89 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT90 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT91 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT92 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT93 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT94 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT95 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT96 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT97 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT98 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT99 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT10 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT11 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT100 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT101 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT102 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT103 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT104 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT105 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT106 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT107 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT108 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT109 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT110 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT111 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT112 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT113 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT114 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT115 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT116 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT117 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT118 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT119 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT12 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT13 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT120 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT121 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT122 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT123 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT124 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT125 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT126 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT127 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT128 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT129 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT130 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT131 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT14 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT15 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT16 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT17 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT18 (refer to …\nInput (XBARA_INn) to be muxed to XBARA_OUT19 (refer to …\nCrossbar Switch\nCrossbar B Select Register 0\nCrossbar B Select Register 0\nCrossbar B Select Register 1\nCrossbar B Select Register 1\nCrossbar B Select Register 2\nCrossbar B Select Register 2\nCrossbar B Select Register 3\nCrossbar B Select Register 3\nCrossbar B Select Register 4\nCrossbar B Select Register 4\nCrossbar B Select Register 5\nCrossbar B Select Register 5\nCrossbar B Select Register 6\nCrossbar B Select Register 6\nCrossbar B Select Register 7\nCrossbar B Select Register 7\nCrossbar Switch\nCrossbar Switch\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nInput (XBARB_INn) to be muxed to XBARB_OUT0 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT1 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT2 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT3 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT4 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT5 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT6 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT7 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT8 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT9 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT10 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT11 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT12 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT13 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT14 (refer to …\nInput (XBARB_INn) to be muxed to XBARB_OUT15 (refer to …\nXTAL OSC (LP) Control Register\nXTAL OSC (LP) Control Register\nXTAL OSC (LP) Control Register\nXTAL OSC (LP) Control Register\nXTAL OSC (LP) Control Register\nXTAL OSC (LP) Control Register\nXTAL OSC (LP) Control Register\nXTAL OSC (LP) Control Register\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nMiscellaneous Register 0\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 0 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 1 Register\nXTAL OSC Configuration 2 Register\nXTAL OSC Configuration 2 Register\nXTAL OSC Configuration 2 Register\nXTAL OSC Configuration 2 Register\nXTAL OSC Configuration 2 Register\nXTAL OSC Configuration 2 Register\nXTAL OSC Configuration 2 Register\nXTAL OSC Configuration 2 Register\nXTALOSC24M\nXTALOSC24M\nReturns the argument unchanged.\nAcquire a vaild, but possibly aliased, instance.\nCalls <code>U::from(self)</code>.\nReturns the instance number <code>N</code> for a peripheral instance.\nCPU power gate control. Used as software override. Test …\nDisplay logic power gate control. Used as software …\nGPU power gate control. Used as software mask. Set to zero …\nL1 power gate control. Used as software override. Not …\nL2 power gate control. Used as software override. Not …\nBandgap select. Not related to oscillator.\nLow power bandgap test bit. Not related to oscillator.\nDisplay power gate control. Used as software mask. Set to …\nSelect the source for the 24MHz clock.\nFor debug purposes only\nRC Osc. enable control.\nLow power reftop ibias disable. Not related to oscillator.\nSpecifies the time delay between when the 24MHz xtal is …\nStatus of the 24MHz xtal oscillator.\nNormal power bandgap\nLow power bandgap\nXTAL OSC\nRC OSC\nUse XTAL OSC to source the 24MHz clock\nUse RC OSC\n0.25ms\n0.5ms\n1ms\n2ms\nNot stable\nStable and ready to use\nCPU power gate control. Used as software override. Test …\nDisplay logic power gate control. Used as software …\nGPU power gate control. Used as software mask. Set to zero …\nL1 power gate control. Used as software override. Not …\nL2 power gate control. Used as software override. Not …\nBandgap select. Not related to oscillator.\nLow power bandgap test bit. Not related to oscillator.\nDisplay power gate control. Used as software mask. Set to …\nSelect the source for the 24MHz clock.\nFor debug purposes only\nRC Osc. enable control.\nLow power reftop ibias disable. Not related to oscillator.\nSpecifies the time delay between when the 24MHz xtal is …\nStatus of the 24MHz xtal oscillator.\nNormal power bandgap\nLow power bandgap\nXTAL OSC\nRC OSC\nUse XTAL OSC to source the 24MHz clock\nUse RC OSC\n0.25ms\n0.5ms\n1ms\n2ms\nNot stable\nStable and ready to use\nCPU power gate control. Used as software override. Test …\nDisplay logic power gate control. Used as software …\nGPU power gate control. Used as software mask. Set to zero …\nL1 power gate control. Used as software override. Not …\nL2 power gate control. Used as software override. Not …\nBandgap select. Not related to oscillator.\nLow power bandgap test bit. Not related to oscillator.\nDisplay power gate control. Used as software mask. Set to …\nSelect the source for the 24MHz clock.\nFor debug purposes only\nRC Osc. enable control.\nLow power reftop ibias disable. Not related to oscillator.\nSpecifies the time delay between when the 24MHz xtal is …\nStatus of the 24MHz xtal oscillator.\nNormal power bandgap\nLow power bandgap\nXTAL OSC\nRC OSC\nUse XTAL OSC to source the 24MHz clock\nUse RC OSC\n0.25ms\n0.5ms\n1ms\n2ms\nNot stable\nStable and ready to use\nCPU power gate control. Used as software override. Test …\nDisplay logic power gate control. Used as software …\nGPU power gate control. Used as software mask. Set to zero …\nL1 power gate control. Used as software override. Not …\nL2 power gate control. Used as software override. Not …\nBandgap select. Not related to oscillator.\nLow power bandgap test bit. Not related to oscillator.\nDisplay power gate control. Used as software mask. Set to …\nSelect the source for the 24MHz clock.\nFor debug purposes only\nRC Osc. enable control.\nLow power reftop ibias disable. Not related to oscillator.\nSpecifies the time delay between when the 24MHz xtal is …\nStatus of the 24MHz xtal oscillator.\nNormal power bandgap\nLow power bandgap\nXTAL OSC\nRC OSC\nUse XTAL OSC to source the 24MHz clock\nUse RC OSC\n0.25ms\n0.5ms\n1ms\n2ms\nNot stable\nStable and ready to use\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to oscillator.\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.Not related to …\nPredivider for the source clock of the PLL’s. Not …\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except rtc powered down on stop mode assertion. …\nCertain analog functions such as certain regulators left …\nXtalOsc=off, RCOsc=on, Old BG=on, New BG=off.\nXtalOsc=off, RCOsc=on, Old BG=off, New BG=on.\nDivide by 1\nDivide by 2\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to oscillator.\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.Not related to …\nPredivider for the source clock of the PLL’s. Not …\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except rtc powered down on stop mode assertion. …\nCertain analog functions such as certain regulators left …\nXtalOsc=off, RCOsc=on, Old BG=on, New BG=off.\nXtalOsc=off, RCOsc=on, Old BG=off, New BG=on.\nDivide by 1\nDivide by 2\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to oscillator.\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.Not related to …\nPredivider for the source clock of the PLL’s. Not …\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except rtc powered down on stop mode assertion. …\nCertain analog functions such as certain regulators left …\nXtalOsc=off, RCOsc=on, Old BG=on, New BG=off.\nXtalOsc=off, RCOsc=on, Old BG=off, New BG=on.\nDivide by 1\nDivide by 2\nThis bit allows disabling the clock gate (always ungated) …\nThis field specifies the delay between powering up the …\nThis bit controls a switch from VDD_HIGH_IN to VDD_SNVS_IN.\nThis field determines the bias current in the 24MHz …\nStatus bit that signals that the output of the 24-MHz …\nThis bit enables the detector that signals when the 24MHz …\nControl bit to power-down the analog bandgap reference …\nControl bit to disable the self-bias circuit in the analog …\nNot related to oscillator.\nStatus bit that signals the analog bandgap voltage is up …\nThis field indicates which chip source is being used for …\nConfigure the analog behavior in stop mode.Not related to …\nPredivider for the source clock of the PLL’s. Not …\nThis field powers down the 24M crystal oscillator if set …\nAllow the logic to automatically gate the clock when the …\nPrevent the logic from ever gating off the clock.\n0.5ms\n1.0ms\n2.0ms\n3.0ms\n4.0ms\n5.0ms\n6.0ms\n7.0ms\nTurn on the switch\nTurn off the switch\nDecrease current by 12.5%\nDecrease current by 25.0%\nDecrease current by 37.5%\nNominal\nUses coarse bias currents for startup\nUses bandgap-based bias currents for best performance.\nNominal VBG\nVBG+0.78%\nVBG+1.56%\nVBG+2.34%\nVBG-0.78%\nVBG-1.56%\nVBG-2.34%\nVBG-3.12%\nInternal ring oscillator\nRTC_XTAL\nAll analog except rtc powered down on stop mode assertion. …\nCertain analog functions such as certain regulators left …\nXtalOsc=off, RCOsc=on, Old BG=on, New BG=off.\nXtalOsc=off, RCOsc=on, Old BG=off, New BG=on.\nDivide by 1\nDivide by 2\nBypasses any calculated RC tuning value and uses the …\nEnables the tuning logic to calculate new RC tuning values\nNegative hysteresis value\nPositive hysteresis value\nInvert the stepping of the calculated RC tuning value.\nRC osc. tuning values.\nThe current tuning value in use.\nStart/stop bit for the RC tuning calculation logic. If …\nBypasses any calculated RC tuning value and uses the …\nEnables the tuning logic to calculate new RC tuning values\nNegative hysteresis value\nPositive hysteresis value\nInvert the stepping of the calculated RC tuning value.\nRC osc. tuning values.\nThe current tuning value in use.\nStart/stop bit for the RC tuning calculation logic. If …\nBypasses any calculated RC tuning value and uses the …\nEnables the tuning logic to calculate new RC tuning values\nNegative hysteresis value\nPositive hysteresis value\nInvert the stepping of the calculated RC tuning value.\nRC osc. tuning values.\nThe current tuning value in use.\nStart/stop bit for the RC tuning calculation logic. If …\nBypasses any calculated RC tuning value and uses the …\nEnables the tuning logic to calculate new RC tuning values\nNegative hysteresis value\nPositive hysteresis value\nInvert the stepping of the calculated RC tuning value.\nRC osc. tuning values.\nThe current tuning value in use.\nStart/stop bit for the RC tuning calculation logic. If …\nThe current tuning value in use.\nThe target count used to tune the RC OSC frequency\nThe current tuning value in use.\nThe target count used to tune the RC OSC frequency\nThe current tuning value in use.\nThe target count used to tune the RC OSC frequency\nThe current tuning value in use.\nThe target count used to tune the RC OSC frequency\nFlag indicates that the count_1m count wasn’t reached …\nThe target count used to tune the 1MHz clock frequency\nEnable the 1MHz clock output. 0 - disabled; 1 - enabled.\nMux the corrected or uncorrected 1MHz clock to the output\nFlag indicates that the count_1m count wasn’t reached …\nThe target count used to tune the 1MHz clock frequency\nEnable the 1MHz clock output. 0 - disabled; 1 - enabled.\nMux the corrected or uncorrected 1MHz clock to the output\nFlag indicates that the count_1m count wasn’t reached …\nThe target count used to tune the 1MHz clock frequency\nEnable the 1MHz clock output. 0 - disabled; 1 - enabled.\nMux the corrected or uncorrected 1MHz clock to the output\nFlag indicates that the count_1m count wasn’t reached …\nThe target count used to tune the 1MHz clock frequency\nEnable the 1MHz clock output. 0 - disabled; 1 - enabled.\nMux the corrected or uncorrected 1MHz clock to the output")